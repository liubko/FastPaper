__DEV__ = 
false;
(
function(global){


if(global.require){
return;}


var __DEV__=global.__DEV__;

var toString=Object.prototype.toString;













var modulesMap={}, 






dependencyMap={}, 



predefinedRefCounts={}, 

_counter=0, 

REQUIRE_WHEN_READY=1, 
USED_AS_TRANSPORT=2, 

hop=Object.prototype.hasOwnProperty;

function _debugUnresolvedDependencies(names){
var unresolved=Array.prototype.slice.call(names);
var visited={};
var ii, name, module, dependency;

while(unresolved.length) {
name = unresolved.shift();
if(visited[name]){
continue;}

visited[name] = true;

module = modulesMap[name];
if(!module || !module.waiting){
continue;}


for(ii = 0; ii < module.dependencies.length; ii++) {
dependency = module.dependencies[ii];
if(!modulesMap[dependency] || modulesMap[dependency].waiting){
unresolved.push(dependency);}}}




for(name in visited) if(hop.call(visited, name)){
unresolved.push(name);}


var messages=[];
for(ii = 0; ii < unresolved.length; ii++) {
name = unresolved[ii];
var message=name;
module = modulesMap[name];
if(!module){
message += ' is not defined';}else 
if(!module.waiting){
message += ' is ready';}else 
{
var unresolvedDependencies=[];
for(var jj=0; jj < module.dependencies.length; jj++) {
dependency = module.dependencies[jj];
if(!modulesMap[dependency] || modulesMap[dependency].waiting){
unresolvedDependencies.push(dependency);}}


message += ' is waiting for ' + unresolvedDependencies.join(', ');}

messages.push(message);}

return messages.join('\n');}





function ModuleError(msg){
this.name = 'ModuleError';
this.message = msg;
this.stack = Error(msg).stack;
this.framesToPop = 2;}

ModuleError.prototype = Object.create(Error.prototype);
ModuleError.prototype.constructor = ModuleError;

var _performance=
global.performance || 
global.msPerformance || 
global.webkitPerformance || {};

if(!_performance.now){
_performance = global.Date;}


var _now=_performance?
_performance.now.bind(_performance):function(){return 0;};

var _factoryStackCount=0;
var _factoryTime=0;
var _totalFactories=0;
























































function require(id){
var module=modulesMap[id], dep, i, msg;
if(module && module.exports){


if(module.refcount-- === 1){
delete modulesMap[id];}

return module.exports;}


if(global.ErrorUtils && !global.ErrorUtils.inGuard()){
return ErrorUtils.applyWithGuard(require, this, arguments);}


if(!module){
msg = 'Requiring unknown module "' + id + '"';
if(__DEV__){
msg += '. If you are sure the module is there, try restarting the packager.';}

throw new ModuleError(msg);}


if(module.hasError){
throw new ModuleError(
'Requiring module "' + id + '" which threw an exception');}



if(module.waiting){
throw new ModuleError(
'Requiring module "' + id + '" with unresolved dependencies: ' + 
_debugUnresolvedDependencies([id]));}



var exports=module.exports = {};
var factory=module.factory;
if(toString.call(factory) === '[object Function]'){
var args=[], 
dependencies=module.dependencies, 
length=dependencies.length, 
ret;
if(module.special & USED_AS_TRANSPORT){
length = Math.min(length, factory.length);}

try{
for(i = 0; args.length < length; i++) {
dep = dependencies[i];
if(!module.inlineRequires[dep]){
args.push(dep === 'module'?module:
dep === 'exports'?exports:
require.call(null, dep));}}



++_totalFactories;
if(_factoryStackCount++ === 0){
_factoryTime -= _now();}

try{
ret = factory.apply(module.context || global, args);}
catch(e) {
if(modulesMap.ex && modulesMap.erx){


var ex=require.call(null, 'ex');
var erx=require.call(null, 'erx');
var messageWithParams=erx(e.message);
if(messageWithParams[0].indexOf(' from module "%s"') < 0){
messageWithParams[0] += ' from module "%s"';
messageWithParams[messageWithParams.length] = id;}

e.message = ex.apply(null, messageWithParams);}

throw e;}finally 
{
if(--_factoryStackCount === 0){
_factoryTime += _now();}}}


catch(e) {
module.hasError = true;
module.exports = null;
throw e;}

if(ret){
if(__DEV__){
if(typeof ret != 'object' && typeof ret != 'function'){
throw new ModuleError(
'Factory for module "' + id + '" returned ' + 
'an invalid value "' + ret + '". ' + 
'Returned value should be either a function or an object.');}}



module.exports = ret;}}else 

{
module.exports = factory;}




if(module.refcount-- === 1){
delete modulesMap[id];}

return module.exports;}


require.__getFactoryTime = function(){
return (_factoryStackCount?_now():0) + _factoryTime;};


require.__getTotalFactories = function(){
return _totalFactories;};

























































function define(id, dependencies, factory, 
_special, _context, _refCount, _inlineRequires){
if(dependencies === undefined){
dependencies = [];
factory = id;
id = _uid();}else 
if(factory === undefined){
factory = dependencies;
if(toString.call(id) === '[object Array]'){
dependencies = id;
id = _uid();}else 
{
dependencies = [];}}





var canceler={cancel:_undefine.bind(this, id)};

var record=modulesMap[id];






if(record){
if(_refCount){
record.refcount += _refCount;}


return canceler;}else 
if(!dependencies && !factory && _refCount){


predefinedRefCounts[id] = (predefinedRefCounts[id] || 0) + _refCount;
return canceler;}else 
{

record = {id:id};
record.refcount = (predefinedRefCounts[id] || 0) + (_refCount || 0);
delete predefinedRefCounts[id];}


if(__DEV__){
if(
!factory || 
typeof factory != 'object' && typeof factory != 'function' && 
typeof factory != 'string'){
throw new ModuleError(
'Invalid factory "' + factory + '" for module "' + id + '". ' + 
'Factory should be either a function or an object.');}



if(toString.call(dependencies) !== '[object Array]'){
throw new ModuleError(
'Invalid dependencies for module "' + id + '". ' + 
'Dependencies must be passed as an array.');}}




record.factory = factory;
record.dependencies = dependencies;
record.context = _context;
record.special = _special;
record.inlineRequires = _inlineRequires || {};
record.waitingMap = {};
record.waiting = 0;
record.hasError = false;
modulesMap[id] = record;
_initDependencies(id);

return canceler;}


function _undefine(id){
if(!modulesMap[id]){
return;}


var module=modulesMap[id];
delete modulesMap[id];

for(var dep in module.waitingMap) {
if(module.waitingMap[dep]){
delete dependencyMap[dep][id];}}



for(var ii=0; ii < module.dependencies.length; ii++) {
dep = module.dependencies[ii];
if(modulesMap[dep]){
if(modulesMap[dep].refcount-- === 1){
_undefine(dep);}}else 

if(predefinedRefCounts[dep]){
predefinedRefCounts[dep]--;}}}













































function requireLazy(dependencies, factory, context){
return define(
dependencies, 
factory, 
undefined, 
REQUIRE_WHEN_READY, 
context, 
1);}



function _uid(){
return '__mod__' + _counter++;}


function _addDependency(module, dep){

if(!module.waitingMap[dep] && module.id !== dep){
module.waiting++;
module.waitingMap[dep] = 1;
dependencyMap[dep] || (dependencyMap[dep] = {});
dependencyMap[dep][module.id] = 1;}}



function _initDependencies(id){
var modulesToRequire=[];
var module=modulesMap[id];
var dep, i, subdep;


for(i = 0; i < module.dependencies.length; i++) {
dep = module.dependencies[i];
if(!modulesMap[dep]){
_addDependency(module, dep);}else 
if(modulesMap[dep].waiting){
for(subdep in modulesMap[dep].waitingMap) {
if(modulesMap[dep].waitingMap[subdep]){
_addDependency(module, subdep);}}}}




if(module.waiting === 0 && module.special & REQUIRE_WHEN_READY){
modulesToRequire.push(id);}



if(dependencyMap[id]){
var deps=dependencyMap[id];
var submodule;
dependencyMap[id] = undefined;
for(dep in deps) {
submodule = modulesMap[dep];


for(subdep in module.waitingMap) {
if(module.waitingMap[subdep]){
_addDependency(submodule, subdep);}}



if(submodule.waitingMap[id]){
submodule.waitingMap[id] = undefined;
submodule.waiting--;}

if(submodule.waiting === 0 && 
submodule.special & REQUIRE_WHEN_READY){
modulesToRequire.push(dep);}}}





for(i = 0; i < modulesToRequire.length; i++) {
require.call(null, modulesToRequire[i]);}}



function _register(id, exports){
var module=modulesMap[id] = {id:id};
module.exports = exports;
module.refcount = 0;}




_register('module', 0);
_register('exports', 0);

_register('global', global);
_register('require', require);
_register('requireDynamic', require);
_register('requireLazy', requireLazy);

global.require = require;
global.requireDynamic = require;
global.requireLazy = requireLazy;

require.__debug = {
modules:modulesMap, 
deps:dependencyMap, 
printDependencyInfo:function(){
if(!global.console){
return;}

var names=Object.keys(require.__debug.deps);
global.console.log(_debugUnresolvedDependencies(names));}};









global.__d = function(id, deps, factory, _special, _inlineRequires){
var defaultDeps=['global', 'require', 'requireDynamic', 'requireLazy', 
'module', 'exports'];
define(id, defaultDeps.concat(deps), factory, _special || USED_AS_TRANSPORT, 
null, null, _inlineRequires);};})(


this);
Object.

















assign = function(target, sources){
if(__DEV__){
if(target == null){
throw new TypeError('Object.assign target cannot be null or undefined');}

if(typeof target !== 'object' && typeof target !== 'function'){
throw new TypeError(
'In this environment the target of assign MUST be an object.' + 
'This error is a performance optimization and not spec compliant.');}}




for(var nextIndex=1; nextIndex < arguments.length; nextIndex++) {
var nextSource=arguments[nextIndex];
if(nextSource == null){
continue;}


if(__DEV__){
if(typeof nextSource !== 'object' && 
typeof nextSource !== 'function'){
throw new TypeError(
'In this environment the target of assign MUST be an object.' + 
'This error is a performance optimization and not spec compliant.');}}








for(var key in nextSource) {
if(__DEV__){
var hasOwnProperty=Object.prototype.hasOwnProperty;
if(!hasOwnProperty.call(nextSource, key)){
throw new TypeError(
'One of the sources to assign has an enumerable key on the ' + 
'prototype chain. This is an edge case that we do not support. ' + 
'This error is a performance optimization and not spec compliant.');}}



target[key] = nextSource[key];}}



return target;};
(















function(global){
'use strict';

var OBJECT_COLUMN_NAME='(index)';
var LOG_LEVELS={
trace:0, 
log:1, 
info:2, 
warn:3, 
error:4};


function setupConsole(global){

if(!global.nativeLoggingHook){
return;}


function getNativeLogFunction(level){
return function(){
var str=Array.prototype.map.call(arguments, function(arg){
var ret;
var type=typeof arg;
if(arg === null){
ret = 'null';}else 
if(arg === undefined){
ret = 'undefined';}else 
if(type === 'string'){
ret = '"' + arg + '"';}else 
if(type === 'function'){
try{
ret = arg.toString();}
catch(e) {
ret = '[function unknown]';}}else 

{


try{
ret = JSON.stringify(arg);}
catch(e) {
if(typeof arg.toString === 'function'){
try{
ret = arg.toString();}
catch(E) {}}}}



return ret || '["' + type + '" failed to stringify]';}).
join(', ');
global.nativeLoggingHook(str, level);};}



var repeat=function(element, n){
return Array.apply(null, Array(n)).map(function(){return element;});};


function consoleTablePolyfill(rows){

if(!Array.isArray(rows)){
var data=rows;
rows = [];
for(var key in data) {
if(data.hasOwnProperty(key)){
var row=data[key];
row[OBJECT_COLUMN_NAME] = key;
rows.push(row);}}}



if(rows.length === 0){
global.nativeLoggingHook('', LOG_LEVELS.log);
return;}


var columns=Object.keys(rows[0]).sort();
var stringRows=[];
var columnWidths=[];



columns.forEach(function(k, i){
columnWidths[i] = k.length;
for(var j=0; j < rows.length; j++) {
var cellStr=rows[j][k].toString();
stringRows[j] = stringRows[j] || [];
stringRows[j][i] = cellStr;
columnWidths[i] = Math.max(columnWidths[i], cellStr.length);}});





var joinRow=function(row, space){
var cells=row.map(function(cell, i){
var extraSpaces=repeat(' ', columnWidths[i] - cell.length).join('');
return cell + extraSpaces;});

space = space || ' ';
return cells.join(space + '|' + space);};


var separators=columnWidths.map(function(columnWidth){
return repeat('-', columnWidth).join('');});

var separatorRow=joinRow(separators, '-');
var header=joinRow(columns);
var table=[header, separatorRow];

for(var i=0; i < rows.length; i++) {
table.push(joinRow(stringRows[i]));}






global.nativeLoggingHook('\n' + table.join('\n'), LOG_LEVELS.log);}


global.console = {
error:getNativeLogFunction(LOG_LEVELS.error), 
info:getNativeLogFunction(LOG_LEVELS.info), 
log:getNativeLogFunction(LOG_LEVELS.log), 
warn:getNativeLogFunction(LOG_LEVELS.warn), 
trace:getNativeLogFunction(LOG_LEVELS.trace), 
table:consoleTablePolyfill};}




if(typeof module !== 'undefined'){
module.exports = setupConsole;}else 
{
setupConsole(global);}})(


this);
(















function(global){
var ErrorUtils={
_inGuard:0, 
_globalHandler:null, 
setGlobalHandler:function(fun){
ErrorUtils._globalHandler = fun;}, 

reportError:function(error){
ErrorUtils._globalHandler && ErrorUtils._globalHandler(error);}, 

reportFatalError:function(error){
ErrorUtils._globalHandler && ErrorUtils._globalHandler(error, true);}, 

applyWithGuard:function(fun, context, args){
try{
ErrorUtils._inGuard++;
return fun.apply(context, args);}
catch(e) {
ErrorUtils.reportError(e);}finally 
{
ErrorUtils._inGuard--;}}, 


applyWithGuardIfNeeded:function(fun, context, args){
if(ErrorUtils.inGuard()){
return fun.apply(context, args);}else 
{
ErrorUtils.applyWithGuard(fun, context, args);}}, 


inGuard:function(){
return ErrorUtils._inGuard;}, 

guard:function(fun, name, context){
if(typeof fun !== 'function'){
console.warn('A function must be passed to ErrorUtils.guard, got ', fun);
return null;}

name = name || fun.name || '<generated guard>';
function guarded(){
return (
ErrorUtils.applyWithGuard(
fun, 
context || this, 
arguments, 
null, 
name));}




return guarded;}};


global.ErrorUtils = ErrorUtils;





function setupErrorGuard(){
var onError=function(e){
global.console.error(
'Error: ' + 
'\n stack: ' + e.stack + 
'\n line: ' + e.line + 
'\n message: ' + e.message, 
e);};


global.ErrorUtils.setGlobalHandler(onError);}


setupErrorGuard();})(
this);
if(











!String.prototype.startsWith){
String.prototype.startsWith = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:0;
var start=Math.min(Math.max(pos, 0), string.length);
return string.indexOf(String(search), pos) === start;};}



if(!String.prototype.endsWith){
String.prototype.endsWith = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var stringLength=string.length;
var searchString=String(search);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:stringLength;
var end=Math.min(Math.max(pos, 0), stringLength);
var start=end - searchString.length;
if(start < 0){
return false;}

return string.lastIndexOf(searchString, start) === start;};}



if(!String.prototype.contains){
String.prototype.contains = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:0;
return string.indexOf(String(search), pos) !== -1;};}



if(!String.prototype.repeat){
String.prototype.repeat = function(count){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
count = Number(count) || 0;
if(count < 0 || count === Infinity){
throw RangeError();}

if(count === 1){
return string;}

var result='';
while(count) {
if(count & 1){
result += string;}

if(count >>= 1){
string += string;}}


return result;};}
(









function(undefined){

function findIndex(predicate, context){
if(this == null){
throw new TypeError(
'Array.prototype.findIndex called on null or undefined');}


if(typeof predicate !== 'function'){
throw new TypeError('predicate must be a function');}

var list=Object(this);
var length=list.length >>> 0;
for(var i=0; i < length; i++) {
if(predicate.call(context, list[i], i, list)){
return i;}}


return -1;}


if(!Array.prototype.findIndex){
Object.defineProperty(Array.prototype, 'findIndex', {
enumerable:false, 
writable:true, 
configurable:true, 
value:findIndex});}




if(!Array.prototype.find){
Object.defineProperty(Array.prototype, 'find', {
enumerable:false, 
writable:true, 
configurable:true, 
value:function(predicate, context){
if(this == null){
throw new TypeError(
'Array.prototype.find called on null or undefined');}


var index=findIndex.call(this, predicate, context);
return index === -1?undefined:this[index];}});}})();
__d('FastPaper/index.ios',["js-base64/base64","react-native/Libraries/react-native/react-native","FastPaper/src/App","fluxxor/index","FastPaper/src/stores/index","FastPaper/src/actions/index"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

require("js-base64/base64");

var React=require("react-native/Libraries/react-native/react-native");
var App=require("FastPaper/src/App");
var Fluxxor=require("fluxxor/index");
var stores=require("FastPaper/src/stores/index");
var actions=require("FastPaper/src/actions/index");
var flux=new Fluxxor.Flux(stores, actions);

flux.actions.analytics.launchApp();

flux.stores.settings.on("change", suncQueue);
flux.stores.pocketQueue.on("change", suncQueue);

function suncQueue(){
if(flux.stores.settings.isConnected()){
flux.actions.pocketQueue.sync();}}





























var FastPaper=React.createClass({displayName:"FastPaper", 
render:function(){
return (
React.createElement(App, {flux:flux}));}});




React.AppRegistry.registerComponent("FastPaper", function(){return FastPaper;});});
__d('js-base64/base64',["buffer/index"],function(global, require, requireDynamic, requireLazy, module, exports) {  (









function(global){
'use strict';

var _Base64=global.Base64;
var version='2.1.8';

var buffer;
if(typeof module !== 'undefined' && module.exports){
buffer = require('buffer/index').Buffer;}


var b64chars=
'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
var b64tab=(function(bin){
var t={};
for(var i=0, l=bin.length; i < l; i++) t[bin.charAt(i)] = i;
return t;})(
b64chars);
var fromCharCode=String.fromCharCode;

var cb_utob=function(c){
if(c.length < 2){
var cc=c.charCodeAt(0);
return cc < 128?c:
cc < 2048?fromCharCode(192 | cc >>> 6) + 
fromCharCode(128 | cc & 63):
fromCharCode(224 | cc >>> 12 & 15) + 
fromCharCode(128 | cc >>> 6 & 63) + 
fromCharCode(128 | cc & 63);}else 
{
var cc=65536 + 
(c.charCodeAt(0) - 55296) * 1024 + (
c.charCodeAt(1) - 56320);
return fromCharCode(240 | cc >>> 18 & 7) + 
fromCharCode(128 | cc >>> 12 & 63) + 
fromCharCode(128 | cc >>> 6 & 63) + 
fromCharCode(128 | cc & 63);}};


var re_utob=/[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g;
var utob=function(u){
return u.replace(re_utob, cb_utob);};

var cb_encode=function(ccc){
var padlen=[0, 2, 1][ccc.length % 3], 
ord=ccc.charCodeAt(0) << 16 | 
(ccc.length > 1?ccc.charCodeAt(1):0) << 8 | (
ccc.length > 2?ccc.charCodeAt(2):0), 
chars=[
b64chars.charAt(ord >>> 18), 
b64chars.charAt(ord >>> 12 & 63), 
padlen >= 2?'=':b64chars.charAt(ord >>> 6 & 63), 
padlen >= 1?'=':b64chars.charAt(ord & 63)];

return chars.join('');};

var btoa=global.btoa?function(b){
return global.btoa(b);}:
function(b){
return b.replace(/[\s\S]{1,3}/g, cb_encode);};

var _encode=buffer?function(u){
return (u.constructor === buffer.constructor?u:new buffer(u)).
toString('base64');}:

function(u){return btoa(utob(u));};

var encode=function(u, urisafe){
return !urisafe?
_encode(String(u)):
_encode(String(u)).replace(/[+\/]/g, function(m0){
return m0 == '+'?'-':'_';}).
replace(/=/g, '');};

var encodeURI=function(u){return encode(u, true);};

var re_btou=new RegExp([
'[À-ß][-¿]', 
'[à-ï][-¿]{2}', 
'[ð-÷][-¿]{3}'].
join('|'), 'g');
var cb_btou=function(cccc){
switch(cccc.length){
case 4:
var cp=(7 & cccc.charCodeAt(0)) << 18 | 
(63 & cccc.charCodeAt(1)) << 12 | 
(63 & cccc.charCodeAt(2)) << 6 | 
63 & cccc.charCodeAt(3), 
offset=cp - 65536;
return fromCharCode((offset >>> 10) + 55296) + 
fromCharCode((offset & 1023) + 56320);
case 3:
return fromCharCode(
(15 & cccc.charCodeAt(0)) << 12 | 
(63 & cccc.charCodeAt(1)) << 6 | 
63 & cccc.charCodeAt(2));

default:
return fromCharCode(
(31 & cccc.charCodeAt(0)) << 6 | 
63 & cccc.charCodeAt(1));}};



var btou=function(b){
return b.replace(re_btou, cb_btou);};

var cb_decode=function(cccc){
var len=cccc.length, 
padlen=len % 4, 
n=(len > 0?b64tab[cccc.charAt(0)] << 18:0) | (
len > 1?b64tab[cccc.charAt(1)] << 12:0) | (
len > 2?b64tab[cccc.charAt(2)] << 6:0) | (
len > 3?b64tab[cccc.charAt(3)]:0), 
chars=[
fromCharCode(n >>> 16), 
fromCharCode(n >>> 8 & 255), 
fromCharCode(n & 255)];

chars.length -= [0, 0, 2, 1][padlen];
return chars.join('');};

var atob=global.atob?function(a){
return global.atob(a);}:
function(a){
return a.replace(/[\s\S]{1,4}/g, cb_decode);};

var _decode=buffer?function(a){
return (a.constructor === buffer.constructor?
a:new buffer(a, 'base64')).toString();}:

function(a){return btou(atob(a));};
var decode=function(a){
return _decode(
String(a).replace(/[-_]/g, function(m0){return m0 == '-'?'+':'/';}).
replace(/[^A-Za-z0-9\+\/]/g, ''));};


var noConflict=function(){
var Base64=global.Base64;
global.Base64 = _Base64;
return Base64;};


global.Base64 = {
VERSION:version, 
atob:atob, 
btoa:btoa, 
fromBase64:decode, 
toBase64:encode, 
utob:utob, 
encode:encode, 
encodeURI:encodeURI, 
btou:btou, 
decode:decode, 
noConflict:noConflict};


if(typeof Object.defineProperty === 'function'){
var noEnum=function(v){
return {value:v, enumerable:false, writable:true, configurable:true};};

global.Base64.extendString = function(){
Object.defineProperty(
String.prototype, 'fromBase64', noEnum(function(){
return decode(this);}));

Object.defineProperty(
String.prototype, 'toBase64', noEnum(function(urisafe){
return encode(this, urisafe);}));

Object.defineProperty(
String.prototype, 'toBase64URI', noEnum(function(){
return encode(this, true);}));};}




if(global['Meteor']){
Base64 = global.Base64;}})(

this);});
__d('buffer/index',["base64-js/lib/b64","ieee754/index","is-array/index"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 






base64=require('base64-js/lib/b64');
var ieee754=require('ieee754/index');
var isArray=require('is-array/index');

exports.Buffer = Buffer;
exports.SlowBuffer = SlowBuffer;
exports.INSPECT_MAX_BYTES = 50;
Buffer.poolSize = 8192;

var kMaxLength=1073741823;
var rootParent={};























Buffer.TYPED_ARRAY_SUPPORT = (function(){
try{
var buf=new ArrayBuffer(0);
var arr=new Uint8Array(buf);
arr.foo = function(){return 42;};
return arr.foo() === 42 && 
typeof arr.subarray === 'function' && 
new Uint8Array(1).subarray(1, 1).byteLength === 0;}
catch(e) {
return false;}})();















function Buffer(arg){
if(!(this instanceof Buffer)){

if(arguments.length > 1)return new Buffer(arg, arguments[1]);
return new Buffer(arg);}


this.length = 0;
this.parent = undefined;


if(typeof arg === 'number'){
return fromNumber(this, arg);}



if(typeof arg === 'string'){
return fromString(this, arg, arguments.length > 1?arguments[1]:'utf8');}



return fromObject(this, arg);}


function fromNumber(that, length){
that = allocate(that, length < 0?0:checked(length) | 0);
if(!Buffer.TYPED_ARRAY_SUPPORT){
for(var i=0; i < length; i++) {
that[i] = 0;}}


return that;}


function fromString(that, string, encoding){
if(typeof encoding !== 'string' || encoding === '')encoding = 'utf8';


var length=byteLength(string, encoding) | 0;
that = allocate(that, length);

that.write(string, encoding);
return that;}


function fromObject(that, object){
if(Buffer.isBuffer(object))return fromBuffer(that, object);

if(isArray(object))return fromArray(that, object);

if(object == null){
throw new TypeError('must start with number, buffer, array or string');}


if(typeof ArrayBuffer !== 'undefined' && object.buffer instanceof ArrayBuffer){
return fromTypedArray(that, object);}


if(object.length)return fromArrayLike(that, object);

return fromJsonObject(that, object);}


function fromBuffer(that, buffer){
var length=checked(buffer.length) | 0;
that = allocate(that, length);
buffer.copy(that, 0, 0, length);
return that;}


function fromArray(that, array){
var length=checked(array.length) | 0;
that = allocate(that, length);
for(var i=0; i < length; i += 1) {
that[i] = array[i] & 255;}

return that;}



function fromTypedArray(that, array){
var length=checked(array.length) | 0;
that = allocate(that, length);



for(var i=0; i < length; i += 1) {
that[i] = array[i] & 255;}

return that;}


function fromArrayLike(that, array){
var length=checked(array.length) | 0;
that = allocate(that, length);
for(var i=0; i < length; i += 1) {
that[i] = array[i] & 255;}

return that;}




function fromJsonObject(that, object){
var array;
var length=0;

if(object.type === 'Buffer' && isArray(object.data)){
array = object.data;
length = checked(array.length) | 0;}

that = allocate(that, length);

for(var i=0; i < length; i += 1) {
that[i] = array[i] & 255;}

return that;}


function allocate(that, length){
if(Buffer.TYPED_ARRAY_SUPPORT){

that = Buffer._augment(new Uint8Array(length));}else 
{

that.length = length;
that._isBuffer = true;}


var fromPool=length !== 0 && length <= Buffer.poolSize >>> 1;
if(fromPool)that.parent = rootParent;

return that;}


function checked(length){


if(length >= kMaxLength){
throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 
'size: 0x' + kMaxLength.toString(16) + ' bytes');}

return length | 0;}


function SlowBuffer(subject, encoding){
if(!(this instanceof SlowBuffer))return new SlowBuffer(subject, encoding);

var buf=new Buffer(subject, encoding);
delete buf.parent;
return buf;}


Buffer.isBuffer = function isBuffer(b){
return !!(b != null && b._isBuffer);};


Buffer.compare = function compare(a, b){
if(!Buffer.isBuffer(a) || !Buffer.isBuffer(b)){
throw new TypeError('Arguments must be Buffers');}


if(a === b)return 0;

var x=a.length;
var y=b.length;

var i=0;
var len=Math.min(x, y);
while(i < len) {
if(a[i] !== b[i])break;

++i;}


if(i !== len){
x = a[i];
y = b[i];}


if(x < y)return -1;
if(y < x)return 1;
return 0;};


Buffer.isEncoding = function isEncoding(encoding){
switch(String(encoding).toLowerCase()){
case 'hex':
case 'utf8':
case 'utf-8':
case 'ascii':
case 'binary':
case 'base64':
case 'raw':
case 'ucs2':
case 'ucs-2':
case 'utf16le':
case 'utf-16le':
return true;
default:
return false;}};



Buffer.concat = function concat(list, length){
if(!isArray(list))throw new TypeError('list argument must be an Array of Buffers.');

if(list.length === 0){
return new Buffer(0);}else 
if(list.length === 1){
return list[0];}


var i;
if(length === undefined){
length = 0;
for(i = 0; i < list.length; i++) {
length += list[i].length;}}



var buf=new Buffer(length);
var pos=0;
for(i = 0; i < list.length; i++) {
var item=list[i];
item.copy(buf, pos);
pos += item.length;}

return buf;};


function byteLength(string, encoding){
if(typeof string !== 'string')string = String(string);

if(string.length === 0)return 0;

switch(encoding || 'utf8'){
case 'ascii':
case 'binary':
case 'raw':
return string.length;
case 'ucs2':
case 'ucs-2':
case 'utf16le':
case 'utf-16le':
return string.length * 2;
case 'hex':
return string.length >>> 1;
case 'utf8':
case 'utf-8':
return utf8ToBytes(string).length;
case 'base64':
return base64ToBytes(string).length;
default:
return string.length;}}


Buffer.byteLength = byteLength;


Buffer.prototype.length = undefined;
Buffer.prototype.parent = undefined;


Buffer.prototype.toString = function toString(encoding, start, end){
var loweredCase=false;

start = start | 0;
end = end === undefined || end === Infinity?this.length:end | 0;

if(!encoding)encoding = 'utf8';
if(start < 0)start = 0;
if(end > this.length)end = this.length;
if(end <= start)return '';

while(true) {
switch(encoding){
case 'hex':
return hexSlice(this, start, end);

case 'utf8':
case 'utf-8':
return utf8Slice(this, start, end);

case 'ascii':
return asciiSlice(this, start, end);

case 'binary':
return binarySlice(this, start, end);

case 'base64':
return base64Slice(this, start, end);

case 'ucs2':
case 'ucs-2':
case 'utf16le':
case 'utf-16le':
return utf16leSlice(this, start, end);

default:
if(loweredCase)throw new TypeError('Unknown encoding: ' + encoding);
encoding = (encoding + '').toLowerCase();
loweredCase = true;}}};




Buffer.prototype.equals = function equals(b){
if(!Buffer.isBuffer(b))throw new TypeError('Argument must be a Buffer');
if(this === b)return true;
return Buffer.compare(this, b) === 0;};


Buffer.prototype.inspect = function inspect(){
var str='';
var max=exports.INSPECT_MAX_BYTES;
if(this.length > 0){
str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');
if(this.length > max)str += ' ... ';}

return '<Buffer ' + str + '>';};


Buffer.prototype.compare = function compare(b){
if(!Buffer.isBuffer(b))throw new TypeError('Argument must be a Buffer');
if(this === b)return 0;
return Buffer.compare(this, b);};


Buffer.prototype.indexOf = function indexOf(val, byteOffset){
if(byteOffset > 2147483647)byteOffset = 2147483647;else 
if(byteOffset < -2147483648)byteOffset = -2147483648;
byteOffset >>= 0;

if(this.length === 0)return -1;
if(byteOffset >= this.length)return -1;


if(byteOffset < 0)byteOffset = Math.max(this.length + byteOffset, 0);

if(typeof val === 'string'){
if(val.length === 0)return -1;
return String.prototype.indexOf.call(this, val, byteOffset);}

if(Buffer.isBuffer(val)){
return arrayIndexOf(this, val, byteOffset);}

if(typeof val === 'number'){
if(Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function'){
return Uint8Array.prototype.indexOf.call(this, val, byteOffset);}

return arrayIndexOf(this, [val], byteOffset);}


function arrayIndexOf(arr, val, byteOffset){
var foundIndex=-1;
for(var i=0; byteOffset + i < arr.length; i++) {
if(arr[byteOffset + i] === val[foundIndex === -1?0:i - foundIndex]){
if(foundIndex === -1)foundIndex = i;
if(i - foundIndex + 1 === val.length)return byteOffset + foundIndex;}else 
{
foundIndex = -1;}}


return -1;}


throw new TypeError('val must be string, number or Buffer');};



Buffer.prototype.get = function get(offset){
console.log('.get() is deprecated. Access using array indexes instead.');
return this.readUInt8(offset);};



Buffer.prototype.set = function set(v, offset){
console.log('.set() is deprecated. Access using array indexes instead.');
return this.writeUInt8(v, offset);};


function hexWrite(buf, string, offset, length){
offset = Number(offset) || 0;
var remaining=buf.length - offset;
if(!length){
length = remaining;}else 
{
length = Number(length);
if(length > remaining){
length = remaining;}}




var strLen=string.length;
if(strLen % 2 !== 0)throw new Error('Invalid hex string');

if(length > strLen / 2){
length = strLen / 2;}

for(var i=0; i < length; i++) {
var parsed=parseInt(string.substr(i * 2, 2), 16);
if(isNaN(parsed))throw new Error('Invalid hex string');
buf[offset + i] = parsed;}

return i;}


function utf8Write(buf, string, offset, length){
return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);}


function asciiWrite(buf, string, offset, length){
return blitBuffer(asciiToBytes(string), buf, offset, length);}


function binaryWrite(buf, string, offset, length){
return asciiWrite(buf, string, offset, length);}


function base64Write(buf, string, offset, length){
return blitBuffer(base64ToBytes(string), buf, offset, length);}


function ucs2Write(buf, string, offset, length){
return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);}


Buffer.prototype.write = function write(string, offset, length, encoding){

if(offset === undefined){
encoding = 'utf8';
length = this.length;
offset = 0;}else 

if(length === undefined && typeof offset === 'string'){
encoding = offset;
length = this.length;
offset = 0;}else 

if(isFinite(offset)){
offset = offset | 0;
if(isFinite(length)){
length = length | 0;
if(encoding === undefined)encoding = 'utf8';}else 
{
encoding = length;
length = undefined;}}else 


{
var swap=encoding;
encoding = offset;
offset = length | 0;
length = swap;}


var remaining=this.length - offset;
if(length === undefined || length > remaining)length = remaining;

if(string.length > 0 && (length < 0 || offset < 0) || offset > this.length){
throw new RangeError('attempt to write outside buffer bounds');}


if(!encoding)encoding = 'utf8';

var loweredCase=false;
for(;;) {
switch(encoding){
case 'hex':
return hexWrite(this, string, offset, length);

case 'utf8':
case 'utf-8':
return utf8Write(this, string, offset, length);

case 'ascii':
return asciiWrite(this, string, offset, length);

case 'binary':
return binaryWrite(this, string, offset, length);

case 'base64':

return base64Write(this, string, offset, length);

case 'ucs2':
case 'ucs-2':
case 'utf16le':
case 'utf-16le':
return ucs2Write(this, string, offset, length);

default:
if(loweredCase)throw new TypeError('Unknown encoding: ' + encoding);
encoding = ('' + encoding).toLowerCase();
loweredCase = true;}}};




Buffer.prototype.toJSON = function toJSON(){
return {
type:'Buffer', 
data:Array.prototype.slice.call(this._arr || this, 0)};};



function base64Slice(buf, start, end){
if(start === 0 && end === buf.length){
return base64.fromByteArray(buf);}else 
{
return base64.fromByteArray(buf.slice(start, end));}}



function utf8Slice(buf, start, end){
var res='';
var tmp='';
end = Math.min(buf.length, end);

for(var i=start; i < end; i++) {
if(buf[i] <= 127){
res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i]);
tmp = '';}else 
{
tmp += '%' + buf[i].toString(16);}}



return res + decodeUtf8Char(tmp);}


function asciiSlice(buf, start, end){
var ret='';
end = Math.min(buf.length, end);

for(var i=start; i < end; i++) {
ret += String.fromCharCode(buf[i] & 127);}

return ret;}


function binarySlice(buf, start, end){
var ret='';
end = Math.min(buf.length, end);

for(var i=start; i < end; i++) {
ret += String.fromCharCode(buf[i]);}

return ret;}


function hexSlice(buf, start, end){
var len=buf.length;

if(!start || start < 0)start = 0;
if(!end || end < 0 || end > len)end = len;

var out='';
for(var i=start; i < end; i++) {
out += toHex(buf[i]);}

return out;}


function utf16leSlice(buf, start, end){
var bytes=buf.slice(start, end);
var res='';
for(var i=0; i < bytes.length; i += 2) {
res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);}

return res;}


Buffer.prototype.slice = function slice(start, end){
var len=this.length;
start = ~ ~start;
end = end === undefined?len:~ ~end;

if(start < 0){
start += len;
if(start < 0)start = 0;}else 
if(start > len){
start = len;}


if(end < 0){
end += len;
if(end < 0)end = 0;}else 
if(end > len){
end = len;}


if(end < start)end = start;

var newBuf;
if(Buffer.TYPED_ARRAY_SUPPORT){
newBuf = Buffer._augment(this.subarray(start, end));}else 
{
var sliceLen=end - start;
newBuf = new Buffer(sliceLen, undefined);
for(var i=0; i < sliceLen; i++) {
newBuf[i] = this[i + start];}}



if(newBuf.length)newBuf.parent = this.parent || this;

return newBuf;};





function checkOffset(offset, ext, length){
if(offset % 1 !== 0 || offset < 0)throw new RangeError('offset is not uint');
if(offset + ext > length)throw new RangeError('Trying to access beyond buffer length');}


Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert){
offset = offset | 0;
byteLength = byteLength | 0;
if(!noAssert)checkOffset(offset, byteLength, this.length);

var val=this[offset];
var mul=1;
var i=0;
while(++i < byteLength && (mul *= 256)) {
val += this[offset + i] * mul;}


return val;};


Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert){
offset = offset | 0;
byteLength = byteLength | 0;
if(!noAssert){
checkOffset(offset, byteLength, this.length);}


var val=this[offset + --byteLength];
var mul=1;
while(byteLength > 0 && (mul *= 256)) {
val += this[offset + --byteLength] * mul;}


return val;};


Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert){
if(!noAssert)checkOffset(offset, 1, this.length);
return this[offset];};


Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert){
if(!noAssert)checkOffset(offset, 2, this.length);
return this[offset] | this[offset + 1] << 8;};


Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert){
if(!noAssert)checkOffset(offset, 2, this.length);
return this[offset] << 8 | this[offset + 1];};


Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert){
if(!noAssert)checkOffset(offset, 4, this.length);

return (this[offset] | 
this[offset + 1] << 8 | 
this[offset + 2] << 16) + 
this[offset + 3] * 16777216;};


Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert){
if(!noAssert)checkOffset(offset, 4, this.length);

return this[offset] * 16777216 + (
this[offset + 1] << 16 | 
this[offset + 2] << 8 | 
this[offset + 3]);};


Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert){
offset = offset | 0;
byteLength = byteLength | 0;
if(!noAssert)checkOffset(offset, byteLength, this.length);

var val=this[offset];
var mul=1;
var i=0;
while(++i < byteLength && (mul *= 256)) {
val += this[offset + i] * mul;}

mul *= 128;

if(val >= mul)val -= Math.pow(2, 8 * byteLength);

return val;};


Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert){
offset = offset | 0;
byteLength = byteLength | 0;
if(!noAssert)checkOffset(offset, byteLength, this.length);

var i=byteLength;
var mul=1;
var val=this[offset + --i];
while(i > 0 && (mul *= 256)) {
val += this[offset + --i] * mul;}

mul *= 128;

if(val >= mul)val -= Math.pow(2, 8 * byteLength);

return val;};


Buffer.prototype.readInt8 = function readInt8(offset, noAssert){
if(!noAssert)checkOffset(offset, 1, this.length);
if(!(this[offset] & 128))return this[offset];
return (255 - this[offset] + 1) * -1;};


Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert){
if(!noAssert)checkOffset(offset, 2, this.length);
var val=this[offset] | this[offset + 1] << 8;
return val & 32768?val | 4294901760:val;};


Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert){
if(!noAssert)checkOffset(offset, 2, this.length);
var val=this[offset + 1] | this[offset] << 8;
return val & 32768?val | 4294901760:val;};


Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert){
if(!noAssert)checkOffset(offset, 4, this.length);

return this[offset] | 
this[offset + 1] << 8 | 
this[offset + 2] << 16 | 
this[offset + 3] << 24;};


Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert){
if(!noAssert)checkOffset(offset, 4, this.length);

return this[offset] << 24 | 
this[offset + 1] << 16 | 
this[offset + 2] << 8 | 
this[offset + 3];};


Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert){
if(!noAssert)checkOffset(offset, 4, this.length);
return ieee754.read(this, offset, true, 23, 4);};


Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert){
if(!noAssert)checkOffset(offset, 4, this.length);
return ieee754.read(this, offset, false, 23, 4);};


Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert){
if(!noAssert)checkOffset(offset, 8, this.length);
return ieee754.read(this, offset, true, 52, 8);};


Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert){
if(!noAssert)checkOffset(offset, 8, this.length);
return ieee754.read(this, offset, false, 52, 8);};


function checkInt(buf, value, offset, ext, max, min){
if(!Buffer.isBuffer(buf))throw new TypeError('buffer must be a Buffer instance');
if(value > max || value < min)throw new RangeError('value is out of bounds');
if(offset + ext > buf.length)throw new RangeError('index out of range');}


Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert){
value = +value;
offset = offset | 0;
byteLength = byteLength | 0;
if(!noAssert)checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0);

var mul=1;
var i=0;
this[offset] = value & 255;
while(++i < byteLength && (mul *= 256)) {
this[offset + i] = value / mul & 255;}


return offset + byteLength;};


Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert){
value = +value;
offset = offset | 0;
byteLength = byteLength | 0;
if(!noAssert)checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0);

var i=byteLength - 1;
var mul=1;
this[offset + i] = value & 255;
while(--i >= 0 && (mul *= 256)) {
this[offset + i] = value / mul & 255;}


return offset + byteLength;};


Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert){
value = +value;
offset = offset | 0;
if(!noAssert)checkInt(this, value, offset, 1, 255, 0);
if(!Buffer.TYPED_ARRAY_SUPPORT)value = Math.floor(value);
this[offset] = value;
return offset + 1;};


function objectWriteUInt16(buf, value, offset, littleEndian){
if(value < 0)value = 65535 + value + 1;
for(var i=0, j=Math.min(buf.length - offset, 2); i < j; i++) {
buf[offset + i] = (value & 255 << 8 * (littleEndian?i:1 - i)) >>> 
(littleEndian?i:1 - i) * 8;}}



Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert){
value = +value;
offset = offset | 0;
if(!noAssert)checkInt(this, value, offset, 2, 65535, 0);
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset] = value;
this[offset + 1] = value >>> 8;}else 
{
objectWriteUInt16(this, value, offset, true);}

return offset + 2;};


Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert){
value = +value;
offset = offset | 0;
if(!noAssert)checkInt(this, value, offset, 2, 65535, 0);
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset] = value >>> 8;
this[offset + 1] = value;}else 
{
objectWriteUInt16(this, value, offset, false);}

return offset + 2;};


function objectWriteUInt32(buf, value, offset, littleEndian){
if(value < 0)value = 4294967295 + value + 1;
for(var i=0, j=Math.min(buf.length - offset, 4); i < j; i++) {
buf[offset + i] = value >>> (littleEndian?i:3 - i) * 8 & 255;}}



Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert){
value = +value;
offset = offset | 0;
if(!noAssert)checkInt(this, value, offset, 4, 4294967295, 0);
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset + 3] = value >>> 24;
this[offset + 2] = value >>> 16;
this[offset + 1] = value >>> 8;
this[offset] = value;}else 
{
objectWriteUInt32(this, value, offset, true);}

return offset + 4;};


Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert){
value = +value;
offset = offset | 0;
if(!noAssert)checkInt(this, value, offset, 4, 4294967295, 0);
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset] = value >>> 24;
this[offset + 1] = value >>> 16;
this[offset + 2] = value >>> 8;
this[offset + 3] = value;}else 
{
objectWriteUInt32(this, value, offset, false);}

return offset + 4;};


Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert){
value = +value;
offset = offset | 0;
if(!noAssert){
var limit=Math.pow(2, 8 * byteLength - 1);

checkInt(this, value, offset, byteLength, limit - 1, -limit);}


var i=0;
var mul=1;
var sub=value < 0?1:0;
this[offset] = value & 255;
while(++i < byteLength && (mul *= 256)) {
this[offset + i] = (value / mul >> 0) - sub & 255;}


return offset + byteLength;};


Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert){
value = +value;
offset = offset | 0;
if(!noAssert){
var limit=Math.pow(2, 8 * byteLength - 1);

checkInt(this, value, offset, byteLength, limit - 1, -limit);}


var i=byteLength - 1;
var mul=1;
var sub=value < 0?1:0;
this[offset + i] = value & 255;
while(--i >= 0 && (mul *= 256)) {
this[offset + i] = (value / mul >> 0) - sub & 255;}


return offset + byteLength;};


Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert){
value = +value;
offset = offset | 0;
if(!noAssert)checkInt(this, value, offset, 1, 127, -128);
if(!Buffer.TYPED_ARRAY_SUPPORT)value = Math.floor(value);
if(value < 0)value = 255 + value + 1;
this[offset] = value;
return offset + 1;};


Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert){
value = +value;
offset = offset | 0;
if(!noAssert)checkInt(this, value, offset, 2, 32767, -32768);
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset] = value;
this[offset + 1] = value >>> 8;}else 
{
objectWriteUInt16(this, value, offset, true);}

return offset + 2;};


Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert){
value = +value;
offset = offset | 0;
if(!noAssert)checkInt(this, value, offset, 2, 32767, -32768);
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset] = value >>> 8;
this[offset + 1] = value;}else 
{
objectWriteUInt16(this, value, offset, false);}

return offset + 2;};


Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert){
value = +value;
offset = offset | 0;
if(!noAssert)checkInt(this, value, offset, 4, 2147483647, -2147483648);
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset] = value;
this[offset + 1] = value >>> 8;
this[offset + 2] = value >>> 16;
this[offset + 3] = value >>> 24;}else 
{
objectWriteUInt32(this, value, offset, true);}

return offset + 4;};


Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert){
value = +value;
offset = offset | 0;
if(!noAssert)checkInt(this, value, offset, 4, 2147483647, -2147483648);
if(value < 0)value = 4294967295 + value + 1;
if(Buffer.TYPED_ARRAY_SUPPORT){
this[offset] = value >>> 24;
this[offset + 1] = value >>> 16;
this[offset + 2] = value >>> 8;
this[offset + 3] = value;}else 
{
objectWriteUInt32(this, value, offset, false);}

return offset + 4;};


function checkIEEE754(buf, value, offset, ext, max, min){
if(value > max || value < min)throw new RangeError('value is out of bounds');
if(offset + ext > buf.length)throw new RangeError('index out of range');
if(offset < 0)throw new RangeError('index out of range');}


function writeFloat(buf, value, offset, littleEndian, noAssert){
if(!noAssert){
checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);}

ieee754.write(buf, value, offset, littleEndian, 23, 4);
return offset + 4;}


Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert){
return writeFloat(this, value, offset, true, noAssert);};


Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert){
return writeFloat(this, value, offset, false, noAssert);};


function writeDouble(buf, value, offset, littleEndian, noAssert){
if(!noAssert){
checkIEEE754(buf, value, offset, 8, 1.7976931348623157e+308, -1.7976931348623157e+308);}

ieee754.write(buf, value, offset, littleEndian, 52, 8);
return offset + 8;}


Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert){
return writeDouble(this, value, offset, true, noAssert);};


Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert){
return writeDouble(this, value, offset, false, noAssert);};



Buffer.prototype.copy = function copy(target, targetStart, start, end){
if(!start)start = 0;
if(!end && end !== 0)end = this.length;
if(targetStart >= target.length)targetStart = target.length;
if(!targetStart)targetStart = 0;
if(end > 0 && end < start)end = start;


if(end === start)return 0;
if(target.length === 0 || this.length === 0)return 0;


if(targetStart < 0){
throw new RangeError('targetStart out of bounds');}

if(start < 0 || start >= this.length)throw new RangeError('sourceStart out of bounds');
if(end < 0)throw new RangeError('sourceEnd out of bounds');


if(end > this.length)end = this.length;
if(target.length - targetStart < end - start){
end = target.length - targetStart + start;}


var len=end - start;

if(len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT){
for(var i=0; i < len; i++) {
target[i + targetStart] = this[i + start];}}else 

{
target._set(this.subarray(start, start + len), targetStart);}


return len;};



Buffer.prototype.fill = function fill(value, start, end){
if(!value)value = 0;
if(!start)start = 0;
if(!end)end = this.length;

if(end < start)throw new RangeError('end < start');


if(end === start)return;
if(this.length === 0)return;

if(start < 0 || start >= this.length)throw new RangeError('start out of bounds');
if(end < 0 || end > this.length)throw new RangeError('end out of bounds');

var i;
if(typeof value === 'number'){
for(i = start; i < end; i++) {
this[i] = value;}}else 

{
var bytes=utf8ToBytes(value.toString());
var len=bytes.length;
for(i = start; i < end; i++) {
this[i] = bytes[i % len];}}



return this;};






Buffer.prototype.toArrayBuffer = function toArrayBuffer(){
if(typeof Uint8Array !== 'undefined'){
if(Buffer.TYPED_ARRAY_SUPPORT){
return new Buffer(this).buffer;}else 
{
var buf=new Uint8Array(this.length);
for(var i=0, len=buf.length; i < len; i += 1) {
buf[i] = this[i];}

return buf.buffer;}}else 

{
throw new TypeError('Buffer.toArrayBuffer not supported in this browser');}};






var BP=Buffer.prototype;




Buffer._augment = function _augment(arr){
arr.constructor = Buffer;
arr._isBuffer = true;


arr._set = arr.set;


arr.get = BP.get;
arr.set = BP.set;

arr.write = BP.write;
arr.toString = BP.toString;
arr.toLocaleString = BP.toString;
arr.toJSON = BP.toJSON;
arr.equals = BP.equals;
arr.compare = BP.compare;
arr.indexOf = BP.indexOf;
arr.copy = BP.copy;
arr.slice = BP.slice;
arr.readUIntLE = BP.readUIntLE;
arr.readUIntBE = BP.readUIntBE;
arr.readUInt8 = BP.readUInt8;
arr.readUInt16LE = BP.readUInt16LE;
arr.readUInt16BE = BP.readUInt16BE;
arr.readUInt32LE = BP.readUInt32LE;
arr.readUInt32BE = BP.readUInt32BE;
arr.readIntLE = BP.readIntLE;
arr.readIntBE = BP.readIntBE;
arr.readInt8 = BP.readInt8;
arr.readInt16LE = BP.readInt16LE;
arr.readInt16BE = BP.readInt16BE;
arr.readInt32LE = BP.readInt32LE;
arr.readInt32BE = BP.readInt32BE;
arr.readFloatLE = BP.readFloatLE;
arr.readFloatBE = BP.readFloatBE;
arr.readDoubleLE = BP.readDoubleLE;
arr.readDoubleBE = BP.readDoubleBE;
arr.writeUInt8 = BP.writeUInt8;
arr.writeUIntLE = BP.writeUIntLE;
arr.writeUIntBE = BP.writeUIntBE;
arr.writeUInt16LE = BP.writeUInt16LE;
arr.writeUInt16BE = BP.writeUInt16BE;
arr.writeUInt32LE = BP.writeUInt32LE;
arr.writeUInt32BE = BP.writeUInt32BE;
arr.writeIntLE = BP.writeIntLE;
arr.writeIntBE = BP.writeIntBE;
arr.writeInt8 = BP.writeInt8;
arr.writeInt16LE = BP.writeInt16LE;
arr.writeInt16BE = BP.writeInt16BE;
arr.writeInt32LE = BP.writeInt32LE;
arr.writeInt32BE = BP.writeInt32BE;
arr.writeFloatLE = BP.writeFloatLE;
arr.writeFloatBE = BP.writeFloatBE;
arr.writeDoubleLE = BP.writeDoubleLE;
arr.writeDoubleBE = BP.writeDoubleBE;
arr.fill = BP.fill;
arr.inspect = BP.inspect;
arr.toArrayBuffer = BP.toArrayBuffer;

return arr;};


var INVALID_BASE64_RE=/[^+\/0-9A-z\-]/g;

function base64clean(str){

str = stringtrim(str).replace(INVALID_BASE64_RE, '');

if(str.length < 2)return '';

while(str.length % 4 !== 0) {
str = str + '=';}

return str;}


function stringtrim(str){
if(str.trim)return str.trim();
return str.replace(/^\s+|\s+$/g, '');}


function toHex(n){
if(n < 16)return '0' + n.toString(16);
return n.toString(16);}


function utf8ToBytes(string, units){
units = units || Infinity;
var codePoint;
var length=string.length;
var leadSurrogate=null;
var bytes=[];
var i=0;

for(; i < length; i++) {
codePoint = string.charCodeAt(i);


if(codePoint > 55295 && codePoint < 57344){

if(leadSurrogate){

if(codePoint < 56320){
if((units -= 3) > -1)bytes.push(239, 191, 189);
leadSurrogate = codePoint;
continue;}else 
{

codePoint = leadSurrogate - 55296 << 10 | codePoint - 56320 | 65536;
leadSurrogate = null;}}else 

{


if(codePoint > 56319){

if((units -= 3) > -1)bytes.push(239, 191, 189);
continue;}else 
if(i + 1 === length){

if((units -= 3) > -1)bytes.push(239, 191, 189);
continue;}else 
{

leadSurrogate = codePoint;
continue;}}}else 


if(leadSurrogate){

if((units -= 3) > -1)bytes.push(239, 191, 189);
leadSurrogate = null;}



if(codePoint < 128){
if((units -= 1) < 0)break;
bytes.push(codePoint);}else 
if(codePoint < 2048){
if((units -= 2) < 0)break;
bytes.push(
codePoint >> 6 | 192, 
codePoint & 63 | 128);}else 

if(codePoint < 65536){
if((units -= 3) < 0)break;
bytes.push(
codePoint >> 12 | 224, 
codePoint >> 6 & 63 | 128, 
codePoint & 63 | 128);}else 

if(codePoint < 2097152){
if((units -= 4) < 0)break;
bytes.push(
codePoint >> 18 | 240, 
codePoint >> 12 & 63 | 128, 
codePoint >> 6 & 63 | 128, 
codePoint & 63 | 128);}else 

{
throw new Error('Invalid code point');}}



return bytes;}


function asciiToBytes(str){
var byteArray=[];
for(var i=0; i < str.length; i++) {

byteArray.push(str.charCodeAt(i) & 255);}

return byteArray;}


function utf16leToBytes(str, units){
var c, hi, lo;
var byteArray=[];
for(var i=0; i < str.length; i++) {
if((units -= 2) < 0)break;

c = str.charCodeAt(i);
hi = c >> 8;
lo = c % 256;
byteArray.push(lo);
byteArray.push(hi);}


return byteArray;}


function base64ToBytes(str){
return base64.toByteArray(base64clean(str));}


function blitBuffer(src, dst, offset, length){
for(var i=0; i < length; i++) {
if(i + offset >= dst.length || i >= src.length)break;
dst[i + offset] = src[i];}

return i;}


function decodeUtf8Char(str){
try{
return decodeURIComponent(str);}
catch(err) {
return String.fromCharCode(65533);}}});
__d('base64-js/lib/b64',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var lookup='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

;(function(exports){
'use strict';

var Arr=typeof Uint8Array !== 'undefined'?
Uint8Array:
Array;

var PLUS='+'.charCodeAt(0);
var SLASH='/'.charCodeAt(0);
var NUMBER='0'.charCodeAt(0);
var LOWER='a'.charCodeAt(0);
var UPPER='A'.charCodeAt(0);
var PLUS_URL_SAFE='-'.charCodeAt(0);
var SLASH_URL_SAFE='_'.charCodeAt(0);

function decode(elt){
var code=elt.charCodeAt(0);
if(code === PLUS || 
code === PLUS_URL_SAFE)
return 62;
if(code === SLASH || 
code === SLASH_URL_SAFE)
return 63;
if(code < NUMBER)
return -1;
if(code < NUMBER + 10)
return code - NUMBER + 26 + 26;
if(code < UPPER + 26)
return code - UPPER;
if(code < LOWER + 26)
return code - LOWER + 26;}


function b64ToByteArray(b64){
var i, j, l, tmp, placeHolders, arr;

if(b64.length % 4 > 0){
throw new Error('Invalid string. Length must be a multiple of 4');}







var len=b64.length;
placeHolders = '=' === b64.charAt(len - 2)?2:'=' === b64.charAt(len - 1)?1:0;


arr = new Arr(b64.length * 3 / 4 - placeHolders);


l = placeHolders > 0?b64.length - 4:b64.length;

var L=0;

function push(v){
arr[L++] = v;}


for(i = 0, j = 0; i < l; i += 4, j += 3) {
tmp = decode(b64.charAt(i)) << 18 | decode(b64.charAt(i + 1)) << 12 | decode(b64.charAt(i + 2)) << 6 | decode(b64.charAt(i + 3));
push((tmp & 16711680) >> 16);
push((tmp & 65280) >> 8);
push(tmp & 255);}


if(placeHolders === 2){
tmp = decode(b64.charAt(i)) << 2 | decode(b64.charAt(i + 1)) >> 4;
push(tmp & 255);}else 
if(placeHolders === 1){
tmp = decode(b64.charAt(i)) << 10 | decode(b64.charAt(i + 1)) << 4 | decode(b64.charAt(i + 2)) >> 2;
push(tmp >> 8 & 255);
push(tmp & 255);}


return arr;}


function uint8ToBase64(uint8){
var i, 
extraBytes=uint8.length % 3, 
output='', 
temp, length;

function encode(num){
return lookup.charAt(num);}


function tripletToBase64(num){
return encode(num >> 18 & 63) + encode(num >> 12 & 63) + encode(num >> 6 & 63) + encode(num & 63);}



for(i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];
output += tripletToBase64(temp);}



switch(extraBytes){
case 1:
temp = uint8[uint8.length - 1];
output += encode(temp >> 2);
output += encode(temp << 4 & 63);
output += '==';
break;
case 2:
temp = (uint8[uint8.length - 2] << 8) + uint8[uint8.length - 1];
output += encode(temp >> 10);
output += encode(temp >> 4 & 63);
output += encode(temp << 2 & 63);
output += '=';
break;}


return output;}


exports.toByteArray = b64ToByteArray;
exports.fromByteArray = uint8ToBase64;})(
typeof exports === 'undefined'?this.base64js = {}:exports);});
__d('ieee754/index',[],function(global, require, requireDynamic, requireLazy, module, exports) {  exports.read = function(buffer, offset, isLE, mLen, nBytes){
var e, m, 
eLen=nBytes * 8 - mLen - 1, 
eMax=(1 << eLen) - 1, 
eBias=eMax >> 1, 
nBits=-7, 
i=isLE?nBytes - 1:0, 
d=isLE?-1:1, 
s=buffer[offset + i];

i += d;

e = s & (1 << -nBits) - 1;
s >>= -nBits;
nBits += eLen;
for(; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

m = e & (1 << -nBits) - 1;
e >>= -nBits;
nBits += mLen;
for(; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

if(e === 0){
e = 1 - eBias;}else 
if(e === eMax){
return m?NaN:(s?-1:1) * Infinity;}else 
{
m = m + Math.pow(2, mLen);
e = e - eBias;}

return (s?-1:1) * m * Math.pow(2, e - mLen);};


exports.write = function(buffer, value, offset, isLE, mLen, nBytes){
var e, m, c, 
eLen=nBytes * 8 - mLen - 1, 
eMax=(1 << eLen) - 1, 
eBias=eMax >> 1, 
rt=mLen === 23?Math.pow(2, -24) - Math.pow(2, -77):0, 
i=isLE?0:nBytes - 1, 
d=isLE?1:-1, 
s=value < 0 || value === 0 && 1 / value < 0?1:0;

value = Math.abs(value);

if(isNaN(value) || value === Infinity){
m = isNaN(value)?1:0;
e = eMax;}else 
{
e = Math.floor(Math.log(value) / Math.LN2);
if(value * (c = Math.pow(2, -e)) < 1){
e--;
c *= 2;}

if(e + eBias >= 1){
value += rt / c;}else 
{
value += rt * Math.pow(2, 1 - eBias);}

if(value * c >= 2){
e++;
c /= 2;}


if(e + eBias >= eMax){
m = 0;
e = eMax;}else 
if(e + eBias >= 1){
m = (value * c - 1) * Math.pow(2, mLen);
e = e + eBias;}else 
{
m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
e = 0;}}



for(; mLen >= 8; buffer[offset + i] = m & 255, i += d, m /= 256, mLen -= 8) {}

e = e << mLen | m;
eLen += mLen;
for(; eLen > 0; buffer[offset + i] = e & 255, i += d, e /= 256, eLen -= 8) {}

buffer[offset + i - d] |= s * 128;};});
__d('is-array/index',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 




isArray=Array.isArray;





var str=Object.prototype.toString;


















module.exports = isArray || function(val){
return !!val && '[object Array]' == str.call(val);};});
__d('react-native/Libraries/react-native/react-native',["React","ActivityIndicatorIOS","DatePickerIOS","Image","ListView","MapView","Navigator","NavigatorIOS","PickerIOS","ProgressViewIOS","ScrollView","SegmentedControlIOS","SliderIOS","SwitchIOS","TabBarIOS","Text","TextInput","TouchableHighlight","TouchableOpacity","TouchableWithoutFeedback","View","WebView","AlertIOS","AppRegistry","AppStateIOS","AsyncStorage","CameraRoll","InteractionManager","LayoutAnimation","LinkingIOS","NetInfo","PanResponder","PixelRatio","PushNotificationIOS","StatusBarIOS","StyleSheet","VibrationIOS","RCTDeviceEventEmitter","RCTNativeAppEventEmitter","NativeModules","requireNativeComponent","LinkedStateMixin","ReactComponentWithPureRenderMixin","NativeModules","ReactUpdates","cloneWithProps","ReactFragment","update","ReactDefaultPerf","ReactTestUtils"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';


















var ReactNative=Object.assign(Object.create(require('React')), {

ActivityIndicatorIOS:require('ActivityIndicatorIOS'), 
DatePickerIOS:require('DatePickerIOS'), 
Image:require('Image'), 
ListView:require('ListView'), 
MapView:require('MapView'), 
Navigator:require('Navigator'), 
NavigatorIOS:require('NavigatorIOS'), 
PickerIOS:require('PickerIOS'), 
ProgressViewIOS:require('ProgressViewIOS'), 
ScrollView:require('ScrollView'), 
SegmentedControlIOS:require('SegmentedControlIOS'), 
SliderIOS:require('SliderIOS'), 
SwitchIOS:require('SwitchIOS'), 
TabBarIOS:require('TabBarIOS'), 
Text:require('Text'), 
TextInput:require('TextInput'), 
TouchableHighlight:require('TouchableHighlight'), 
TouchableOpacity:require('TouchableOpacity'), 
TouchableWithoutFeedback:require('TouchableWithoutFeedback'), 
View:require('View'), 
WebView:require('WebView'), 


AlertIOS:require('AlertIOS'), 
AppRegistry:require('AppRegistry'), 
AppStateIOS:require('AppStateIOS'), 
AsyncStorage:require('AsyncStorage'), 
CameraRoll:require('CameraRoll'), 
InteractionManager:require('InteractionManager'), 
LayoutAnimation:require('LayoutAnimation'), 
LinkingIOS:require('LinkingIOS'), 
NetInfo:require('NetInfo'), 
PanResponder:require('PanResponder'), 
PixelRatio:require('PixelRatio'), 
PushNotificationIOS:require('PushNotificationIOS'), 
StatusBarIOS:require('StatusBarIOS'), 
StyleSheet:require('StyleSheet'), 
VibrationIOS:require('VibrationIOS'), 


DeviceEventEmitter:require('RCTDeviceEventEmitter'), 
NativeAppEventEmitter:require('RCTNativeAppEventEmitter'), 
NativeModules:require('NativeModules'), 
requireNativeComponent:require('requireNativeComponent'), 

addons:{
LinkedStateMixin:require('LinkedStateMixin'), 
Perf:undefined, 
PureRenderMixin:require('ReactComponentWithPureRenderMixin'), 
TestModule:require('NativeModules').TestModule, 
TestUtils:undefined, 
batchedUpdates:require('ReactUpdates').batchedUpdates, 
cloneWithProps:require('cloneWithProps'), 
createFragment:require('ReactFragment').create, 
update:require('update')}});



if(__DEV__){
ReactNative.addons.Perf = require('ReactDefaultPerf');
ReactNative.addons.TestUtils = require('ReactTestUtils');}


module.exports = ReactNative;});
__d('React',["ReactNative"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












module.exports = require('ReactNative');});
__d('ReactNative',["ReactChildren","ReactClass","ReactComponent","ReactContext","ReactCurrentOwner","ReactElement","ReactElementValidator","ReactInstanceHandles","ReactNativeDefaultInjection","ReactNativeMount","ReactPropTypes","deprecated","findNodeHandle","invariant","onlyChild","ReactReconciler","ReactNativeTextComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactChildren=require('ReactChildren');
var ReactClass=require('ReactClass');
var ReactComponent=require('ReactComponent');
var ReactContext=require('ReactContext');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactElementValidator=require('ReactElementValidator');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactNativeDefaultInjection=require('ReactNativeDefaultInjection');
var ReactNativeMount=require('ReactNativeMount');
var ReactPropTypes=require('ReactPropTypes');

var deprecated=require('deprecated');
var findNodeHandle=require('findNodeHandle');
var invariant=require('invariant');
var onlyChild=require('onlyChild');

ReactNativeDefaultInjection.inject();

var createElement=ReactElement.createElement;
var createFactory=ReactElement.createFactory;
var cloneElement=ReactElement.cloneElement;

if(__DEV__){
createElement = ReactElementValidator.createElement;
createFactory = ReactElementValidator.createFactory;
cloneElement = ReactElementValidator.cloneElement;}


var resolveDefaultProps=function(element){

var defaultProps=element.type.defaultProps;
var props=element.props;
for(var propName in defaultProps) {
if(props[propName] === undefined){
props[propName] = defaultProps[propName];}}};





var augmentElement=function(element){
if(__DEV__){
invariant(
false, 
'This optimized path should never be used in DEV mode because ' + 
'it does not provide validation. Check your JSX transform.');}


element._owner = ReactCurrentOwner.current;
element._context = ReactContext.current;
if(element.type.defaultProps){
resolveDefaultProps(element);}

return element;};


var render=function(
element, 
mountInto, 
callback)
{
return ReactNativeMount.renderComponent(element, mountInto, callback);};


var ReactNative={
hasReactNativeInitialized:false, 
Children:{
map:ReactChildren.map, 
forEach:ReactChildren.forEach, 
count:ReactChildren.count, 
only:onlyChild}, 

Component:ReactComponent, 
PropTypes:ReactPropTypes, 
createClass:ReactClass.createClass, 
createElement:createElement, 
createFactory:createFactory, 
cloneElement:cloneElement, 
_augmentElement:augmentElement, 
findNodeHandle:findNodeHandle, 
render:render, 
unmountComponentAtNode:ReactNativeMount.unmountComponentAtNode, 


__spread:Object.assign, 

unmountComponentAtNodeAndRemoveContainer:ReactNativeMount.unmountComponentAtNodeAndRemoveContainer, 
isValidClass:ReactElement.isValidFactory, 
isValidElement:ReactElement.isValidElement, 


renderComponent:deprecated(
'React', 
'renderComponent', 
'render', 
this, 
render), 

isValidComponent:deprecated(
'React', 
'isValidComponent', 
'isValidElement', 
this, 
ReactElement.isValidElement)};






if(
typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && 
typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function'){
__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
CurrentOwner:ReactCurrentOwner, 
InstanceHandles:ReactInstanceHandles, 
Mount:ReactNativeMount, 
Reconciler:require('ReactReconciler'), 
TextComponent:require('ReactNativeTextComponent')});}



module.exports = ReactNative;});
__d('ReactChildren',["PooledClass","ReactFragment","traverseAllChildren","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PooledClass=require('PooledClass');
var ReactFragment=require('ReactFragment');

var traverseAllChildren=require('traverseAllChildren');
var warning=require('warning');

var twoArgumentPooler=PooledClass.twoArgumentPooler;
var threeArgumentPooler=PooledClass.threeArgumentPooler;









function ForEachBookKeeping(forEachFunction, forEachContext){
this.forEachFunction = forEachFunction;
this.forEachContext = forEachContext;}

PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(traverseContext, child, name, i){
var forEachBookKeeping=traverseContext;
forEachBookKeeping.forEachFunction.call(
forEachBookKeeping.forEachContext, child, i);}












function forEachChildren(children, forEachFunc, forEachContext){
if(children == null){
return children;}


var traverseContext=
ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
traverseAllChildren(children, forEachSingleChild, traverseContext);
ForEachBookKeeping.release(traverseContext);}











function MapBookKeeping(mapResult, mapFunction, mapContext){
this.mapResult = mapResult;
this.mapFunction = mapFunction;
this.mapContext = mapContext;}

PooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);

function mapSingleChildIntoContext(traverseContext, child, name, i){
var mapBookKeeping=traverseContext;
var mapResult=mapBookKeeping.mapResult;

var keyUnique=!mapResult.hasOwnProperty(name);
if(__DEV__){
warning(
keyUnique, 
'ReactChildren.map(...): Encountered two children with the same key, ' + 
'`%s`. Child keys must be unique; when two children share a key, only ' + 
'the first child will be used.', 
name);}



if(keyUnique){
var mappedChild=
mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);
mapResult[name] = mappedChild;}}

















function mapChildren(children, func, context){
if(children == null){
return children;}


var mapResult={};
var traverseContext=MapBookKeeping.getPooled(mapResult, func, context);
traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
MapBookKeeping.release(traverseContext);
return ReactFragment.create(mapResult);}


function forEachSingleChildDummy(traverseContext, child, name, i){
return null;}









function countChildren(children, context){
return traverseAllChildren(children, forEachSingleChildDummy, null);}


var ReactChildren={
forEach:forEachChildren, 
map:mapChildren, 
count:countChildren};


module.exports = ReactChildren;});
__d('PooledClass',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');








var oneArgumentPooler=function(copyFieldsFrom){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance, copyFieldsFrom);
return instance;}else 
{
return new Klass(copyFieldsFrom);}};



var twoArgumentPooler=function(a1, a2){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance, a1, a2);
return instance;}else 
{
return new Klass(a1, a2);}};



var threeArgumentPooler=function(a1, a2, a3){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance, a1, a2, a3);
return instance;}else 
{
return new Klass(a1, a2, a3);}};



var fiveArgumentPooler=function(a1, a2, a3, a4, a5){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance, a1, a2, a3, a4, a5);
return instance;}else 
{
return new Klass(a1, a2, a3, a4, a5);}};



var standardReleaser=function(instance){
var Klass=this;
invariant(
instance instanceof Klass, 
'Trying to release an instance into a pool of a different type.');

if(instance.destructor){
instance.destructor();}

if(Klass.instancePool.length < Klass.poolSize){
Klass.instancePool.push(instance);}};



var DEFAULT_POOL_SIZE=10;
var DEFAULT_POOLER=oneArgumentPooler;










var addPoolingTo=function(CopyConstructor, pooler){
var NewKlass=CopyConstructor;
NewKlass.instancePool = [];
NewKlass.getPooled = pooler || DEFAULT_POOLER;
if(!NewKlass.poolSize){
NewKlass.poolSize = DEFAULT_POOL_SIZE;}

NewKlass.release = standardReleaser;
return NewKlass;};


var PooledClass={
addPoolingTo:addPoolingTo, 
oneArgumentPooler:oneArgumentPooler, 
twoArgumentPooler:twoArgumentPooler, 
threeArgumentPooler:threeArgumentPooler, 
fiveArgumentPooler:fiveArgumentPooler};


module.exports = PooledClass;});
__d('invariant',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';























var invariant=function(condition, format, a, b, c, d, e, f){
if(__DEV__){
if(format === undefined){
throw new Error('invariant requires an error message argument');}}



if(!condition){
var error;
if(format === undefined){
error = new Error(
'Minified exception occurred; use the non-minified dev environment ' + 
'for the full error message and additional helpful warnings.');}else 

{
var args=[a, b, c, d, e, f];
var argIndex=0;
error = new Error(
'Invariant Violation: ' + 
format.replace(/%s/g, function(){return args[argIndex++];}));}



error.framesToPop = 1;
throw error;}};



module.exports = invariant;});
__d('ReactFragment',["ReactElement","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactElement=require('ReactElement');

var warning=require('warning');









if(__DEV__){
var fragmentKey='_reactFragment';
var didWarnKey='_reactDidWarn';
var canWarnForReactFragment=false;

try{



var dummy=function(){
return 1;};


Object.defineProperty(
{}, 
fragmentKey, 
{enumerable:false, value:true});


Object.defineProperty(
{}, 
'key', 
{enumerable:true, get:dummy});


canWarnForReactFragment = true;}
catch(x) {}

var proxyPropertyAccessWithWarning=function(obj, key){
Object.defineProperty(obj, key, {
enumerable:true, 
get:function(){
warning(
this[didWarnKey], 
'A ReactFragment is an opaque type. Accessing any of its ' + 
'properties is deprecated. Pass it to one of the React.Children ' + 
'helpers.');

this[didWarnKey] = true;
return this[fragmentKey][key];}, 

set:function(value){
warning(
this[didWarnKey], 
'A ReactFragment is an immutable opaque type. Mutating its ' + 
'properties is deprecated.');

this[didWarnKey] = true;
this[fragmentKey][key] = value;}});};




var issuedWarnings={};

var didWarnForFragment=function(fragment){


var fragmentCacheKey='';
for(var key in fragment) {
fragmentCacheKey += key + ':' + typeof fragment[key] + ',';}

var alreadyWarnedOnce=!!issuedWarnings[fragmentCacheKey];
issuedWarnings[fragmentCacheKey] = true;
return alreadyWarnedOnce;};}



var ReactFragment={


create:function(object){
if(__DEV__){
if(typeof object !== 'object' || !object || Array.isArray(object)){
warning(
false, 
'React.addons.createFragment only accepts a single object.', 
object);

return object;}

if(ReactElement.isValidElement(object)){
warning(
false, 
'React.addons.createFragment does not accept a ReactElement ' + 
'without a wrapper object.');

return object;}

if(canWarnForReactFragment){
var proxy={};
Object.defineProperty(proxy, fragmentKey, {
enumerable:false, 
value:object});

Object.defineProperty(proxy, didWarnKey, {
writable:true, 
enumerable:false, 
value:false});

for(var key in object) {
proxyPropertyAccessWithWarning(proxy, key);}

Object.preventExtensions(proxy);
return proxy;}}


return object;}, 



extract:function(fragment){
if(__DEV__){
if(canWarnForReactFragment){
if(!fragment[fragmentKey]){
warning(
didWarnForFragment(fragment), 
'Any use of a keyed object should be wrapped in ' + 
'React.addons.createFragment(object) before being passed as a ' + 
'child.');

return fragment;}

return fragment[fragmentKey];}}


return fragment;}, 




extractIfFragment:function(fragment){
if(__DEV__){
if(canWarnForReactFragment){

if(fragment[fragmentKey]){
return fragment[fragmentKey];}




for(var key in fragment) {
if(fragment.hasOwnProperty(key) && 
ReactElement.isValidElement(fragment[key])){


return ReactFragment.extract(fragment);}}}}




return fragment;}};



module.exports = ReactFragment;});
__d('ReactElement',["ReactContext","ReactCurrentOwner","Object.assign","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactContext=require('ReactContext');
var ReactCurrentOwner=require('ReactCurrentOwner');

var assign=require('Object.assign');
var warning=require('warning');

var RESERVED_PROPS={
key:true, 
ref:true};









function defineWarningProperty(object, key){
Object.defineProperty(object, key, {

configurable:false, 
enumerable:true, 

get:function(){
if(!this._store){
return null;}

return this._store[key];}, 


set:function(value){
warning(
false, 
'Don\'t set the %s property of the React element. Instead, ' + 
'specify the correct value when initially creating the element.', 
key);

this._store[key] = value;}});}








var useMutationMembrane=false;







function defineMutationMembrane(prototype){
try{
var pseudoFrozenProperties={
props:true};

for(var key in pseudoFrozenProperties) {
defineWarningProperty(prototype, key);}

useMutationMembrane = true;}
catch(x) {}}














var ReactElement=function(type, key, ref, owner, context, props){

this.type = type;
this.key = key;
this.ref = ref;


this._owner = owner;



this._context = context;

if(__DEV__){




this._store = {props:props, originalProps:assign({}, props)};





try{
Object.defineProperty(this._store, 'validated', {
configurable:false, 
enumerable:false, 
writable:true});}

catch(x) {}

this._store.validated = false;




if(useMutationMembrane){
Object.freeze(this);
return;}}



this.props = props;};




ReactElement.prototype = {
_isReactElement:true};


if(__DEV__){
defineMutationMembrane(ReactElement.prototype);}


ReactElement.createElement = function(type, config, children){
var propName;


var props={};

var key=null;
var ref=null;

if(config != null){
ref = config.ref === undefined?null:config.ref;
key = config.key === undefined?null:'' + config.key;

for(propName in config) {
if(config.hasOwnProperty(propName) && 
!RESERVED_PROPS.hasOwnProperty(propName)){
props[propName] = config[propName];}}}






var childrenLength=arguments.length - 2;
if(childrenLength === 1){
props.children = children;}else 
if(childrenLength > 1){
var childArray=Array(childrenLength);
for(var i=0; i < childrenLength; i++) {
childArray[i] = arguments[i + 2];}

props.children = childArray;}



if(type && type.defaultProps){
var defaultProps=type.defaultProps;
for(propName in defaultProps) {
if(typeof props[propName] === 'undefined'){
props[propName] = defaultProps[propName];}}}




return new ReactElement(
type, 
key, 
ref, 
ReactCurrentOwner.current, 
ReactContext.current, 
props);};



ReactElement.createFactory = function(type){
var factory=ReactElement.createElement.bind(null, type);





factory.type = type;
return factory;};


ReactElement.cloneAndReplaceProps = function(oldElement, newProps){
var newElement=new ReactElement(
oldElement.type, 
oldElement.key, 
oldElement.ref, 
oldElement._owner, 
oldElement._context, 
newProps);


if(__DEV__){

newElement._store.validated = oldElement._store.validated;}

return newElement;};


ReactElement.cloneElement = function(element, config, children){
var propName;


var props=assign({}, element.props);


var key=element.key;
var ref=element.ref;


var owner=element._owner;

if(config != null){
if(config.ref !== undefined){

ref = config.ref;
owner = ReactCurrentOwner.current;}

if(config.key !== undefined){
key = '' + config.key;}


for(propName in config) {
if(config.hasOwnProperty(propName) && 
!RESERVED_PROPS.hasOwnProperty(propName)){
props[propName] = config[propName];}}}






var childrenLength=arguments.length - 2;
if(childrenLength === 1){
props.children = children;}else 
if(childrenLength > 1){
var childArray=Array(childrenLength);
for(var i=0; i < childrenLength; i++) {
childArray[i] = arguments[i + 2];}

props.children = childArray;}


return new ReactElement(
element.type, 
key, 
ref, 
owner, 
element._context, 
props);};








ReactElement.isValidElement = function(object){




var isElement=!!(object && object._isReactElement);





return isElement;};


module.exports = ReactElement;});
__d('ReactContext',["Object.assign","emptyObject","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var warning=require('warning');

var didWarn=false;







var ReactContext={





current:emptyObject, 

















withContext:function(newContext, scopedCallback){
if(__DEV__){
warning(
didWarn, 
'withContext is deprecated and will be removed in a future version. ' + 
'Use a wrapper component with getChildContext instead.');


didWarn = true;}


var result;
var previousContext=ReactContext.current;
ReactContext.current = assign({}, previousContext, newContext);
try{
result = scopedCallback();}finally 
{
ReactContext.current = previousContext;}

return result;}};




module.exports = ReactContext;});
__d('Object.assign',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














function assign(target, sources){
if(target == null){
throw new TypeError('Object.assign target cannot be null or undefined');}


var to=Object(target);
var hasOwnProperty=Object.prototype.hasOwnProperty;

for(var nextIndex=1; nextIndex < arguments.length; nextIndex++) {
var nextSource=arguments[nextIndex];
if(nextSource == null){
continue;}


var from=Object(nextSource);






for(var key in from) {
if(hasOwnProperty.call(from, key)){
to[key] = from[key];}}}




return to;}


module.exports = assign;});
__d('emptyObject',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";












var emptyObject={};

if(__DEV__){
Object.freeze(emptyObject);}


module.exports = emptyObject;});
__d('warning',["emptyFunction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var emptyFunction=require('emptyFunction');








var warning=emptyFunction;

if(__DEV__){
warning = function(condition, format){for(var _len=arguments.length, args=Array(_len > 2?_len - 2:0), _key=2; _key < _len; _key++) {args[_key - 2] = arguments[_key];}
if(format === undefined){
throw new Error(
'`warning(condition, format, ...args)` requires a warning ' + 
'message argument');}



if(format.length < 10 || /^[s\W]*$/.test(format)){
throw new Error(
'The warning format should be able to uniquely identify this ' + 
'warning. Please, use a more descriptive format than: ' + format);}



if(format.indexOf('Failed Composite propType: ') === 0){
return;}


if(!condition){
var argIndex=0;
var message='Warning: ' + format.replace(/%s/g, function(){return args[argIndex++];});
console.warn(message);
try{



throw new Error(message);}
catch(x) {}}};}




module.exports = warning;});
__d('emptyFunction',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 










makeEmptyFunction(arg){
return function(){
return arg;};}








function emptyFunction(){}

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function(){return this;};
emptyFunction.thatReturnsArgument = function(arg){return arg;};

module.exports = emptyFunction;});
__d('ReactCurrentOwner',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















var ReactCurrentOwner={





current:null};



module.exports = ReactCurrentOwner;});
__d('traverseAllChildren',["ReactElement","ReactFragment","ReactInstanceHandles","getIteratorFn","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactInstanceHandles=require('ReactInstanceHandles');

var getIteratorFn=require('getIteratorFn');
var invariant=require('invariant');
var warning=require('warning');

var SEPARATOR=ReactInstanceHandles.SEPARATOR;
var SUBSEPARATOR=':';






var userProvidedKeyEscaperLookup={
'=':'=0', 
'.':'=1', 
':':'=2'};


var userProvidedKeyEscapeRegex=/[=.:]/g;

var didWarnAboutMaps=false;

function userProvidedKeyEscaper(match){
return userProvidedKeyEscaperLookup[match];}









function getComponentKey(component, index){
if(component && component.key != null){

return wrapUserProvidedKey(component.key);}


return index.toString(36);}








function escapeUserProvidedKey(text){
return ('' + text).replace(
userProvidedKeyEscapeRegex, 
userProvidedKeyEscaper);}










function wrapUserProvidedKey(key){
return '$' + escapeUserProvidedKey(key);}











function traverseAllChildrenImpl(
children, 
nameSoFar, 
indexSoFar, 
callback, 
traverseContext)
{
var type=typeof children;

if(type === 'undefined' || type === 'boolean'){

children = null;}


if(children === null || 
type === 'string' || 
type === 'number' || 
ReactElement.isValidElement(children)){
callback(
traverseContext, 
children, 


nameSoFar === ''?SEPARATOR + getComponentKey(children, 0):nameSoFar, 
indexSoFar);

return 1;}


var child, nextName, nextIndex;
var subtreeCount=0;

if(Array.isArray(children)){
for(var i=0; i < children.length; i++) {
child = children[i];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
getComponentKey(child, i);

nextIndex = indexSoFar + subtreeCount;
subtreeCount += traverseAllChildrenImpl(
child, 
nextName, 
nextIndex, 
callback, 
traverseContext);}}else 


{
var iteratorFn=getIteratorFn(children);
if(iteratorFn){
var iterator=iteratorFn.call(children);
var step;
if(iteratorFn !== children.entries){
var ii=0;
while(!(step = iterator.next()).done) {
child = step.value;
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
getComponentKey(child, ii++);

nextIndex = indexSoFar + subtreeCount;
subtreeCount += traverseAllChildrenImpl(
child, 
nextName, 
nextIndex, 
callback, 
traverseContext);}}else 


{
if(__DEV__){
warning(
didWarnAboutMaps, 
'Using Maps as children is not yet fully supported. It is an ' + 
'experimental feature that might be removed. Convert it to a ' + 
'sequence / iterable of keyed ReactElements instead.');

didWarnAboutMaps = true;}


while(!(step = iterator.next()).done) {
var entry=step.value;
if(entry){
child = entry[1];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + 
getComponentKey(child, 0);

nextIndex = indexSoFar + subtreeCount;
subtreeCount += traverseAllChildrenImpl(
child, 
nextName, 
nextIndex, 
callback, 
traverseContext);}}}}else 




if(type === 'object'){
invariant(
children.nodeType !== 1, 
'traverseAllChildren(...): Encountered an invalid child; DOM ' + 
'elements are not valid children of React components.');

var fragment=ReactFragment.extract(children);
for(var key in fragment) {
if(fragment.hasOwnProperty(key)){
child = fragment[key];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
wrapUserProvidedKey(key) + SUBSEPARATOR + 
getComponentKey(child, 0);

nextIndex = indexSoFar + subtreeCount;
subtreeCount += traverseAllChildrenImpl(
child, 
nextName, 
nextIndex, 
callback, 
traverseContext);}}}}






return subtreeCount;}


















function traverseAllChildren(children, callback, traverseContext){
if(children == null){
return 0;}


return traverseAllChildrenImpl(children, '', 0, callback, traverseContext);}


module.exports = traverseAllChildren;});
__d('ReactInstanceHandles',["ReactRootIndex","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















var ReactRootIndex=require('ReactRootIndex');

var invariant=require('invariant');

var SEPARATOR='.';
var SEPARATOR_LENGTH=SEPARATOR.length;




var MAX_TREE_DEPTH=100;








function getReactRootIDString(index){
return SEPARATOR + index.toString(36);}










function isBoundary(id, index){
return id.charAt(index) === SEPARATOR || index === id.length;}









function isValidID(id){
return id === '' || 
id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;}











function isAncestorIDOf(ancestorID, descendantID){
return (
descendantID.indexOf(ancestorID) === 0 && 
isBoundary(descendantID, ancestorID.length));}










function getParentID(id){
return id?id.substr(0, id.lastIndexOf(SEPARATOR)):'';}











function getNextDescendantID(ancestorID, destinationID){
invariant(
isValidID(ancestorID) && isValidID(destinationID), 
'getNextDescendantID(%s, %s): Received an invalid React DOM ID.', 
ancestorID, 
destinationID);

invariant(
isAncestorIDOf(ancestorID, destinationID), 
'getNextDescendantID(...): React has made an invalid assumption about ' + 
'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.', 
ancestorID, 
destinationID);

if(ancestorID === destinationID){
return ancestorID;}



var start=ancestorID.length + SEPARATOR_LENGTH;
for(var i=start; i < destinationID.length; i++) {
if(isBoundary(destinationID, i)){
break;}}


return destinationID.substr(0, i);}













function getFirstCommonAncestorID(oneID, twoID){
var minLength=Math.min(oneID.length, twoID.length);
if(minLength === 0){
return '';}

var lastCommonMarkerIndex=0;

for(var i=0; i <= minLength; i++) {
if(isBoundary(oneID, i) && isBoundary(twoID, i)){
lastCommonMarkerIndex = i;}else 
if(oneID.charAt(i) !== twoID.charAt(i)){
break;}}


var longestCommonID=oneID.substr(0, lastCommonMarkerIndex);
invariant(
isValidID(longestCommonID), 
'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s', 
oneID, 
twoID, 
longestCommonID);

return longestCommonID;}














function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast){
start = start || '';
stop = stop || '';
invariant(
start !== stop, 
'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.', 
start);

var traverseUp=isAncestorIDOf(stop, start);
invariant(
traverseUp || isAncestorIDOf(start, stop), 
'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 
'not have a parent path.', 
start, 
stop);


var depth=0;
var traverse=traverseUp?getParentID:getNextDescendantID;
for(var id=start;; id = traverse(id, stop)) {
var ret;
if((!skipFirst || id !== start) && (!skipLast || id !== stop)){
ret = cb(id, traverseUp, arg);}

if(ret === false || id === stop){

break;}

invariant(
depth++ < MAX_TREE_DEPTH, 
'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 
'traversing the React DOM ID tree. This may be due to malformed IDs: %s', 
start, stop);}}











var ReactInstanceHandles={





createReactRootID:function(){
return getReactRootIDString(ReactRootIndex.createReactRootIndex());}, 










createReactID:function(rootID, name){
return rootID + name;}, 










getReactRootIDFromNodeID:function(id){
if(id && id.charAt(0) === SEPARATOR && id.length > 1){
var index=id.indexOf(SEPARATOR, 1);
return index > -1?id.substr(0, index):id;}

return null;}, 
















traverseEnterLeave:function(leaveID, enterID, cb, upArg, downArg){
var ancestorID=getFirstCommonAncestorID(leaveID, enterID);
if(ancestorID !== leaveID){
traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);}

if(ancestorID !== enterID){
traverseParentPath(ancestorID, enterID, cb, downArg, true, false);}}, 













traverseTwoPhase:function(targetID, cb, arg){
if(targetID){
traverseParentPath('', targetID, cb, arg, true, false);
traverseParentPath(targetID, '', cb, arg, false, true);}}, 






traverseTwoPhaseSkipTarget:function(targetID, cb, arg){
if(targetID){
traverseParentPath('', targetID, cb, arg, true, true);
traverseParentPath(targetID, '', cb, arg, true, true);}}, 















traverseAncestors:function(targetID, cb, arg){
traverseParentPath('', targetID, cb, arg, true, false);}, 






_getFirstCommonAncestorID:getFirstCommonAncestorID, 





_getNextDescendantID:getNextDescendantID, 

isAncestorIDOf:isAncestorIDOf, 

SEPARATOR:SEPARATOR};



module.exports = ReactInstanceHandles;});
__d('ReactRootIndex',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactRootIndexInjection={



injectCreateReactRootIndex:function(_createReactRootIndex){
ReactRootIndex.createReactRootIndex = _createReactRootIndex;}};



var ReactRootIndex={
createReactRootIndex:null, 
injection:ReactRootIndexInjection};


module.exports = ReactRootIndex;});
__d('getIteratorFn',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var ITERATOR_SYMBOL=typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL='@@iterator';















function getIteratorFn(maybeIterable){
var iteratorFn=maybeIterable && (
ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || 
maybeIterable[FAUX_ITERATOR_SYMBOL]);

if(typeof iteratorFn === 'function'){
return iteratorFn;}}



module.exports = getIteratorFn;});
__d('ReactClass',["ReactComponent","ReactCurrentOwner","ReactElement","ReactErrorUtils","ReactInstanceMap","ReactLifeCycle","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactUpdateQueue","Object.assign","invariant","keyMirror","keyOf","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactComponent=require('ReactComponent');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactErrorUtils=require('ReactErrorUtils');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactLifeCycle=require('ReactLifeCycle');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactUpdateQueue=require('ReactUpdateQueue');

var assign=require('Object.assign');
var invariant=require('invariant');
var keyMirror=require('keyMirror');
var keyOf=require('keyOf');
var warning=require('warning');

var MIXINS_KEY=keyOf({mixins:null});




var SpecPolicy=keyMirror({



DEFINE_ONCE:null, 




DEFINE_MANY:null, 



OVERRIDE_BASE:null, 





DEFINE_MANY_MERGED:null});



var injectedMixins=[];























var ReactClassInterface={







mixins:SpecPolicy.DEFINE_MANY, 








statics:SpecPolicy.DEFINE_MANY, 







propTypes:SpecPolicy.DEFINE_MANY, 







contextTypes:SpecPolicy.DEFINE_MANY, 







childContextTypes:SpecPolicy.DEFINE_MANY, 













getDefaultProps:SpecPolicy.DEFINE_MANY_MERGED, 















getInitialState:SpecPolicy.DEFINE_MANY_MERGED, 





getChildContext:SpecPolicy.DEFINE_MANY_MERGED, 

















render:SpecPolicy.DEFINE_ONCE, 












componentWillMount:SpecPolicy.DEFINE_MANY, 











componentDidMount:SpecPolicy.DEFINE_MANY, 




















componentWillReceiveProps:SpecPolicy.DEFINE_MANY, 





















shouldComponentUpdate:SpecPolicy.DEFINE_ONCE, 
















componentWillUpdate:SpecPolicy.DEFINE_MANY, 













componentDidUpdate:SpecPolicy.DEFINE_MANY, 












componentWillUnmount:SpecPolicy.DEFINE_MANY, 















updateComponent:SpecPolicy.OVERRIDE_BASE};












var RESERVED_SPEC_KEYS={
displayName:function(Constructor, displayName){
Constructor.displayName = displayName;}, 

mixins:function(Constructor, mixins){
if(mixins){
for(var i=0; i < mixins.length; i++) {
mixSpecIntoComponent(Constructor, mixins[i]);}}}, 



childContextTypes:function(Constructor, childContextTypes){
if(__DEV__){
validateTypeDef(
Constructor, 
childContextTypes, 
ReactPropTypeLocations.childContext);}


Constructor.childContextTypes = assign(
{}, 
Constructor.childContextTypes, 
childContextTypes);}, 


contextTypes:function(Constructor, contextTypes){
if(__DEV__){
validateTypeDef(
Constructor, 
contextTypes, 
ReactPropTypeLocations.context);}


Constructor.contextTypes = assign(
{}, 
Constructor.contextTypes, 
contextTypes);}, 






getDefaultProps:function(Constructor, getDefaultProps){
if(Constructor.getDefaultProps){
Constructor.getDefaultProps = createMergedResultFunction(
Constructor.getDefaultProps, 
getDefaultProps);}else 

{
Constructor.getDefaultProps = getDefaultProps;}}, 


propTypes:function(Constructor, propTypes){
if(__DEV__){
validateTypeDef(
Constructor, 
propTypes, 
ReactPropTypeLocations.prop);}


Constructor.propTypes = assign(
{}, 
Constructor.propTypes, 
propTypes);}, 


statics:function(Constructor, statics){
mixStaticSpecIntoComponent(Constructor, statics);}};



function validateTypeDef(Constructor, typeDef, location){
for(var propName in typeDef) {
if(typeDef.hasOwnProperty(propName)){


warning(
typeof typeDef[propName] === 'function', 
'%s: %s type `%s` is invalid; it must be a function, usually from ' + 
'React.PropTypes.', 
Constructor.displayName || 'ReactClass', 
ReactPropTypeLocationNames[location], 
propName);}}}





function validateMethodOverride(proto, name){
var specPolicy=ReactClassInterface.hasOwnProperty(name)?
ReactClassInterface[name]:
null;


if(ReactClassMixin.hasOwnProperty(name)){
invariant(
specPolicy === SpecPolicy.OVERRIDE_BASE, 
'ReactClassInterface: You are attempting to override ' + 
'`%s` from your class specification. Ensure that your method names ' + 
'do not overlap with React methods.', 
name);}




if(proto.hasOwnProperty(name)){
invariant(
specPolicy === SpecPolicy.DEFINE_MANY || 
specPolicy === SpecPolicy.DEFINE_MANY_MERGED, 
'ReactClassInterface: You are attempting to define ' + 
'`%s` on your component more than once. This conflict may be due ' + 
'to a mixin.', 
name);}}








function mixSpecIntoComponent(Constructor, spec){
if(!spec){
return;}


invariant(
typeof spec !== 'function', 
'ReactClass: You\'re attempting to ' + 
'use a component class as a mixin. Instead, just use a regular object.');

invariant(
!ReactElement.isValidElement(spec), 
'ReactClass: You\'re attempting to ' + 
'use a component as a mixin. Instead, just use a regular object.');


var proto=Constructor.prototype;




if(spec.hasOwnProperty(MIXINS_KEY)){
RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);}


for(var name in spec) {
if(!spec.hasOwnProperty(name)){
continue;}


if(name === MIXINS_KEY){

continue;}


var property=spec[name];
validateMethodOverride(proto, name);

if(RESERVED_SPEC_KEYS.hasOwnProperty(name)){
RESERVED_SPEC_KEYS[name](Constructor, property);}else 
{




var isReactClassMethod=
ReactClassInterface.hasOwnProperty(name);
var isAlreadyDefined=proto.hasOwnProperty(name);
var markedDontBind=property && property.__reactDontBind;
var isFunction=typeof property === 'function';
var shouldAutoBind=
isFunction && 
!isReactClassMethod && 
!isAlreadyDefined && 
!markedDontBind;

if(shouldAutoBind){
if(!proto.__reactAutoBindMap){
proto.__reactAutoBindMap = {};}

proto.__reactAutoBindMap[name] = property;
proto[name] = property;}else 
{
if(isAlreadyDefined){
var specPolicy=ReactClassInterface[name];


invariant(
isReactClassMethod && (
specPolicy === SpecPolicy.DEFINE_MANY_MERGED || 
specPolicy === SpecPolicy.DEFINE_MANY), 

'ReactClass: Unexpected spec policy %s for key %s ' + 
'when mixing in component specs.', 
specPolicy, 
name);




if(specPolicy === SpecPolicy.DEFINE_MANY_MERGED){
proto[name] = createMergedResultFunction(proto[name], property);}else 
if(specPolicy === SpecPolicy.DEFINE_MANY){
proto[name] = createChainedFunction(proto[name], property);}}else 

{
proto[name] = property;
if(__DEV__){


if(typeof property === 'function' && spec.displayName){
proto[name].displayName = spec.displayName + '_' + name;}}}}}}}








function mixStaticSpecIntoComponent(Constructor, statics){
if(!statics){
return;}

for(var name in statics) {
var property=statics[name];
if(!statics.hasOwnProperty(name)){
continue;}


var isReserved=(name in RESERVED_SPEC_KEYS);
invariant(
!isReserved, 
'ReactClass: You are attempting to define a reserved ' + 
'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 
'as an instance property instead; it will still be accessible on the ' + 
'constructor.', 
name);


var isInherited=(name in Constructor);
invariant(
!isInherited, 
'ReactClass: You are attempting to define ' + 
'`%s` on your component more than once. This conflict may be ' + 
'due to a mixin.', 
name);

Constructor[name] = property;}}










function mergeIntoWithNoDuplicateKeys(one, two){
invariant(
one && two && typeof one === 'object' && typeof two === 'object', 
'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');


for(var key in two) {
if(two.hasOwnProperty(key)){
invariant(
one[key] === undefined, 
'mergeIntoWithNoDuplicateKeys(): ' + 
'Tried to merge two objects with the same key: `%s`. This conflict ' + 
'may be due to a mixin; in particular, this may be caused by two ' + 
'getInitialState() or getDefaultProps() methods returning objects ' + 
'with clashing keys.', 
key);

one[key] = two[key];}}


return one;}










function createMergedResultFunction(one, two){
return function mergedResult(){
var a=one.apply(this, arguments);
var b=two.apply(this, arguments);
if(a == null){
return b;}else 
if(b == null){
return a;}

var c={};
mergeIntoWithNoDuplicateKeys(c, a);
mergeIntoWithNoDuplicateKeys(c, b);
return c;};}











function createChainedFunction(one, two){
return function chainedFunction(){
one.apply(this, arguments);
two.apply(this, arguments);};}










function bindAutoBindMethod(component, method){
var boundMethod=method.bind(component);
if(__DEV__){
boundMethod.__reactBoundContext = component;
boundMethod.__reactBoundMethod = method;
boundMethod.__reactBoundArguments = null;
var componentName=component.constructor.displayName;
var _bind=boundMethod.bind;

boundMethod.bind = function(newThis){for(var _len=arguments.length, args=Array(_len > 1?_len - 1:0), _key=1; _key < _len; _key++) {args[_key - 1] = arguments[_key];}



if(newThis !== component && newThis !== null){
warning(
false, 
'bind(): React component methods may only be bound to the ' + 
'component instance. See %s', 
componentName);}else 

if(!args.length){
warning(
false, 
'bind(): You are binding a component method to the component. ' + 
'React does this for you automatically in a high-performance ' + 
'way, so you can safely remove this call. See %s', 
componentName);

return boundMethod;}

var reboundMethod=_bind.apply(boundMethod, arguments);
reboundMethod.__reactBoundContext = component;
reboundMethod.__reactBoundMethod = method;
reboundMethod.__reactBoundArguments = args;
return reboundMethod;};}



return boundMethod;}







function bindAutoBindMethods(component){
for(var autoBindKey in component.__reactAutoBindMap) {
if(component.__reactAutoBindMap.hasOwnProperty(autoBindKey)){
var method=component.__reactAutoBindMap[autoBindKey];
component[autoBindKey] = bindAutoBindMethod(
component, 
ReactErrorUtils.guard(
method, 
component.constructor.displayName + '.' + autoBindKey));}}}






var typeDeprecationDescriptor={
enumerable:false, 
get:function(){
var displayName=this.displayName || this.name || 'Component';
warning(
false, 
'%s.type is deprecated. Use %s directly to access the class.', 
displayName, 
displayName);

Object.defineProperty(this, 'type', {
value:this});

return this;}};







var ReactClassMixin={





replaceState:function(newState, callback){
ReactUpdateQueue.enqueueReplaceState(this, newState);
if(callback){
ReactUpdateQueue.enqueueCallback(this, callback);}}, 









isMounted:function(){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner !== null){
warning(
owner._warnedAboutRefsInRender, 
'%s is accessing isMounted inside its render() function. ' + 
'render() should be a pure function of props and state. It should ' + 
'never access something that requires stale data from the previous ' + 
'render, such as refs. Move this logic to componentDidMount and ' + 
'componentDidUpdate instead.', 
owner.getName() || 'A component');

owner._warnedAboutRefsInRender = true;}}


var internalInstance=ReactInstanceMap.get(this);
return (
internalInstance && 
internalInstance !== ReactLifeCycle.currentlyMountingInstance);}, 












setProps:function(partialProps, callback){
ReactUpdateQueue.enqueueSetProps(this, partialProps);
if(callback){
ReactUpdateQueue.enqueueCallback(this, callback);}}, 












replaceProps:function(newProps, callback){
ReactUpdateQueue.enqueueReplaceProps(this, newProps);
if(callback){
ReactUpdateQueue.enqueueCallback(this, callback);}}};




var ReactClassComponent=function(){};
assign(
ReactClassComponent.prototype, 
ReactComponent.prototype, 
ReactClassMixin);







var ReactClass={








createClass:function(spec){
var Constructor=function(props, context){



if(__DEV__){
warning(
this instanceof Constructor, 
'Something is calling a React component directly. Use a factory or ' + 
'JSX instead. See: http://fb.me/react-legacyfactory');}




if(this.__reactAutoBindMap){
bindAutoBindMethods(this);}


this.props = props;
this.context = context;
this.state = null;




var initialState=this.getInitialState?this.getInitialState():null;
if(__DEV__){

if(typeof initialState === 'undefined' && 
this.getInitialState._isMockFunction){


initialState = null;}}


invariant(
typeof initialState === 'object' && !Array.isArray(initialState), 
'%s.getInitialState(): must return an object or null', 
Constructor.displayName || 'ReactCompositeComponent');


this.state = initialState;};

Constructor.prototype = new ReactClassComponent();
Constructor.prototype.constructor = Constructor;

injectedMixins.forEach(
mixSpecIntoComponent.bind(null, Constructor));


mixSpecIntoComponent(Constructor, spec);


if(Constructor.getDefaultProps){
Constructor.defaultProps = Constructor.getDefaultProps();}


if(__DEV__){




if(Constructor.getDefaultProps){
Constructor.getDefaultProps.isReactClassApproved = {};}

if(Constructor.prototype.getInitialState){
Constructor.prototype.getInitialState.isReactClassApproved = {};}}



invariant(
Constructor.prototype.render, 
'createClass(...): Class specification must implement a `render` method.');


if(__DEV__){
warning(
!Constructor.prototype.componentShouldUpdate, 
'%s has a method called ' + 
'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 
'The name is phrased as a question because the function is ' + 
'expected to return a value.', 
spec.displayName || 'A component');}




for(var methodName in ReactClassInterface) {
if(!Constructor.prototype[methodName]){
Constructor.prototype[methodName] = null;}}




Constructor.type = Constructor;
if(__DEV__){
try{
Object.defineProperty(Constructor, 'type', typeDeprecationDescriptor);}
catch(x) {}}




return Constructor;}, 


injection:{
injectMixin:function(mixin){
injectedMixins.push(mixin);}}};





module.exports = ReactClass;});
__d('ReactComponent',["ReactUpdateQueue","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactUpdateQueue=require('ReactUpdateQueue');

var invariant=require('invariant');
var warning=require('warning');




function ReactComponent(props, context){
this.props = props;
this.context = context;}



























ReactComponent.prototype.setState = function(partialState, callback){
invariant(
typeof partialState === 'object' || 
typeof partialState === 'function' || 
partialState == null, 
'setState(...): takes an object of state variables to update or a ' + 
'function which returns an object of state variables.');

if(__DEV__){
warning(
partialState != null, 
'setState(...): You passed an undefined or null state object; ' + 
'instead, use forceUpdate().');}


ReactUpdateQueue.enqueueSetState(this, partialState);
if(callback){
ReactUpdateQueue.enqueueCallback(this, callback);}};

















ReactComponent.prototype.forceUpdate = function(callback){
ReactUpdateQueue.enqueueForceUpdate(this);
if(callback){
ReactUpdateQueue.enqueueCallback(this, callback);}};








if(__DEV__){
var deprecatedAPIs={
getDOMNode:'getDOMNode', 
isMounted:'isMounted', 
replaceProps:'replaceProps', 
replaceState:'replaceState', 
setProps:'setProps'};

var defineDeprecationWarning=function(methodName, displayName){
try{
Object.defineProperty(ReactComponent.prototype, methodName, {
get:function(){
warning(
false, 
'%s(...) is deprecated in plain JavaScript React classes.', 
displayName);

return undefined;}});}


catch(x) {}};



for(var fnName in deprecatedAPIs) {
if(deprecatedAPIs.hasOwnProperty(fnName)){
defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);}}}




module.exports = ReactComponent;});
__d('ReactUpdateQueue',["ReactLifeCycle","ReactCurrentOwner","ReactElement","ReactInstanceMap","ReactUpdates","Object.assign","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactLifeCycle=require('ReactLifeCycle');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactUpdates=require('ReactUpdates');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');

function enqueueUpdate(internalInstance){
if(internalInstance !== ReactLifeCycle.currentlyMountingInstance){




ReactUpdates.enqueueUpdate(internalInstance);}}



function getInternalInstanceReadyForUpdate(publicInstance, callerName){
invariant(
ReactCurrentOwner.current == null, 
'%s(...): Cannot update during an existing state transition ' + 
'(such as within `render`). Render methods should be a pure function ' + 
'of props and state.', 
callerName);


var internalInstance=ReactInstanceMap.get(publicInstance);
if(!internalInstance){
if(__DEV__){



warning(
!callerName, 
'%s(...): Can only update a mounted or mounting component. ' + 
'This usually means you called %s() on an unmounted ' + 
'component. This is a no-op.', 
callerName, 
callerName);}


return null;}


if(internalInstance === ReactLifeCycle.currentlyUnmountingInstance){
return null;}


return internalInstance;}






var ReactUpdateQueue={









enqueueCallback:function(publicInstance, callback){
invariant(
typeof callback === 'function', 
'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + 
'`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 
'isn\'t callable.');

var internalInstance=getInternalInstanceReadyForUpdate(publicInstance);






if(!internalInstance || 
internalInstance === ReactLifeCycle.currentlyMountingInstance){
return null;}


if(internalInstance._pendingCallbacks){
internalInstance._pendingCallbacks.push(callback);}else 
{
internalInstance._pendingCallbacks = [callback];}





enqueueUpdate(internalInstance);}, 


enqueueCallbackInternal:function(internalInstance, callback){
invariant(
typeof callback === 'function', 
'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + 
'`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 
'isn\'t callable.');

if(internalInstance._pendingCallbacks){
internalInstance._pendingCallbacks.push(callback);}else 
{
internalInstance._pendingCallbacks = [callback];}

enqueueUpdate(internalInstance);}, 















enqueueForceUpdate:function(publicInstance){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance, 
'forceUpdate');


if(!internalInstance){
return;}


internalInstance._pendingForceUpdate = true;

enqueueUpdate(internalInstance);}, 













enqueueReplaceState:function(publicInstance, completeState){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance, 
'replaceState');


if(!internalInstance){
return;}


internalInstance._pendingStateQueue = [completeState];
internalInstance._pendingReplaceState = true;

enqueueUpdate(internalInstance);}, 












enqueueSetState:function(publicInstance, partialState){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance, 
'setState');


if(!internalInstance){
return;}


var queue=
internalInstance._pendingStateQueue || (
internalInstance._pendingStateQueue = []);
queue.push(partialState);

enqueueUpdate(internalInstance);}, 









enqueueSetProps:function(publicInstance, partialProps){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance, 
'setProps');


if(!internalInstance){
return;}


invariant(
internalInstance._isTopLevel, 
'setProps(...): You called `setProps` on a ' + 
'component with a parent. This is an anti-pattern since props will ' + 
'get reactively updated when rendered. Instead, change the owner\'s ' + 
'`render` method to pass the correct value as props to the component ' + 
'where it is created.');




var element=internalInstance._pendingElement || 
internalInstance._currentElement;
var props=assign({}, element.props, partialProps);
internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(
element, 
props);


enqueueUpdate(internalInstance);}, 









enqueueReplaceProps:function(publicInstance, props){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance, 
'replaceProps');


if(!internalInstance){
return;}


invariant(
internalInstance._isTopLevel, 
'replaceProps(...): You called `replaceProps` on a ' + 
'component with a parent. This is an anti-pattern since props will ' + 
'get reactively updated when rendered. Instead, change the owner\'s ' + 
'`render` method to pass the correct value as props to the component ' + 
'where it is created.');




var element=internalInstance._pendingElement || 
internalInstance._currentElement;
internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(
element, 
props);


enqueueUpdate(internalInstance);}, 


enqueueElementInternal:function(internalInstance, newElement){
internalInstance._pendingElement = newElement;
enqueueUpdate(internalInstance);}};




module.exports = ReactUpdateQueue;});
__d('ReactLifeCycle',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




























var ReactLifeCycle={
currentlyMountingInstance:null, 
currentlyUnmountingInstance:null};


module.exports = ReactLifeCycle;});
__d('ReactInstanceMap',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















var ReactInstanceMap={






remove:function(key){
key._reactInternalInstance = undefined;}, 


get:function(key){
return key._reactInternalInstance;}, 


has:function(key){
return key._reactInternalInstance !== undefined;}, 


set:function(key, value){
key._reactInternalInstance = value;}};




module.exports = ReactInstanceMap;});
__d('ReactUpdates',["CallbackQueue","PooledClass","ReactCurrentOwner","ReactPerf","ReactReconciler","Transaction","Object.assign","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var CallbackQueue=require('CallbackQueue');
var PooledClass=require('PooledClass');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var Transaction=require('Transaction');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');

var dirtyComponents=[];
var asapCallbackQueue=CallbackQueue.getPooled();
var asapEnqueued=false;

var batchingStrategy=null;

function ensureInjected(){
invariant(
ReactUpdates.ReactReconcileTransaction && batchingStrategy, 
'ReactUpdates: must inject a reconcile transaction class and batching ' + 
'strategy');}



var NESTED_UPDATES={
initialize:function(){
this.dirtyComponentsLength = dirtyComponents.length;}, 

close:function(){
if(this.dirtyComponentsLength !== dirtyComponents.length){





dirtyComponents.splice(0, this.dirtyComponentsLength);
flushBatchedUpdates();}else 
{
dirtyComponents.length = 0;}}};




var UPDATE_QUEUEING={
initialize:function(){
this.callbackQueue.reset();}, 

close:function(){
this.callbackQueue.notifyAll();}};



var TRANSACTION_WRAPPERS=[NESTED_UPDATES, UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction(){
this.reinitializeTransaction();
this.dirtyComponentsLength = null;
this.callbackQueue = CallbackQueue.getPooled();
this.reconcileTransaction = 
ReactUpdates.ReactReconcileTransaction.getPooled();}


assign(
ReactUpdatesFlushTransaction.prototype, 
Transaction.Mixin, {
getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;}, 


destructor:function(){
this.dirtyComponentsLength = null;
CallbackQueue.release(this.callbackQueue);
this.callbackQueue = null;
ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
this.reconcileTransaction = null;}, 


perform:function(method, scope, a){


return Transaction.Mixin.perform.call(
this, 
this.reconcileTransaction.perform, 
this.reconcileTransaction, 
method, 
scope, 
a);}});




PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b, c, d){
ensureInjected();
batchingStrategy.batchedUpdates(callback, a, b, c, d);}









function mountOrderComparator(c1, c2){
return c1._mountOrder - c2._mountOrder;}


function runBatchedUpdates(transaction){
var len=transaction.dirtyComponentsLength;
invariant(
len === dirtyComponents.length, 
'Expected flush transaction\'s stored dirty-components length (%s) to ' + 
'match dirty-components array length (%s).', 
len, 
dirtyComponents.length);





dirtyComponents.sort(mountOrderComparator);

for(var i=0; i < len; i++) {



var component=dirtyComponents[i];




var callbacks=component._pendingCallbacks;
component._pendingCallbacks = null;

ReactReconciler.performUpdateIfNecessary(
component, 
transaction.reconcileTransaction);


if(callbacks){
for(var j=0; j < callbacks.length; j++) {
transaction.callbackQueue.enqueue(
callbacks[j], 
component.getPublicInstance());}}}}






var flushBatchedUpdates=function(){




while(dirtyComponents.length || asapEnqueued) {
if(dirtyComponents.length){
var transaction=ReactUpdatesFlushTransaction.getPooled();
transaction.perform(runBatchedUpdates, null, transaction);
ReactUpdatesFlushTransaction.release(transaction);}


if(asapEnqueued){
asapEnqueued = false;
var queue=asapCallbackQueue;
asapCallbackQueue = CallbackQueue.getPooled();
queue.notifyAll();
CallbackQueue.release(queue);}}};



flushBatchedUpdates = ReactPerf.measure(
'ReactUpdates', 
'flushBatchedUpdates', 
flushBatchedUpdates);






function enqueueUpdate(component){
ensureInjected();






warning(
ReactCurrentOwner.current == null, 
'enqueueUpdate(): Render methods should be a pure function of props ' + 
'and state; triggering nested component updates from render is not ' + 
'allowed. If necessary, trigger nested updates in ' + 
'componentDidUpdate.');


if(!batchingStrategy.isBatchingUpdates){
batchingStrategy.batchedUpdates(enqueueUpdate, component);
return;}


dirtyComponents.push(component);}






function asap(callback, context){
invariant(
batchingStrategy.isBatchingUpdates, 
'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 
'updates are not being batched.');

asapCallbackQueue.enqueue(callback, context);
asapEnqueued = true;}


var ReactUpdatesInjection={
injectReconcileTransaction:function(ReconcileTransaction){
invariant(
ReconcileTransaction, 
'ReactUpdates: must provide a reconcile transaction class');

ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;}, 


injectBatchingStrategy:function(_batchingStrategy){
invariant(
_batchingStrategy, 
'ReactUpdates: must provide a batching strategy');

invariant(
typeof _batchingStrategy.batchedUpdates === 'function', 
'ReactUpdates: must provide a batchedUpdates() function');

invariant(
typeof _batchingStrategy.isBatchingUpdates === 'boolean', 
'ReactUpdates: must provide an isBatchingUpdates boolean attribute');

batchingStrategy = _batchingStrategy;}};



var ReactUpdates={






ReactReconcileTransaction:null, 

batchedUpdates:batchedUpdates, 
enqueueUpdate:enqueueUpdate, 
flushBatchedUpdates:flushBatchedUpdates, 
injection:ReactUpdatesInjection, 
asap:asap};


module.exports = ReactUpdates;});
__d('CallbackQueue',["PooledClass","Object.assign","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PooledClass=require('PooledClass');

var assign=require('Object.assign');
var invariant=require('invariant');












function CallbackQueue(){
this._callbacks = null;
this._contexts = null;}


assign(CallbackQueue.prototype, {








enqueue:function(callback, context){
this._callbacks = this._callbacks || [];
this._contexts = this._contexts || [];
this._callbacks.push(callback);
this._contexts.push(context);}, 








notifyAll:function(){
var callbacks=this._callbacks;
var contexts=this._contexts;
if(callbacks){
invariant(
callbacks.length === contexts.length, 
'Mismatched list of contexts in callback queue');

this._callbacks = null;
this._contexts = null;
for(var i=0, l=callbacks.length; i < l; i++) {
callbacks[i].call(contexts[i]);}

callbacks.length = 0;
contexts.length = 0;}}, 








reset:function(){
this._callbacks = null;
this._contexts = null;}, 





destructor:function(){
this.reset();}});




PooledClass.addPoolingTo(CallbackQueue);

module.exports = CallbackQueue;});
__d('ReactPerf',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

















var ReactPerf={




enableMeasure:false, 





storedMeasure:_noMeasure, 






measureMethods:function(object, objectName, methodNames){
if(__DEV__){
for(var key in methodNames) {
if(!methodNames.hasOwnProperty(key)){
continue;}

object[key] = ReactPerf.measure(
objectName, 
methodNames[key], 
object[key]);}}}, 













measure:function(objName, fnName, func){
if(__DEV__){
var measuredFunc=null;
var wrapper=function(){
if(ReactPerf.enableMeasure){
if(!measuredFunc){
measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);}

return measuredFunc.apply(this, arguments);}

return func.apply(this, arguments);};

wrapper.displayName = objName + '_' + fnName;
return wrapper;}

return func;}, 


injection:{



injectMeasure:function(measure){
ReactPerf.storedMeasure = measure;}}};












function _noMeasure(objName, fnName, func){
return func;}


module.exports = ReactPerf;});
__d('ReactReconciler',["ReactRef","ReactElementValidator"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactRef=require('ReactRef');
var ReactElementValidator=require('ReactElementValidator');





function attachRefs(){
ReactRef.attachRefs(this, this._currentElement);}


var ReactReconciler={











mountComponent:function(internalInstance, rootID, transaction, context){
var markup=internalInstance.mountComponent(rootID, transaction, context);
if(__DEV__){
ReactElementValidator.checkAndWarnForMutatedProps(
internalInstance._currentElement);}


transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
return markup;}, 








unmountComponent:function(internalInstance){
ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
internalInstance.unmountComponent();}, 











receiveComponent:function(
internalInstance, nextElement, transaction, context)
{
var prevElement=internalInstance._currentElement;

if(nextElement === prevElement && nextElement._owner != null){







return;}


if(__DEV__){
ReactElementValidator.checkAndWarnForMutatedProps(nextElement);}


var refsChanged=ReactRef.shouldUpdateRefs(
prevElement, 
nextElement);


if(refsChanged){
ReactRef.detachRefs(internalInstance, prevElement);}


internalInstance.receiveComponent(nextElement, transaction, context);

if(refsChanged){
transaction.getReactMountReady().enqueue(attachRefs, internalInstance);}}, 










performUpdateIfNecessary:function(
internalInstance, 
transaction)
{
internalInstance.performUpdateIfNecessary(transaction);}};




module.exports = ReactReconciler;});
__d('ReactRef',["ReactOwner"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactOwner=require('ReactOwner');

var ReactRef={};

function attachRef(ref, component, owner){
if(typeof ref === 'function'){
ref(component.getPublicInstance());}else 
{

ReactOwner.addComponentAsRefTo(component, ref, owner);}}



function detachRef(ref, component, owner){
if(typeof ref === 'function'){
ref(null);}else 
{

ReactOwner.removeComponentAsRefFrom(component, ref, owner);}}



ReactRef.attachRefs = function(instance, element){
var ref=element.ref;
if(ref != null){
attachRef(ref, instance, element._owner);}};



ReactRef.shouldUpdateRefs = function(prevElement, nextElement){












return (
nextElement._owner !== prevElement._owner || 
nextElement.ref !== prevElement.ref);};



ReactRef.detachRefs = function(instance, element){
var ref=element.ref;
if(ref != null){
detachRef(ref, instance, element._owner);}};



module.exports = ReactRef;});
__d('ReactOwner',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');































var ReactOwner={






isValidOwner:function(object){
return !!(
object && 
typeof object.attachRef === 'function' && 
typeof object.detachRef === 'function');}, 












addComponentAsRefTo:function(component, ref, owner){
invariant(
ReactOwner.isValidOwner(owner), 
'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' + 
'usually means that you\'re trying to add a ref to a component that ' + 
'doesn\'t have an owner (that is, was not created inside of another ' + 
'component\'s `render` method). Try rendering this component inside of ' + 
'a new top-level component which will hold the ref.');

owner.attachRef(ref, component);}, 











removeComponentAsRefFrom:function(component, ref, owner){
invariant(
ReactOwner.isValidOwner(owner), 
'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' + 
'usually means that you\'re trying to remove a ref to a component that ' + 
'doesn\'t have an owner (that is, was not created inside of another ' + 
'component\'s `render` method). Try rendering this component inside of ' + 
'a new top-level component which will hold the ref.');



if(owner.getPublicInstance().refs[ref] === component.getPublicInstance()){
owner.detachRef(ref);}}};





module.exports = ReactOwner;});
__d('ReactElementValidator',["ReactElement","ReactFragment","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactCurrentOwner","ReactNativeComponent","getIteratorFn","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactNativeComponent=require('ReactNativeComponent');

var getIteratorFn=require('getIteratorFn');
var invariant=require('invariant');
var warning=require('warning');

function getDeclarationErrorAddendum(){
if(ReactCurrentOwner.current){
var name=ReactCurrentOwner.current.getName();
if(name){
return ' Check the render method of `' + name + '`.';}}


return '';}







var ownerHasKeyUseWarning={};

var loggedTypeFailures={};

var NUMERIC_PROPERTY_REGEX=/^\d+$/;







function getName(instance){
var publicInstance=instance && instance.getPublicInstance();
if(!publicInstance){
return undefined;}

var constructor=publicInstance.constructor;
if(!constructor){
return undefined;}

return constructor.displayName || constructor.name || undefined;}








function getCurrentOwnerDisplayName(){
var current=ReactCurrentOwner.current;
return (
current && getName(current) || undefined);}













function validateExplicitKey(element, parentType){
if(element._store.validated || element.key != null){
return;}

element._store.validated = true;

warnAndMonitorForKeyUse(
'Each child in an array or iterator should have a unique "key" prop.', 
element, 
parentType);}












function validatePropertyKey(name, element, parentType){
if(!NUMERIC_PROPERTY_REGEX.test(name)){
return;}

warnAndMonitorForKeyUse(
'Child objects should have non-numeric keys so ordering is preserved.', 
element, 
parentType);}











function warnAndMonitorForKeyUse(message, element, parentType){
var ownerName=getCurrentOwnerDisplayName();
var parentName=typeof parentType === 'string'?
parentType:parentType.displayName || parentType.name;

var useName=ownerName || parentName;
var memoizer=ownerHasKeyUseWarning[message] || (
ownerHasKeyUseWarning[message] = {});

if(memoizer.hasOwnProperty(useName)){
return;}

memoizer[useName] = true;

var parentOrOwnerAddendum=
ownerName?' Check the render method of ' + ownerName + '.':
parentName?' Check the React.render call using <' + parentName + '>.':
'';




var childOwnerAddendum='';
if(element && 
element._owner && 
element._owner !== ReactCurrentOwner.current){

var childOwnerName=getName(element._owner);

childOwnerAddendum = ' It was passed a child from ' + childOwnerName + '.';}


warning(
false, 
message + '%s%s See http://fb.me/react-warning-keys for more information.', 
parentOrOwnerAddendum, 
childOwnerAddendum);}












function validateChildKeys(node, parentType){
if(Array.isArray(node)){
for(var i=0; i < node.length; i++) {
var child=node[i];
if(ReactElement.isValidElement(child)){
validateExplicitKey(child, parentType);}}}else 


if(ReactElement.isValidElement(node)){

node._store.validated = true;}else 
if(node){
var iteratorFn=getIteratorFn(node);

if(iteratorFn){
if(iteratorFn !== node.entries){
var iterator=iteratorFn.call(node);
var step;
while(!(step = iterator.next()).done) {
if(ReactElement.isValidElement(step.value)){
validateExplicitKey(step.value, parentType);}}}}else 



if(typeof node === 'object'){
var fragment=ReactFragment.extractIfFragment(node);
for(var key in fragment) {
if(fragment.hasOwnProperty(key)){
validatePropertyKey(key, fragment[key], parentType);}}}}}















function checkPropTypes(componentName, propTypes, props, location){
for(var propName in propTypes) {
if(propTypes.hasOwnProperty(propName)){
var error;



try{


invariant(
typeof propTypes[propName] === 'function', 
'%s: %s type `%s` is invalid; it must be a function, usually from ' + 
'React.PropTypes.', 
componentName || 'React class', 
ReactPropTypeLocationNames[location], 
propName);

error = propTypes[propName](props, propName, componentName, location);}
catch(ex) {
error = ex;}

if(error instanceof Error && !(error.message in loggedTypeFailures)){


loggedTypeFailures[error.message] = true;

var addendum=getDeclarationErrorAddendum(this);
warning(false, 'Failed propType: %s%s', error.message, addendum);}}}}





var warnedPropsMutations={};







function warnForPropsMutation(propName, element){
var type=element.type;
var elementName=typeof type === 'string'?type:type.displayName;
var ownerName=element._owner?
element._owner.getPublicInstance().constructor.displayName:null;

var warningKey=propName + '|' + elementName + '|' + ownerName;
if(warnedPropsMutations.hasOwnProperty(warningKey)){
return;}

warnedPropsMutations[warningKey] = true;

var elementInfo='';
if(elementName){
elementInfo = ' <' + elementName + ' />';}

var ownerInfo='';
if(ownerName){
ownerInfo = ' The element was created by ' + ownerName + '.';}


warning(
false, 
'Don\'t set .props.%s of the React component%s. Instead, specify the ' + 
'correct value when initially creating the element or use ' + 
'React.cloneElement to make a new element with updated props.%s', 
propName, 
elementInfo, 
ownerInfo);}




function is(a, b){
if(a !== a){

return b !== b;}

if(a === 0 && b === 0){

return 1 / a === 1 / b;}

return a === b;}










function checkAndWarnForMutatedProps(element){
if(!element._store){


return;}


var originalProps=element._store.originalProps;
var props=element.props;

for(var propName in props) {
if(props.hasOwnProperty(propName)){
if(!originalProps.hasOwnProperty(propName) || 
!is(originalProps[propName], props[propName])){
warnForPropsMutation(propName, element);


originalProps[propName] = props[propName];}}}}











function validatePropTypes(element){
if(element.type == null){

return;}





var componentClass=ReactNativeComponent.getComponentClassForElement(
element);

var name=componentClass.displayName || componentClass.name;
if(componentClass.propTypes){
checkPropTypes(
name, 
componentClass.propTypes, 
element.props, 
ReactPropTypeLocations.prop);}


if(typeof componentClass.getDefaultProps === 'function'){
warning(
componentClass.getDefaultProps.isReactClassApproved, 
'getDefaultProps is only used on classic React.createClass ' + 
'definitions. Use a static property named `defaultProps` instead.');}}




var ReactElementValidator={

checkAndWarnForMutatedProps:checkAndWarnForMutatedProps, 

createElement:function(type, props, children){


warning(
type != null, 
'React.createElement: type should not be null or undefined. It should ' + 
'be a string (for DOM elements) or a ReactClass (for composite ' + 
'components).');


var element=ReactElement.createElement.apply(this, arguments);



if(element == null){
return element;}


for(var i=2; i < arguments.length; i++) {
validateChildKeys(arguments[i], type);}


validatePropTypes(element);

return element;}, 


createFactory:function(type){
var validatedFactory=ReactElementValidator.createElement.bind(
null, 
type);


validatedFactory.type = type;

if(__DEV__){
try{
Object.defineProperty(
validatedFactory, 
'type', 
{
enumerable:false, 
get:function(){
warning(
false, 
'Factory.type is deprecated. Access the class directly ' + 
'before passing it to createFactory.');

Object.defineProperty(this, 'type', {
value:type});

return type;}});}



catch(x) {}}





return validatedFactory;}, 


cloneElement:function(element, props, children){
var newElement=ReactElement.cloneElement.apply(this, arguments);
for(var i=2; i < arguments.length; i++) {
validateChildKeys(arguments[i], newElement.type);}

validatePropTypes(newElement);
return newElement;}};




module.exports = ReactElementValidator;});
__d('ReactPropTypeLocations',["keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var keyMirror=require('keyMirror');

var ReactPropTypeLocations=keyMirror({
prop:null, 
context:null, 
childContext:null});


module.exports = ReactPropTypeLocations;});
__d('keyMirror',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var invariant=require('invariant');



















var keyMirror=function(obj){
var ret={};
var key;
invariant(
obj instanceof Object && !Array.isArray(obj), 
'keyMirror(...): Argument must be an object.');

for(key in obj) {
if(!obj.hasOwnProperty(key)){
continue;}

ret[key] = key;}

return ret;};


module.exports = keyMirror;});
__d('ReactPropTypeLocationNames',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypeLocationNames={};

if(__DEV__){
ReactPropTypeLocationNames = {
prop:'prop', 
context:'context', 
childContext:'child context'};}



module.exports = ReactPropTypeLocationNames;});
__d('ReactNativeComponent',["Object.assign","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var assign=require('Object.assign');
var invariant=require('invariant');

var autoGenerateWrapperClass=null;
var genericComponentClass=null;

var tagToComponentClass={};
var textComponentClass=null;

var ReactNativeComponentInjection={


injectGenericComponentClass:function(componentClass){
genericComponentClass = componentClass;}, 



injectTextComponentClass:function(componentClass){
textComponentClass = componentClass;}, 



injectComponentClasses:function(componentClasses){
assign(tagToComponentClass, componentClasses);}, 



injectAutoWrapper:function(wrapperFactory){
autoGenerateWrapperClass = wrapperFactory;}};









function getComponentClassForElement(element){
if(typeof element.type === 'function'){
return element.type;}

var tag=element.type;
var componentClass=tagToComponentClass[tag];
if(componentClass == null){
tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);}

return componentClass;}








function createInternalComponent(element){
invariant(
genericComponentClass, 
'There is no registered component for the tag %s', 
element.type);

return new genericComponentClass(element.type, element.props);}






function createInstanceForText(text){
return new textComponentClass(text);}






function isTextComponent(component){
return component instanceof textComponentClass;}


var ReactNativeComponent={
getComponentClassForElement:getComponentClassForElement, 
createInternalComponent:createInternalComponent, 
createInstanceForText:createInstanceForText, 
isTextComponent:isTextComponent, 
injection:ReactNativeComponentInjection};


module.exports = ReactNativeComponent;});
__d('Transaction',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');






























































var Mixin={







reinitializeTransaction:function(){
this.transactionWrappers = this.getTransactionWrappers();
if(!this.wrapperInitData){
this.wrapperInitData = [];}else 
{
this.wrapperInitData.length = 0;}

this._isInTransaction = false;}, 


_isInTransaction:false, 





getTransactionWrappers:null, 

isInTransaction:function(){
return !!this._isInTransaction;}, 













perform:function(method, scope, a, b, c, d, e, f){
invariant(
!this.isInTransaction(), 
'Transaction.perform(...): Cannot initialize a transaction when there ' + 
'is already an outstanding transaction.');

var errorThrown;
var ret;
try{
this._isInTransaction = true;




errorThrown = true;
this.initializeAll(0);
ret = method.call(scope, a, b, c, d, e, f);
errorThrown = false;}finally 
{
try{
if(errorThrown){


try{
this.closeAll(0);}
catch(err) {}}else 

{


this.closeAll(0);}}finally 

{
this._isInTransaction = false;}}


return ret;}, 


initializeAll:function(startIndex){
var transactionWrappers=this.transactionWrappers;
for(var i=startIndex; i < transactionWrappers.length; i++) {
var wrapper=transactionWrappers[i];
try{




this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
this.wrapperInitData[i] = wrapper.initialize?
wrapper.initialize.call(this):
null;}finally 
{
if(this.wrapperInitData[i] === Transaction.OBSERVED_ERROR){



try{
this.initializeAll(i + 1);}
catch(err) {}}}}}, 












closeAll:function(startIndex){
invariant(
this.isInTransaction(), 
'Transaction.closeAll(): Cannot close transaction when none are open.');

var transactionWrappers=this.transactionWrappers;
for(var i=startIndex; i < transactionWrappers.length; i++) {
var wrapper=transactionWrappers[i];
var initData=this.wrapperInitData[i];
var errorThrown;
try{




errorThrown = true;
if(initData !== Transaction.OBSERVED_ERROR && wrapper.close){
wrapper.close.call(this, initData);}

errorThrown = false;}finally 
{
if(errorThrown){



try{
this.closeAll(i + 1);}
catch(e) {}}}}




this.wrapperInitData.length = 0;}};



var Transaction={

Mixin:Mixin, 




OBSERVED_ERROR:{}};



module.exports = Transaction;});
__d('ReactErrorUtils',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";













var ReactErrorUtils={









guard:function(func, name){
return func;}};



module.exports = ReactErrorUtils;});
__d('keyOf',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 




















keyOf=function(oneKeyObj){
var key;
for(key in oneKeyObj) {
if(!oneKeyObj.hasOwnProperty(key)){
continue;}

return key;}

return null;};



module.exports = keyOf;});
__d('ReactNativeDefaultInjection',["InitializeJavaScriptAppEngine","EventPluginHub","EventPluginUtils","IOSDefaultEventPluginOrder","IOSNativeBridgeEventPlugin","NodeHandle","ReactComponentEnvironment","ReactDefaultBatchingStrategy","ReactEmptyComponent","ReactInstanceHandles","ReactNativeComponentEnvironment","ReactNativeGlobalInteractionHandler","ReactNativeGlobalResponderHandler","ReactNativeMount","ReactNativeTextComponent","ReactNativeComponent","ReactUpdates","ResponderEventPlugin","UniversalWorkerNodeHandle","createReactNativeComponentClass","invariant","RCTEventEmitter","RCTLog","RCTJSTimers"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';















require('InitializeJavaScriptAppEngine');
var EventPluginHub=require('EventPluginHub');
var EventPluginUtils=require('EventPluginUtils');
var IOSDefaultEventPluginOrder=require('IOSDefaultEventPluginOrder');
var IOSNativeBridgeEventPlugin=require('IOSNativeBridgeEventPlugin');
var NodeHandle=require('NodeHandle');
var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactDefaultBatchingStrategy=require('ReactDefaultBatchingStrategy');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactNativeComponentEnvironment=require('ReactNativeComponentEnvironment');
var ReactNativeGlobalInteractionHandler=require('ReactNativeGlobalInteractionHandler');
var ReactNativeGlobalResponderHandler=require('ReactNativeGlobalResponderHandler');
var ReactNativeMount=require('ReactNativeMount');
var ReactNativeTextComponent=require('ReactNativeTextComponent');
var ReactNativeComponent=require('ReactNativeComponent');
var ReactUpdates=require('ReactUpdates');
var ResponderEventPlugin=require('ResponderEventPlugin');
var UniversalWorkerNodeHandle=require('UniversalWorkerNodeHandle');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var invariant=require('invariant');


require('RCTEventEmitter');
require('RCTLog');
require('RCTJSTimers');

function inject(){



EventPluginHub.injection.injectEventPluginOrder(IOSDefaultEventPluginOrder);
EventPluginHub.injection.injectInstanceHandle(ReactInstanceHandles);

ResponderEventPlugin.injection.injectGlobalResponderHandler(
ReactNativeGlobalResponderHandler);


ResponderEventPlugin.injection.injectGlobalInteractionHandler(
ReactNativeGlobalInteractionHandler);






EventPluginHub.injection.injectEventPluginsByName({
'ResponderEventPlugin':ResponderEventPlugin, 
'IOSNativeBridgeEventPlugin':IOSNativeBridgeEventPlugin});


ReactUpdates.injection.injectReconcileTransaction(
ReactNativeComponentEnvironment.ReactReconcileTransaction);


ReactUpdates.injection.injectBatchingStrategy(
ReactDefaultBatchingStrategy);


ReactComponentEnvironment.injection.injectEnvironment(
ReactNativeComponentEnvironment);



var RCTView=createReactNativeComponentClass({
validAttributes:{}, 
uiViewClassName:'RCTView'});

ReactEmptyComponent.injection.injectEmptyComponent(RCTView);

EventPluginUtils.injection.injectMount(ReactNativeMount);

ReactNativeComponent.injection.injectTextComponentClass(
ReactNativeTextComponent);

ReactNativeComponent.injection.injectAutoWrapper(function(tag){

var info='';
if(typeof tag === 'string' && /^[a-z]/.test(tag)){
info += ' Each component name should start with an uppercase letter.';}

invariant(false, 'Expected a component class, got %s.%s', tag, info);});


NodeHandle.injection.injectImplementation(UniversalWorkerNodeHandle);}


module.exports = {
inject:inject};});
__d('InitializeJavaScriptAppEngine',["RCTDeviceEventEmitter","ExceptionsManager","ErrorUtils","ExceptionsManager","Platform","JSTimers","NativeModules","Promise","XMLHttpRequest","fetch","Geolocation","WebSocket"],function(global, require, requireDynamic, requireLazy, module, exports) {  require(
























'RCTDeviceEventEmitter');

if(typeof GLOBAL === 'undefined'){
GLOBAL = this;}


if(typeof window === 'undefined'){
window = GLOBAL;}


function handleError(e, isFatal){
try{
require('ExceptionsManager').handleException(e, isFatal);}
catch(ee) {
console.log('Failed to print error: ', ee.message);}}



function setUpRedBoxErrorHandler(){
var ErrorUtils=require('ErrorUtils');
ErrorUtils.setGlobalHandler(handleError);}


function setUpRedBoxConsoleErrorHandler(){

var ExceptionsManager=require('ExceptionsManager');
var Platform=require('Platform');

if(__DEV__ && Platform.OS === 'ios'){
ExceptionsManager.installConsoleErrorReporter();}}










function setUpTimers(){
var JSTimers=require('JSTimers');
GLOBAL.setTimeout = JSTimers.setTimeout;
GLOBAL.setInterval = JSTimers.setInterval;
GLOBAL.setImmediate = JSTimers.setImmediate;
GLOBAL.clearTimeout = JSTimers.clearTimeout;
GLOBAL.clearInterval = JSTimers.clearInterval;
GLOBAL.clearImmediate = JSTimers.clearImmediate;
GLOBAL.cancelAnimationFrame = JSTimers.clearInterval;
GLOBAL.requestAnimationFrame = function(cb){

return JSTimers.requestAnimationFrame(cb);};}



function setUpAlert(){
var RCTAlertManager=require('NativeModules').AlertManager;
if(!GLOBAL.alert){
GLOBAL.alert = function(text){
var alertOpts={
title:'Alert', 
message:'' + text, 
buttons:[{'cancel':'Okay'}]};

RCTAlertManager.alertWithArgs(alertOpts, null);};}}




function setUpPromise(){


GLOBAL.Promise = require('Promise');}


function setUpXHR(){


GLOBAL.XMLHttpRequest = require('XMLHttpRequest');

var fetchPolyfill=require('fetch');
GLOBAL.fetch = fetchPolyfill.fetch;
GLOBAL.Headers = fetchPolyfill.Headers;
GLOBAL.Request = fetchPolyfill.Request;
GLOBAL.Response = fetchPolyfill.Response;}


function setUpGeolocation(){
GLOBAL.navigator = GLOBAL.navigator || {};
GLOBAL.navigator.geolocation = require('Geolocation');}


function setUpWebSockets(){
GLOBAL.WebSocket = require('WebSocket');}


function setupProfile(){
console.profile = console.profile || GLOBAL.consoleProfile || function(){};
console.profileEnd = console.profileEnd || GLOBAL.consoleProfileEnd || function(){};}


setUpRedBoxErrorHandler();
setUpTimers();
setUpAlert();
setUpPromise();
setUpXHR();
setUpRedBoxConsoleErrorHandler();
setUpGeolocation();
setUpWebSockets();
setupProfile();});
__d('RCTDeviceEventEmitter',["EventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventEmitter=require('EventEmitter');

var RCTDeviceEventEmitter=new EventEmitter();

module.exports = RCTDeviceEventEmitter;});
__d('EventEmitter',["EmitterSubscription","ErrorUtils","EventSubscriptionVendor","emptyFunction","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

















var EmitterSubscription=require('EmitterSubscription');
var ErrorUtils=require('ErrorUtils');
var EventSubscriptionVendor=require('EventSubscriptionVendor');
var emptyFunction=require('emptyFunction');
var invariant=require('invariant');var 














EventEmitter=(function(){



function EventEmitter(){_classCallCheck(this, EventEmitter);
this._subscriber = new EventSubscriptionVendor();}_createClass(EventEmitter, [{key:'addListener', value:
















function addListener(
eventType, listener, context){
return this._subscriber.addSubscription(
eventType, 
new EmitterSubscription(this._subscriber, listener, context));}}, {key:'once', value:












function once(eventType, listener, context){
var emitter=this;
return this.addListener(eventType, function(){
emitter.removeCurrentListener();
listener.apply(context, arguments);});}}, {key:'removeAllListeners', value:










function removeAllListeners(eventType){
this._subscriber.removeAllSubscriptions(eventType);}}, {key:'removeCurrentListener', value:























function removeCurrentListener(){
invariant(
!!this._currentSubscription, 
'Not in an emitting cycle; there is no current subscription');

this._subscriber.removeSubscription(this._currentSubscription);}}, {key:'listeners', value:









function listeners(eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
return subscriptions?
subscriptions.filter(emptyFunction.thatReturnsTrue).map(
function(subscription){
return subscription.listener;}):

[];}}, {key:'emit', value:
















function emit(eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
if(subscriptions){
var keys=Object.keys(subscriptions);
for(var ii=0; ii < keys.length; ii++) {
var key=keys[ii];
var subscription=subscriptions[key];


if(subscription){
this._currentSubscription = subscription;

ErrorUtils.applyWithGuard(
subscription.listener, 
subscription.context, 
Array.prototype.slice.call(arguments, 1), 
null, 
'EventEmitter:' + eventType);}}



this._currentSubscription = null;}}}]);return EventEmitter;})();




module.exports = EventEmitter;});
__d('EmitterSubscription',["EventSubscription"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _get=function get(object, property, receiver){var desc=Object.getOwnPropertyDescriptor(object, property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent, property, receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}


















var EventSubscription=require('EventSubscription');var 




EmitterSubscription=(function(_EventSubscription){









function EmitterSubscription(subscriber, listener, context){_classCallCheck(this, EmitterSubscription);
_get(Object.getPrototypeOf(EmitterSubscription.prototype), 'constructor', this).call(this, subscriber);
this.listener = listener;
this.context = context;}_inherits(EmitterSubscription, _EventSubscription);return EmitterSubscription;})(EventSubscription);



module.exports = EmitterSubscription;});
__d('EventSubscription',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 






















EventSubscription=(function(){





function EventSubscription(subscriber){_classCallCheck(this, EventSubscription);
this.subscriber = subscriber;}_createClass(EventSubscription, [{key:'remove', value:





function remove(){
this.subscriber.removeSubscription(this);}}]);return EventSubscription;})();



module.exports = EventSubscription;});
__d('ErrorUtils',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











GLOBAL=this;













module.exports = GLOBAL.ErrorUtils;});
__d('EventSubscriptionVendor',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}


















var invariant=require('invariant');var 





EventSubscriptionVendor=(function(){

function EventSubscriptionVendor(){_classCallCheck(this, EventSubscriptionVendor);
this._subscriptionsForType = {};
this._currentSubscription = null;}_createClass(EventSubscriptionVendor, [{key:'addSubscription', value:








function addSubscription(
eventType, subscription){
invariant(
subscription.subscriber === this, 
'The subscriber of the subscription is incorrectly set.');
if(!this._subscriptionsForType[eventType]){
this._subscriptionsForType[eventType] = [];}

var key=this._subscriptionsForType[eventType].length;
this._subscriptionsForType[eventType].push(subscription);
subscription.eventType = eventType;
subscription.key = key;
return subscription;}}, {key:'removeAllSubscriptions', value:








function removeAllSubscriptions(eventType){
if(eventType === undefined){
this._subscriptionsForType = {};}else 
{
delete this._subscriptionsForType[eventType];}}}, {key:'removeSubscription', value:









function removeSubscription(subscription){
var eventType=subscription.eventType;
var key=subscription.key;

var subscriptionsForType=this._subscriptionsForType[eventType];
if(subscriptionsForType){
delete subscriptionsForType[key];}}}, {key:'getSubscriptionsForType', value:















function getSubscriptionsForType(eventType){
return this._subscriptionsForType[eventType];}}]);return EventSubscriptionVendor;})();



module.exports = EventSubscriptionVendor;});
__d('ExceptionsManager',["NativeModules","loadSourceMap","parseErrorStack","stringifySafe"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTExceptionsManager=require('NativeModules').ExceptionsManager;

var loadSourceMap=require('loadSourceMap');
var parseErrorStack=require('parseErrorStack');
var stringifySafe=require('stringifySafe');

var sourceMapPromise;







function reportException(e, isFatal, stack){
if(RCTExceptionsManager){
if(!stack){
stack = parseErrorStack(e);}

if(isFatal){
RCTExceptionsManager.reportFatalException(e.message, stack);}else 
{
RCTExceptionsManager.reportSoftException(e.message, stack);}

if(__DEV__){
(sourceMapPromise = sourceMapPromise || loadSourceMap()).
then(function(map){
var prettyStack=parseErrorStack(e, map);
RCTExceptionsManager.updateExceptionMessage(e.message, prettyStack);}).

catch(function(error){


console.warn('Unable to load source map: ' + error.message);});}}}





function handleException(e, isFatal){
var stack=parseErrorStack(e);
var msg=
'Error: ' + e.message + 
'\n stack: \n' + stackToString(stack) + 
'\n URL: ' + e.sourceURL + 
'\n line: ' + e.line + 
'\n message: ' + e.message;
if(console.errorOriginal){
console.errorOriginal(msg);}else 
{
console.error(msg);}

reportException(e, isFatal, stack);}






function installConsoleErrorReporter(){
if(console.reportException){
return;}

console.reportException = reportException;
console.errorOriginal = console.error.bind(console);
console.error = function reactConsoleError(){
console.errorOriginal.apply(null, arguments);
if(!console.reportErrorsAsExceptions){
return;}

var str=Array.prototype.map.call(arguments, stringifySafe).join(', ');
var error=new Error('console.error: ' + str);
error.framesToPop = 1;
reportException(error, false);};

if(console.reportErrorsAsExceptions === undefined){
console.reportErrorsAsExceptions = true;}}



function stackToString(stack){
var maxLength=Math.max.apply(null, stack.map(function(frame){return frame.methodName.length;}));
return stack.map(function(frame){return stackFrameToString(frame, maxLength);}).join('\n');}


function stackFrameToString(stackFrame, maxLength){
var fileNameParts=stackFrame.file.split('/');
var fileName=fileNameParts[fileNameParts.length - 1];

if(fileName.length > 18){
fileName = fileName.substr(0, 17) + '…';}


var spaces=fillSpaces(maxLength - stackFrame.methodName.length);
return '  ' + stackFrame.methodName + spaces + '  ' + fileName + ':' + stackFrame.lineNumber;}


function fillSpaces(n){
return new Array(n + 1).join(' ');}


module.exports = {handleException:handleException, installConsoleErrorReporter:installConsoleErrorReporter};});
__d('NativeModules',["BatchedBridge","nativeModulePrefixNormalizer"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('BatchedBridge').RemoteModules;

var nativeModulePrefixNormalizer=require('nativeModulePrefixNormalizer');

nativeModulePrefixNormalizer(NativeModules);

module.exports = NativeModules;});
__d('BatchedBridge',["BatchedBridgeFactory","MessageQueue"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var BatchedBridgeFactory=require('BatchedBridgeFactory');
var MessageQueue=require('MessageQueue');










var remoteModulesConfig=__fbBatchedBridgeConfig.remoteModuleConfig;
var localModulesConfig=__fbBatchedBridgeConfig.localModulesConfig;


var BatchedBridge=BatchedBridgeFactory.create(
MessageQueue, 
remoteModulesConfig, 
localModulesConfig);


BatchedBridge._config = remoteModulesConfig;

module.exports = BatchedBridge;});
__d('BatchedBridgeFactory',["invariant","keyMirror","mapObject","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var invariant=require('invariant');
var keyMirror=require('keyMirror');
var mapObject=require('mapObject');
var warning=require('warning');

var slice=Array.prototype.slice;

var MethodTypes=keyMirror({
remote:null, 
local:null});





var BatchedBridgeFactory={
MethodTypes:MethodTypes, 







_createBridgedModule:function(messageQueue, moduleConfig, moduleName){
var remoteModule=mapObject(moduleConfig.methods, function(methodConfig, memberName){
return methodConfig.type === MethodTypes.local?null:function(){
var lastArg=arguments.length > 0?arguments[arguments.length - 1]:null;
var secondLastArg=arguments.length > 1?arguments[arguments.length - 2]:null;
var hasSuccCB=typeof lastArg === 'function';
var hasErrorCB=typeof secondLastArg === 'function';
hasErrorCB && invariant(
hasSuccCB, 
'Cannot have a non-function arg after a function arg.');

var numCBs=(hasSuccCB?1:0) + (hasErrorCB?1:0);
var args=slice.call(arguments, 0, arguments.length - numCBs);
var onSucc=hasSuccCB?lastArg:null;
var onFail=hasErrorCB?secondLastArg:null;
return messageQueue.call(moduleName, memberName, args, onFail, onSucc);};});


for(var constName in moduleConfig.constants) {
warning(!remoteModule[constName], 'saw constant and method named %s', constName);
remoteModule[constName] = moduleConfig.constants[constName];}

return remoteModule;}, 



create:function(MessageQueue, modulesConfig, localModulesConfig){
var messageQueue=new MessageQueue(modulesConfig, localModulesConfig);
return {
callFunction:messageQueue.callFunction.bind(messageQueue), 
callFunctionReturnFlushedQueue:
messageQueue.callFunctionReturnFlushedQueue.bind(messageQueue), 
invokeCallback:messageQueue.invokeCallback.bind(messageQueue), 
invokeCallbackAndReturnFlushedQueue:
messageQueue.invokeCallbackAndReturnFlushedQueue.bind(messageQueue), 
flushedQueue:messageQueue.flushedQueue.bind(messageQueue), 
RemoteModules:mapObject(modulesConfig, this._createBridgedModule.bind(this, messageQueue)), 
setLoggingEnabled:messageQueue.setLoggingEnabled.bind(messageQueue), 
getLoggedOutgoingItems:messageQueue.getLoggedOutgoingItems.bind(messageQueue), 
getLoggedIncomingItems:messageQueue.getLoggedIncomingItems.bind(messageQueue), 
replayPreviousLog:messageQueue.replayPreviousLog.bind(messageQueue), 
processBatch:messageQueue.processBatch.bind(messageQueue)};}};




module.exports = BatchedBridgeFactory;});
__d('mapObject',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var hasOwnProperty=Object.prototype.hasOwnProperty;























function mapObject(object, callback, context){
if(!object){
return null;}

var result={};
for(var name in object) {
if(hasOwnProperty.call(object, name)){
result[name] = callback.call(context, object[name], name, object);}}


return result;}


module.exports = mapObject;});
__d('MessageQueue',["ErrorUtils","ReactUpdates","invariant","warning","BridgeProfiling","JSTimersExecution"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ErrorUtils=require('ErrorUtils');
var ReactUpdates=require('ReactUpdates');

var invariant=require('invariant');
var warning=require('warning');

var BridgeProfiling=require('BridgeProfiling');
var JSTimersExecution=require('JSTimersExecution');

var INTERNAL_ERROR='Error in MessageQueue implementation';


var DEBUG_SPY_MODE=false;
















var requireFunc=require;







var jsCall=function(module, methodName, params){
return module[methodName].apply(module, params);};














var MessageQueue=function(
remoteModulesConfig, 
localModulesConfig, 
customRequire)
{
this._requireFunc = customRequire || requireFunc;
this._initBookeeping();
this._initNamingMap(remoteModulesConfig, localModulesConfig);};



var REQUEST_MODULE_IDS=0;
var REQUEST_METHOD_IDS=1;
var REQUEST_PARAMSS=2;

var RESPONSE_CBIDS=3;
var RESPONSE_RETURN_VALUES=4;

var applyWithErrorReporter=function(fun, context, args){
try{
return fun.apply(context, args);}
catch(e) {
ErrorUtils.reportFatalError(e);}};

















var guardReturn=function(operation, operationArguments, getReturnValue, context){
if(operation){
applyWithErrorReporter(operation, context, operationArguments);}

if(getReturnValue){
return applyWithErrorReporter(getReturnValue, context, null);}

return null;};
















var createBookkeeping=function(){
return {




GUID:1, 
errorCallbackIDForSuccessCallbackID:function(successID){
return successID + 1;}, 

successCallbackIDForErrorCallbackID:function(errorID){
return errorID - 1;}, 

allocateCallbackIDs:function(res){
res.successCallbackID = this.GUID++;
res.errorCallbackID = this.GUID++;}, 

isSuccessCallback:function(id){
return id % 2 === 1;}};};




var MessageQueueMixin={







_initNamingMap:function(
remoteModulesConfig, 
localModulesConfig)
{
this._remoteModuleNameToModuleID = {};
this._remoteModuleIDToModuleName = {};

this._remoteModuleNameToMethodNameToID = {};
this._remoteModuleNameToMethodIDToName = {};

this._localModuleNameToModuleID = {};
this._localModuleIDToModuleName = {};

this._localModuleNameToMethodNameToID = {};
this._localModuleNameToMethodIDToName = {};

function fillMappings(
modulesConfig, 
moduleNameToModuleID, 
moduleIDToModuleName, 
moduleNameToMethodNameToID, 
moduleNameToMethodIDToName)
{
for(var moduleName in modulesConfig) {
var moduleConfig=modulesConfig[moduleName];
var moduleID=moduleConfig.moduleID;
moduleNameToModuleID[moduleName] = moduleID;
moduleIDToModuleName[moduleID] = moduleName;

moduleNameToMethodNameToID[moduleName] = {};
moduleNameToMethodIDToName[moduleName] = {};
var methods=moduleConfig.methods;
for(var methodName in methods) {
var methodID=methods[methodName].methodID;
moduleNameToMethodNameToID[moduleName][methodName] = 
methodID;
moduleNameToMethodIDToName[moduleName][methodID] = 
methodName;}}}



fillMappings(
remoteModulesConfig, 
this._remoteModuleNameToModuleID, 
this._remoteModuleIDToModuleName, 
this._remoteModuleNameToMethodNameToID, 
this._remoteModuleNameToMethodIDToName);


fillMappings(
localModulesConfig, 
this._localModuleNameToModuleID, 
this._localModuleIDToModuleName, 
this._localModuleNameToMethodNameToID, 
this._localModuleNameToMethodIDToName);}, 




_initBookeeping:function(){
this._POOLED_CBIDS = {errorCallbackID:null, successCallbackID:null};
this._bookkeeping = createBookkeeping();






this._threadLocalCallbacksByID = [];
this._threadLocalScopesByID = [];















this._outgoingItems = [
[], 
[], 
[], 

[], 

[]];






this._outgoingItemsSwap = [[], [], [], [], []];}, 


invokeCallback:function(cbID, args){
return guardReturn(this._invokeCallback, [cbID, args], null, this);}, 


_invokeCallback:function(cbID, args){
try{
var cb=this._threadLocalCallbacksByID[cbID];
var scope=this._threadLocalScopesByID[cbID];
warning(
cb, 
'Cannot find callback with CBID %s. Native module may have invoked ' + 
'both the success callback and the error callback.', 
cbID);

if(DEBUG_SPY_MODE){
console.log('N->JS: Callback#' + cbID + '(' + JSON.stringify(args) + ')');}

BridgeProfiling.profile('Callback#' + cbID + '(' + JSON.stringify(args) + ')');
cb.apply(scope, args);
BridgeProfiling.profileEnd();}
catch(ie_requires_catch) {
throw ie_requires_catch;}finally 
{

this._freeResourcesForCallbackID(cbID);}}, 



invokeCallbackAndReturnFlushedQueue:function(cbID, args){
if(this._enableLogging){
this._loggedIncomingItems.push([new Date().getTime(), cbID, args]);}

return guardReturn(
this._invokeCallback, 
[cbID, args], 
this._flushedQueueUnguarded, 
this);}, 



callFunction:function(moduleID, methodID, params){
return guardReturn(this._callFunction, [moduleID, methodID, params], null, this);}, 


_callFunction:function(moduleID, methodID, params){
var moduleName=this._localModuleIDToModuleName[moduleID];

var methodName=this._localModuleNameToMethodIDToName[moduleName][methodID];
if(DEBUG_SPY_MODE){
console.log(
'N->JS: ' + moduleName + '.' + methodName + 
'(' + JSON.stringify(params) + ')');}

BridgeProfiling.profile(moduleName + '.' + methodName + '(' + JSON.stringify(params) + ')');
var ret=jsCall(this._requireFunc(moduleName), methodName, params);
BridgeProfiling.profileEnd();

return ret;}, 


callFunctionReturnFlushedQueue:function(moduleID, methodID, params){
if(this._enableLogging){
this._loggedIncomingItems.push([new Date().getTime(), moduleID, methodID, params]);}

return guardReturn(
this._callFunction, 
[moduleID, methodID, params], 
this._flushedQueueUnguarded, 
this);}, 



processBatch:function(batch){
var self=this;
BridgeProfiling.profile('MessageQueue.processBatch()');
var flushedQueue=guardReturn(function(){
ReactUpdates.batchedUpdates(function(){
batch.forEach(function(call){
invariant(
call.module === 'BatchedBridge', 
'All the calls should pass through the BatchedBridge module');

if(call.method === 'callFunctionReturnFlushedQueue'){
self._callFunction.apply(self, call.args);}else 
if(call.method === 'invokeCallbackAndReturnFlushedQueue'){
self._invokeCallback.apply(self, call.args);}else 
{
throw new Error(
'Unrecognized method called on BatchedBridge: ' + call.method);}});


BridgeProfiling.profile('React.batchedUpdates()');});

BridgeProfiling.profileEnd();}, 
null, this._flushedQueueUnguarded, this);
BridgeProfiling.profileEnd();
return flushedQueue;}, 


setLoggingEnabled:function(enabled){
this._enableLogging = enabled;
this._loggedIncomingItems = [];
this._loggedOutgoingItems = [[], [], [], [], []];}, 


getLoggedIncomingItems:function(){
return this._loggedIncomingItems;}, 


getLoggedOutgoingItems:function(){
return this._loggedOutgoingItems;}, 


replayPreviousLog:function(previousLog){
this._outgoingItems = previousLog;}, 







_swapAndReinitializeBuffer:function(){

var currentOutgoingItems=this._outgoingItems;
var nextOutgoingItems=this._outgoingItemsSwap;

nextOutgoingItems[REQUEST_MODULE_IDS].length = 0;
nextOutgoingItems[REQUEST_METHOD_IDS].length = 0;
nextOutgoingItems[REQUEST_PARAMSS].length = 0;


nextOutgoingItems[RESPONSE_CBIDS].length = 0;
nextOutgoingItems[RESPONSE_RETURN_VALUES].length = 0;

this._outgoingItemsSwap = currentOutgoingItems;
this._outgoingItems = nextOutgoingItems;}, 








_pushRequestToOutgoingItems:function(moduleID, methodName, params){
this._outgoingItems[REQUEST_MODULE_IDS].push(moduleID);
this._outgoingItems[REQUEST_METHOD_IDS].push(methodName);
this._outgoingItems[REQUEST_PARAMSS].push(params);

if(this._enableLogging){
this._loggedOutgoingItems[REQUEST_MODULE_IDS].push(moduleID);
this._loggedOutgoingItems[REQUEST_METHOD_IDS].push(methodName);
this._loggedOutgoingItems[REQUEST_PARAMSS].push(params);}}, 








_pushResponseToOutgoingItems:function(cbID, returnValue){
this._outgoingItems[RESPONSE_CBIDS].push(cbID);
this._outgoingItems[RESPONSE_RETURN_VALUES].push(returnValue);}, 


_freeResourcesForCallbackID:function(cbID){
var correspondingCBID=this._bookkeeping.isSuccessCallback(cbID)?
this._bookkeeping.errorCallbackIDForSuccessCallbackID(cbID):
this._bookkeeping.successCallbackIDForErrorCallbackID(cbID);
this._threadLocalCallbacksByID[cbID] = null;
this._threadLocalScopesByID[cbID] = null;
if(this._threadLocalCallbacksByID[correspondingCBID]){
this._threadLocalCallbacksByID[correspondingCBID] = null;
this._threadLocalScopesByID[correspondingCBID] = null;}}, 











_storeCallbacksInCurrentThread:function(onFail, onSucc, scope){
invariant(onFail || onSucc, INTERNAL_ERROR);
this._bookkeeping.allocateCallbackIDs(this._POOLED_CBIDS);
var succCBID=this._POOLED_CBIDS.successCallbackID;
var errorCBID=this._POOLED_CBIDS.errorCallbackID;
this._threadLocalCallbacksByID[errorCBID] = onFail;
this._threadLocalCallbacksByID[succCBID] = onSucc;
this._threadLocalScopesByID[errorCBID] = scope;
this._threadLocalScopesByID[succCBID] = scope;}, 




















flushedQueue:function(){
return guardReturn(null, null, this._flushedQueueUnguarded, this);}, 


_flushedQueueUnguarded:function(){
BridgeProfiling.profile('JSTimersExecution.callImmediates()');

JSTimersExecution.callImmediates();
BridgeProfiling.profileEnd();

var currentOutgoingItems=this._outgoingItems;
this._swapAndReinitializeBuffer();
var ret=currentOutgoingItems[REQUEST_MODULE_IDS].length || 
currentOutgoingItems[RESPONSE_RETURN_VALUES].length?currentOutgoingItems:null;

if(DEBUG_SPY_MODE && ret){
for(var i=0; i < currentOutgoingItems[0].length; i++) {
var moduleName=this._remoteModuleIDToModuleName[currentOutgoingItems[0][i]];
var methodName=
this._remoteModuleNameToMethodIDToName[moduleName][currentOutgoingItems[1][i]];
console.log(
'JS->N: ' + moduleName + '.' + methodName + 
'(' + JSON.stringify(currentOutgoingItems[2][i]) + ')');}}



return ret;}, 


call:function(moduleName, methodName, params, onFail, onSucc, scope){
invariant(
(!onFail || typeof onFail === 'function') && (
!onSucc || typeof onSucc === 'function'), 
'Callbacks must be functions');



if(onSucc){
this._storeCallbacksInCurrentThread(onFail, onSucc, scope, this._POOLED_CBIDS);
onFail && params.push(this._POOLED_CBIDS.errorCallbackID);
params.push(this._POOLED_CBIDS.successCallbackID);}

var moduleID=this._remoteModuleNameToModuleID[moduleName];
if(moduleID === undefined || moduleID === null){
throw new Error('Unrecognized module name:' + moduleName);}

var methodID=this._remoteModuleNameToMethodNameToID[moduleName][methodName];
if(methodID === undefined || moduleID === null){
throw new Error('Unrecognized method name:' + methodName);}

this._pushRequestToOutgoingItems(moduleID, methodID, params);}, 

__numPendingCallbacksOnlyUseMeInTestCases:function(){
var callbacks=this._threadLocalCallbacksByID;
var total=0;
for(var i=0; i < callbacks.length; i++) {
if(callbacks[i]){
total++;}}


return total;}};



Object.assign(MessageQueue.prototype, MessageQueueMixin);
module.exports = MessageQueue;});
__d('BridgeProfiling',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var GLOBAL=GLOBAL || this;

var BridgeProfiling={
profile:function(profileName, args){
if(GLOBAL.__BridgeProfilingIsProfiling){
if(args){
try{
args = JSON.stringify(args);}
catch(err) {
args = err.message;}}


console.profile(profileName, args);}}, 



profileEnd:function(){
if(GLOBAL.__BridgeProfilingIsProfiling){
console.profileEnd();}}};




module.exports = BridgeProfiling;});
__d('JSTimersExecution',["invariant","keyMirror","performanceNow","warning","JSTimers","JSTimers"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var invariant=require('invariant');
var keyMirror=require('keyMirror');
var performanceNow=require('performanceNow');
var warning=require('warning');






var JSTimersExecution={
GUID:1, 
Type:keyMirror({
setTimeout:null, 
setInterval:null, 
requestAnimationFrame:null, 
setImmediate:null}), 



callbacks:[], 
types:[], 
timerIDs:[], 
immediates:[], 






callTimer:function(timerID){
warning(timerID <= JSTimersExecution.GUID, 'Tried to call timer with ID ' + timerID + ' but no such timer exists');
var timerIndex=JSTimersExecution.timerIDs.indexOf(timerID);





if(timerIndex === -1){
return;}

var type=JSTimersExecution.types[timerIndex];
var callback=JSTimersExecution.callbacks[timerIndex];


if(type === JSTimersExecution.Type.setTimeout || 
type === JSTimersExecution.Type.setImmediate || 
type === JSTimersExecution.Type.requestAnimationFrame){
JSTimersExecution._clearIndex(timerIndex);}


try{
if(type === JSTimersExecution.Type.setTimeout || 
type === JSTimersExecution.Type.setInterval || 
type === JSTimersExecution.Type.setImmediate){
callback();}else 
if(type === JSTimersExecution.Type.requestAnimationFrame){
var currentTime=performanceNow();
callback(currentTime);}else 
{
console.error('Tried to call a callback with invalid type: ' + type);
return;}}

catch(e) {

JSTimersExecution.errors = JSTimersExecution.errors || [];
JSTimersExecution.errors.push(e);}}, 







callTimers:function(timerIDs){
invariant(timerIDs.length !== 0, 'Probably shouldn\'t call "callTimers" with no timerIDs');

JSTimersExecution.errors = null;
timerIDs.forEach(JSTimersExecution.callTimer);

var errors=JSTimersExecution.errors;
if(errors){
var errorCount=errors.length;
if(errorCount > 1){


for(var ii=1; ii < errorCount; ii++) {
require('JSTimers').setTimeout(
(function(error){throw error;}).bind(null, errors[ii]), 
0);}}



throw errors[0];}}, 







callImmediates:function(){
JSTimersExecution.errors = null;
while(JSTimersExecution.immediates.length !== 0) {
JSTimersExecution.callTimer(JSTimersExecution.immediates.shift());}

if(JSTimersExecution.errors){
JSTimersExecution.errors.forEach(function(error){return (
require('JSTimers').setTimeout(function(){throw error;}, 0));});}}, 




_clearIndex:function(i){
JSTimersExecution.timerIDs[i] = null;
JSTimersExecution.callbacks[i] = null;
JSTimersExecution.types[i] = null;}};



module.exports = JSTimersExecution;});
__d('performanceNow',["performance"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











performance=require('performance');






if(!performance || !performance.now){
performance = Date;}


var performanceNow=performance.now.bind(performance);

module.exports = performanceNow;});
__d('performance',["ExecutionEnvironment"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";













var ExecutionEnvironment=require("ExecutionEnvironment");

var performance;

if(ExecutionEnvironment.canUseDOM){
performance = 
window.performance || 
window.msPerformance || 
window.webkitPerformance;}


module.exports = performance || {};});
__d('ExecutionEnvironment',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var canUseDOM=!!(
typeof window !== 'undefined' && 
window.document && 
window.document.createElement);








var ExecutionEnvironment={

canUseDOM:canUseDOM, 

canUseWorkers:typeof Worker !== 'undefined', 

canUseEventListeners:
canUseDOM && !!(window.addEventListener || window.attachEvent), 

canUseViewport:canUseDOM && !!window.screen, 

isInWorker:!canUseDOM};



module.exports = ExecutionEnvironment;});
__d('JSTimers',["NativeModules","JSTimersExecution"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var RCTTiming=require('NativeModules').Timing;
var JSTimersExecution=require('JSTimersExecution');






var JSTimers={
Types:JSTimersExecution.Types, 





_getFreeIndex:function(){
var freeIndex=JSTimersExecution.timerIDs.indexOf(null);
if(freeIndex === -1){
freeIndex = JSTimersExecution.timerIDs.length;}

return freeIndex;}, 






setTimeout:function(func, duration){for(var _len=arguments.length, args=Array(_len > 2?_len - 2:0), _key=2; _key < _len; _key++) {args[_key - 2] = arguments[_key];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined, args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setTimeout;
RCTTiming.createTimer(newID, duration, Date.now(), false);
return newID;}, 






setInterval:function(func, duration){for(var _len2=arguments.length, args=Array(_len2 > 2?_len2 - 2:0), _key2=2; _key2 < _len2; _key2++) {args[_key2 - 2] = arguments[_key2];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined, args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setInterval;
RCTTiming.createTimer(newID, duration, Date.now(), true);
return newID;}, 






setImmediate:function(func){for(var _len3=arguments.length, args=Array(_len3 > 1?_len3 - 1:0), _key3=1; _key3 < _len3; _key3++) {args[_key3 - 1] = arguments[_key3];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined, args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setImmediate;
JSTimersExecution.immediates.push(newID);
return newID;}, 





requestAnimationFrame:function(func){
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = func;
JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.requestAnimationFrame;
RCTTiming.createTimer(newID, 1, Date.now(), false);
return newID;}, 


clearTimeout:function(timerID){
JSTimers._clearTimerID(timerID);}, 


clearInterval:function(timerID){
JSTimers._clearTimerID(timerID);}, 


clearImmediate:function(timerID){
JSTimers._clearTimerID(timerID);
JSTimersExecution.immediates.splice(
JSTimersExecution.immediates.indexOf(timerID), 
1);}, 



cancelAnimationFrame:function(timerID){
JSTimers._clearTimerID(timerID);}, 


_clearTimerID:function(timerID){


if(timerID == null){
return;}


var index=JSTimersExecution.timerIDs.indexOf(timerID);

if(index !== -1){
JSTimersExecution._clearIndex(index);
if(JSTimersExecution.types[index] !== JSTimersExecution.Type.setImmediate){
RCTTiming.deleteTimer(timerID);}}}};





module.exports = JSTimers;});
__d('nativeModulePrefixNormalizer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













function nativeModulePrefixNormalizer(
modules)
{
Object.keys(modules).forEach(function(moduleName){
var strippedName=moduleName.replace(/^(RCT|RK)/, '');
if(modules['RCT' + strippedName] && modules['RK' + strippedName]){
throw new Error(
'Module cannot be registered as both RCT and RK: ' + moduleName);}


if(strippedName !== moduleName){
modules[strippedName] = modules[moduleName];
delete modules[moduleName];}});}




module.exports = nativeModulePrefixNormalizer;});
__d('loadSourceMap',["Promise","NativeModules","SourceMap","react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var Promise=require('Promise');
var NativeModules=require('NativeModules');
var SourceMapConsumer=require('SourceMap').SourceMapConsumer;
var SourceMapURL=require('react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url');

var RCTSourceCode=NativeModules.SourceCode;
var RCTDataManager=NativeModules.DataManager;

function loadSourceMap(){
return fetchSourceMap().
then(function(map){return new SourceMapConsumer(map);});}


function fetchSourceMap(){
if(global.RAW_SOURCE_MAP){
return Promise.resolve(global.RAW_SOURCE_MAP);}


if(!RCTSourceCode){
return Promise.reject(new Error('RCTSourceCode module is not available'));}


if(!RCTDataManager){

return Promise.reject(new Error('RCTDataManager module is not available'));}


return new Promise(RCTSourceCode.getScriptText).
then(extractSourceMapURL).
then(function(url){
if(url === null){
return Promise.reject(new Error('No source map URL found. May be running from bundled file.'));}

return Promise.resolve(url);}).

then(fetch).
then(function(response){return response.text();});}


function extractSourceMapURL(_ref){var url=_ref.url;var text=_ref.text;var fullSourceMappingURL=_ref.fullSourceMappingURL;
if(fullSourceMappingURL){
return fullSourceMappingURL;}

var mapURL=SourceMapURL.getFrom(text);
if(!mapURL){
return null;}

var baseURL=url.match(/(.+:\/\/.*?)\//)[1];
return baseURL + mapURL;}


module.exports = loadSourceMap;});
__d('Promise',["setImmediate","promise/setimmediate/es6-extensions","promise/setimmediate/done"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';























global.setImmediate = require('setImmediate');
var Promise=require('promise/setimmediate/es6-extensions');
require('promise/setimmediate/done');




Promise.prototype.finally = function(onSettled){
return this.then(onSettled, onSettled);};



module.exports = Promise;});
__d('setImmediate',["ImmediateImplementation"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.
















exports = global.setImmediate || 
require('ImmediateImplementation').setImmediate;});
__d('ImmediateImplementation',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (







































function(global, undefined){
"use strict";

var nextHandle=1;
var tasksByHandle={};
var queueHead={};
var queueTail=queueHead;
var currentlyRunningATask=false;
var doc=global.document;
var setImmediate;

function addFromSetImmediateArguments(args){
var handler=args[0];
args = Array.prototype.slice.call(args, 1);
tasksByHandle[nextHandle] = function(){
handler.apply(undefined, args);};

queueTail = queueTail.next = {handle:nextHandle++};
return queueTail.handle;}


function flushQueue(){
var next, task;
while(!currentlyRunningATask && (next = queueHead.next)) {
queueHead = next;
if(task = tasksByHandle[next.handle]){
currentlyRunningATask = true;
try{
task();
currentlyRunningATask = false;}finally 
{
clearImmediate(next.handle);
if(currentlyRunningATask){
currentlyRunningATask = false;






if(queueHead.next){
setImmediate(flushQueue);}}}}}}







function clearImmediate(handle){
delete tasksByHandle[handle];}


function canUsePostMessage(){


if(global.postMessage && !global.importScripts){
var postMessageIsAsynchronous=true;

var onMessage=function(){
postMessageIsAsynchronous = false;
if(global.removeEventListener){
global.removeEventListener("message", onMessage, false);}else 
{
global.detachEvent("onmessage", onMessage);}};



if(global.addEventListener){
global.addEventListener("message", onMessage, false);}else 
if(global.attachEvent){
global.attachEvent("onmessage", onMessage);}else 
{
return false;}


global.postMessage("", "*");
return postMessageIsAsynchronous;}}



function installPostMessageImplementation(){


var messagePrefix="setImmediate$" + Math.random() + "$";
var onGlobalMessage=function(event){
if(event.source === global && 
typeof event.data === "string" && 
event.data.indexOf(messagePrefix) === 0){
flushQueue();}};



if(global.addEventListener){
global.addEventListener("message", onGlobalMessage, false);}else 
{
global.attachEvent("onmessage", onGlobalMessage);}


setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);
global.postMessage(messagePrefix + handle, "*");
return handle;};}



function installMessageChannelImplementation(){
var channel=new MessageChannel();
channel.port1.onmessage = flushQueue;
setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);
channel.port2.postMessage(handle);
return handle;};}



function installReadyStateChangeImplementation(){
var html=doc.documentElement;
setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);


var script=doc.createElement("script");
script.onreadystatechange = function(){
script.onreadystatechange = null;
html.removeChild(script);
script = null;
flushQueue();};

html.appendChild(script);
return handle;};}



function installSetTimeoutImplementation(){
setImmediate = function(){
setTimeout(flushQueue, 0);
return addFromSetImmediateArguments(arguments);};}



if(canUsePostMessage()){

installPostMessageImplementation();}else 

if(global.MessageChannel){

installMessageChannelImplementation();}else 

if(doc && "onreadystatechange" in doc.createElement("script")){

installReadyStateChangeImplementation();}else 

{

installSetTimeoutImplementation();}


exports.setImmediate = setImmediate;
exports.clearImmediate = clearImmediate;})(
Function("return this")());});
__d('promise/setimmediate/es6-extensions',["promise/setimmediate/core"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



var Promise=require('promise/setimmediate/core');


module.exports = Promise;



var TRUE=valuePromise(true);
var FALSE=valuePromise(false);
var NULL=valuePromise(null);
var UNDEFINED=valuePromise(undefined);
var ZERO=valuePromise(0);
var EMPTYSTRING=valuePromise('');

function valuePromise(value){
var p=new Promise(Promise._83);
p._32 = 1;
p._8 = value;
return p;}

Promise.resolve = function(value){
if(value instanceof Promise)return value;

if(value === null)return NULL;
if(value === undefined)return UNDEFINED;
if(value === true)return TRUE;
if(value === false)return FALSE;
if(value === 0)return ZERO;
if(value === '')return EMPTYSTRING;

if(typeof value === 'object' || typeof value === 'function'){
try{
var then=value.then;
if(typeof then === 'function'){
return new Promise(then.bind(value));}}

catch(ex) {
return new Promise(function(resolve, reject){
reject(ex);});}}



return valuePromise(value);};


Promise.all = function(arr){
var args=Array.prototype.slice.call(arr);

return new Promise(function(resolve, reject){
if(args.length === 0)return resolve([]);
var remaining=args.length;
function res(i, val){
if(val && (typeof val === 'object' || typeof val === 'function')){
if(val instanceof Promise && val.then === Promise.prototype.then){
while(val._32 === 3) {
val = val._8;}

if(val._32 === 1)return res(i, val._8);
if(val._32 === 2)reject(val._8);
val.then(function(val){
res(i, val);}, 
reject);
return;}else 
{
var then=val.then;
if(typeof then === 'function'){
var p=new Promise(then.bind(val));
p.then(function(val){
res(i, val);}, 
reject);
return;}}}



args[i] = val;
if(--remaining === 0){
resolve(args);}}


for(var i=0; i < args.length; i++) {
res(i, args[i]);}});};




Promise.reject = function(value){
return new Promise(function(resolve, reject){
reject(value);});};



Promise.race = function(values){
return new Promise(function(resolve, reject){
values.forEach(function(value){
Promise.resolve(value).then(resolve, reject);});});};






Promise.prototype['catch'] = function(onRejected){
return this.then(null, onRejected);};});
__d('promise/setimmediate/core',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



function noop(){}


















var LAST_ERROR=null;
var IS_ERROR={};
function getThen(obj){
try{
return obj.then;}
catch(ex) {
LAST_ERROR = ex;
return IS_ERROR;}}



function tryCallOne(fn, a){
try{
return fn(a);}
catch(ex) {
LAST_ERROR = ex;
return IS_ERROR;}}


function tryCallTwo(fn, a, b){
try{
fn(a, b);}
catch(ex) {
LAST_ERROR = ex;
return IS_ERROR;}}



module.exports = Promise;

function Promise(fn){
if(typeof this !== 'object'){
throw new TypeError('Promises must be constructed via new');}

if(typeof fn !== 'function'){
throw new TypeError('not a function');}

this._32 = 0;
this._8 = null;
this._89 = [];
if(fn === noop)return;
doResolve(fn, this);}

Promise._83 = noop;

Promise.prototype.then = function(onFulfilled, onRejected){
if(this.constructor !== Promise){
return safeThen(this, onFulfilled, onRejected);}

var res=new Promise(noop);
handle(this, new Handler(onFulfilled, onRejected, res));
return res;};


function safeThen(self, onFulfilled, onRejected){
return new self.constructor(function(resolve, reject){
var res=new Promise(noop);
res.then(resolve, reject);
handle(self, new Handler(onFulfilled, onRejected, res));});}

;
function handle(self, deferred){
while(self._32 === 3) {
self = self._8;}

if(self._32 === 0){
self._89.push(deferred);
return;}

setImmediate(function(){
var cb=self._32 === 1?deferred.onFulfilled:deferred.onRejected;
if(cb === null){
if(self._32 === 1){
resolve(deferred.promise, self._8);}else 
{
reject(deferred.promise, self._8);}

return;}

var ret=tryCallOne(cb, self._8);
if(ret === IS_ERROR){
reject(deferred.promise, LAST_ERROR);}else 
{
resolve(deferred.promise, ret);}});}



function resolve(self, newValue){

if(newValue === self){
return reject(
self, 
new TypeError('A promise cannot be resolved with itself.'));}


if(
newValue && (
typeof newValue === 'object' || typeof newValue === 'function'))
{
var then=getThen(newValue);
if(then === IS_ERROR){
return reject(self, LAST_ERROR);}

if(
then === self.then && 
newValue instanceof Promise)
{
self._32 = 3;
self._8 = newValue;
finale(self);
return;}else 
if(typeof then === 'function'){
doResolve(then.bind(newValue), self);
return;}}


self._32 = 1;
self._8 = newValue;
finale(self);}


function reject(self, newValue){
self._32 = 2;
self._8 = newValue;
finale(self);}

function finale(self){
for(var i=0; i < self._89.length; i++) {
handle(self, self._89[i]);}

self._89 = null;}


function Handler(onFulfilled, onRejected, promise){
this.onFulfilled = typeof onFulfilled === 'function'?onFulfilled:null;
this.onRejected = typeof onRejected === 'function'?onRejected:null;
this.promise = promise;}








function doResolve(fn, promise){
var done=false;
var res=tryCallTwo(fn, function(value){
if(done)return;
done = true;
resolve(promise, value);}, 
function(reason){
if(done)return;
done = true;
reject(promise, reason);});

if(!done && res === IS_ERROR){
done = true;
reject(promise, LAST_ERROR);}}});
__d('promise/setimmediate/done',["promise/setimmediate/core"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var Promise=require('promise/setimmediate/core');

module.exports = Promise;
Promise.prototype.done = function(onFulfilled, onRejected){
var self=arguments.length?this.then.apply(this, arguments):this;
self.then(null, function(err){
setTimeout(function(){
throw err;}, 
0);});};});
__d('SourceMap',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 





















scope={};
wrapper.call(scope);

module.exports = scope.sourceMap;

function wrapper(){














function define(moduleName, deps, payload){
if(typeof moduleName != "string"){
throw new TypeError("Expected string, got: " + moduleName);}


if(arguments.length == 2){
payload = deps;}


if(moduleName in define.modules){
throw new Error("Module already defined: " + moduleName);}

define.modules[moduleName] = payload;}
;




define.modules = {};










function Domain(){
this.modules = {};
this._currentModule = null;}


(function(){
















Domain.prototype.require = function(deps, callback){
if(Array.isArray(deps)){
var params=deps.map(function(dep){
return this.lookup(dep);}, 
this);
if(callback){
callback.apply(null, params);}

return undefined;}else 

{
return this.lookup(deps);}};



function normalize(path){
var bits=path.split("/");
var i=1;
while(i < bits.length) {
if(bits[i] === ".."){
bits.splice(i - 1, 1);}else 
if(bits[i] === "."){
bits.splice(i, 1);}else 
{
i++;}}


return bits.join("/");}


function join(a, b){
a = a.trim();
b = b.trim();
if(/^\//.test(b)){
return b;}else 
{
return a.replace(/\/*$/, "/") + b;}}



function dirname(path){
var bits=path.split("/");
bits.pop();
return bits.join("/");}








Domain.prototype.lookup = function(moduleName){
if(/^\./.test(moduleName)){
moduleName = normalize(join(dirname(this._currentModule), moduleName));}


if(moduleName in this.modules){
var module=this.modules[moduleName];
return module;}


if(!(moduleName in define.modules)){
throw new Error("Module not defined: " + moduleName);}


var module=define.modules[moduleName];

if(typeof module == "function"){
var exports={};
var previousModule=this._currentModule;
this._currentModule = moduleName;
module(this.require.bind(this), exports, {id:moduleName, uri:""});
this._currentModule = previousModule;
module = exports;}



this.modules[moduleName] = module;

return module;};})();




define.Domain = Domain;
define.globalDomain = new Domain();
var require=define.globalDomain.require.bind(define.globalDomain);






define("source-map/source-map-generator", ["require", "exports", "module", "source-map/base64-vlq", "source-map/util", "source-map/array-set"], function(require, exports, module){

var base64VLQ=require("./base64-vlq");
var util=require("./util");
var ArraySet=require("./array-set").ArraySet;









function SourceMapGenerator(aArgs){
this._file = util.getArg(aArgs, "file");
this._sourceRoot = util.getArg(aArgs, "sourceRoot", null);
this._sources = new ArraySet();
this._names = new ArraySet();
this._mappings = [];
this._sourcesContents = null;}


SourceMapGenerator.prototype._version = 3;






SourceMapGenerator.fromSourceMap = 
function SourceMapGenerator_fromSourceMap(aSourceMapConsumer){
var sourceRoot=aSourceMapConsumer.sourceRoot;
var generator=new SourceMapGenerator({
file:aSourceMapConsumer.file, 
sourceRoot:sourceRoot});

aSourceMapConsumer.eachMapping(function(mapping){
var newMapping={
generated:{
line:mapping.generatedLine, 
column:mapping.generatedColumn}};



if(mapping.source){
newMapping.source = mapping.source;
if(sourceRoot){
newMapping.source = util.relative(sourceRoot, newMapping.source);}


newMapping.original = {
line:mapping.originalLine, 
column:mapping.originalColumn};


if(mapping.name){
newMapping.name = mapping.name;}}



generator.addMapping(newMapping);});

aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
generator.setSourceContent(sourceFile, content);}});


return generator;};












SourceMapGenerator.prototype.addMapping = 
function SourceMapGenerator_addMapping(aArgs){
var generated=util.getArg(aArgs, "generated");
var original=util.getArg(aArgs, "original", null);
var source=util.getArg(aArgs, "source", null);
var name=util.getArg(aArgs, "name", null);

this._validateMapping(generated, original, source, name);

if(source && !this._sources.has(source)){
this._sources.add(source);}


if(name && !this._names.has(name)){
this._names.add(name);}


this._mappings.push({
generatedLine:generated.line, 
generatedColumn:generated.column, 
originalLine:original != null && original.line, 
originalColumn:original != null && original.column, 
source:source, 
name:name});};






SourceMapGenerator.prototype.setSourceContent = 
function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent){
var source=aSourceFile;
if(this._sourceRoot){
source = util.relative(this._sourceRoot, source);}


if(aSourceContent !== null){


if(!this._sourcesContents){
this._sourcesContents = {};}

this._sourcesContents[util.toSetString(source)] = aSourceContent;}else 
{


delete this._sourcesContents[util.toSetString(source)];
if(Object.keys(this._sourcesContents).length === 0){
this._sourcesContents = null;}}};














SourceMapGenerator.prototype.applySourceMap = 
function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile){

if(!aSourceFile){
aSourceFile = aSourceMapConsumer.file;}

var sourceRoot=this._sourceRoot;

if(sourceRoot){
aSourceFile = util.relative(sourceRoot, aSourceFile);}



var newSources=new ArraySet();
var newNames=new ArraySet();


this._mappings.forEach(function(mapping){
if(mapping.source === aSourceFile && mapping.originalLine){

var original=aSourceMapConsumer.originalPositionFor({
line:mapping.originalLine, 
column:mapping.originalColumn});

if(original.source !== null){

if(sourceRoot){
mapping.source = util.relative(sourceRoot, original.source);}else 
{
mapping.source = original.source;}

mapping.originalLine = original.line;
mapping.originalColumn = original.column;
if(original.name !== null && mapping.name !== null){


mapping.name = original.name;}}}




var source=mapping.source;
if(source && !newSources.has(source)){
newSources.add(source);}


var name=mapping.name;
if(name && !newNames.has(name)){
newNames.add(name);}}, 


this);
this._sources = newSources;
this._names = newNames;


aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
if(sourceRoot){
sourceFile = util.relative(sourceRoot, sourceFile);}

this.setSourceContent(sourceFile, content);}}, 

this);};













SourceMapGenerator.prototype._validateMapping = 
function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource, 
aName){
if(aGenerated && "line" in aGenerated && "column" in aGenerated && 
aGenerated.line > 0 && aGenerated.column >= 0 && 
!aOriginal && !aSource && !aName){

return;}else 

if(aGenerated && "line" in aGenerated && "column" in aGenerated && 
aOriginal && "line" in aOriginal && "column" in aOriginal && 
aGenerated.line > 0 && aGenerated.column >= 0 && 
aOriginal.line > 0 && aOriginal.column >= 0 && 
aSource){

return;}else 

{
throw new Error("Invalid mapping: " + JSON.stringify({
generated:aGenerated, 
source:aSource, 
orginal:aOriginal, 
name:aName}));}};








SourceMapGenerator.prototype._serializeMappings = 
function SourceMapGenerator_serializeMappings(){
var previousGeneratedColumn=0;
var previousGeneratedLine=1;
var previousOriginalColumn=0;
var previousOriginalLine=0;
var previousName=0;
var previousSource=0;
var result="";
var mapping;






this._mappings.sort(util.compareByGeneratedPositions);

for(var i=0, len=this._mappings.length; i < len; i++) {
mapping = this._mappings[i];

if(mapping.generatedLine !== previousGeneratedLine){
previousGeneratedColumn = 0;
while(mapping.generatedLine !== previousGeneratedLine) {
result += ";";
previousGeneratedLine++;}}else 


{
if(i > 0){
if(!util.compareByGeneratedPositions(mapping, this._mappings[i - 1])){
continue;}

result += ",";}}



result += base64VLQ.encode(mapping.generatedColumn - 
previousGeneratedColumn);
previousGeneratedColumn = mapping.generatedColumn;

if(mapping.source){
result += base64VLQ.encode(this._sources.indexOf(mapping.source) - 
previousSource);
previousSource = this._sources.indexOf(mapping.source);


result += base64VLQ.encode(mapping.originalLine - 1 - 
previousOriginalLine);
previousOriginalLine = mapping.originalLine - 1;

result += base64VLQ.encode(mapping.originalColumn - 
previousOriginalColumn);
previousOriginalColumn = mapping.originalColumn;

if(mapping.name){
result += base64VLQ.encode(this._names.indexOf(mapping.name) - 
previousName);
previousName = this._names.indexOf(mapping.name);}}}




return result;};


SourceMapGenerator.prototype._generateSourcesContent = 
function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot){
return aSources.map(function(source){
if(!this._sourcesContents){
return null;}

if(aSourceRoot){
source = util.relative(aSourceRoot, source);}

var key=util.toSetString(source);
return Object.prototype.hasOwnProperty.call(this._sourcesContents, 
key)?
this._sourcesContents[key]:
null;}, 
this);};





SourceMapGenerator.prototype.toJSON = 
function SourceMapGenerator_toJSON(){
var map={
version:this._version, 
file:this._file, 
sources:this._sources.toArray(), 
names:this._names.toArray(), 
mappings:this._serializeMappings()};

if(this._sourceRoot){
map.sourceRoot = this._sourceRoot;}

if(this._sourcesContents){
map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);}


return map;};





SourceMapGenerator.prototype.toString = 
function SourceMapGenerator_toString(){
return JSON.stringify(this);};


exports.SourceMapGenerator = SourceMapGenerator;});






































define("source-map/base64-vlq", ["require", "exports", "module", "source-map/base64"], function(require, exports, module){

var base64=require("./base64");













var VLQ_BASE_SHIFT=5;


var VLQ_BASE=1 << VLQ_BASE_SHIFT;


var VLQ_BASE_MASK=VLQ_BASE - 1;


var VLQ_CONTINUATION_BIT=VLQ_BASE;







function toVLQSigned(aValue){
return aValue < 0?
(-aValue << 1) + 1:
(aValue << 1) + 0;}








function fromVLQSigned(aValue){
var isNegative=(aValue & 1) === 1;
var shifted=aValue >> 1;
return isNegative?
-shifted:
shifted;}





exports.encode = function base64VLQ_encode(aValue){
var encoded="";
var digit;

var vlq=toVLQSigned(aValue);

do {
digit = vlq & VLQ_BASE_MASK;
vlq >>>= VLQ_BASE_SHIFT;
if(vlq > 0){


digit |= VLQ_CONTINUATION_BIT;}

encoded += base64.encode(digit);}while(
vlq > 0);

return encoded;};






exports.decode = function base64VLQ_decode(aStr){
var i=0;
var strLen=aStr.length;
var result=0;
var shift=0;
var continuation, digit;

do {
if(i >= strLen){
throw new Error("Expected more digits in base 64 VLQ value.");}

digit = base64.decode(aStr.charAt(i++));
continuation = !!(digit & VLQ_CONTINUATION_BIT);
digit &= VLQ_BASE_MASK;
result = result + (digit << shift);
shift += VLQ_BASE_SHIFT;}while(
continuation);

return {
value:fromVLQSigned(result), 
rest:aStr.slice(i)};};});










define("source-map/base64", ["require", "exports", "module"], function(require, exports, module){

var charToIntMap={};
var intToCharMap={};

"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".
split("").
forEach(function(ch, index){
charToIntMap[ch] = index;
intToCharMap[index] = ch;});





exports.encode = function base64_encode(aNumber){
if(aNumber in intToCharMap){
return intToCharMap[aNumber];}

throw new TypeError("Must be between 0 and 63: " + aNumber);};





exports.decode = function base64_decode(aChar){
if(aChar in charToIntMap){
return charToIntMap[aChar];}

throw new TypeError("Not a valid base 64 digit: " + aChar);};});









define("source-map/util", ["require", "exports", "module"], function(require, exports, module){











function getArg(aArgs, aName, aDefaultValue){
if(aName in aArgs){
return aArgs[aName];}else 
if(arguments.length === 3){
return aDefaultValue;}else 
{
throw new Error("\"" + aName + "\" is a required argument.");}}


exports.getArg = getArg;

var urlRegexp=/([\w+\-.]+):\/\/((\w+:\w+)@)?([\w.]+)?(:(\d+))?(\S+)?/;
var dataUrlRegexp=/^data:.+\,.+/;

function urlParse(aUrl){
var match=aUrl.match(urlRegexp);
if(!match){
return null;}

return {
scheme:match[1], 
auth:match[3], 
host:match[4], 
port:match[6], 
path:match[7]};}


exports.urlParse = urlParse;

function urlGenerate(aParsedUrl){
var url=aParsedUrl.scheme + "://";
if(aParsedUrl.auth){
url += aParsedUrl.auth + "@";}

if(aParsedUrl.host){
url += aParsedUrl.host;}

if(aParsedUrl.port){
url += ":" + aParsedUrl.port;}

if(aParsedUrl.path){
url += aParsedUrl.path;}

return url;}

exports.urlGenerate = urlGenerate;

function join(aRoot, aPath){
var url;

if(aPath.match(urlRegexp) || aPath.match(dataUrlRegexp)){
return aPath;}


if(aPath.charAt(0) === "/" && (url = urlParse(aRoot))){
url.path = aPath;
return urlGenerate(url);}


return aRoot.replace(/\/$/, "") + "/" + aPath;}

exports.join = join;










function toSetString(aStr){
return "$" + aStr;}

exports.toSetString = toSetString;

function fromSetString(aStr){
return aStr.substr(1);}

exports.fromSetString = fromSetString;

function relative(aRoot, aPath){
aRoot = aRoot.replace(/\/$/, "");

var url=urlParse(aRoot);
if(aPath.charAt(0) == "/" && url && url.path == "/"){
return aPath.slice(1);}


return aPath.indexOf(aRoot + "/") === 0?
aPath.substr(aRoot.length + 1):
aPath;}

exports.relative = relative;

function strcmp(aStr1, aStr2){
var s1=aStr1 || "";
var s2=aStr2 || "";
return (s1 > s2) - (s1 < s2);}










function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal){
var cmp;

cmp = strcmp(mappingA.source, mappingB.source);
if(cmp){
return cmp;}


cmp = mappingA.originalLine - mappingB.originalLine;
if(cmp){
return cmp;}


cmp = mappingA.originalColumn - mappingB.originalColumn;
if(cmp || onlyCompareOriginal){
return cmp;}


cmp = strcmp(mappingA.name, mappingB.name);
if(cmp){
return cmp;}


cmp = mappingA.generatedLine - mappingB.generatedLine;
if(cmp){
return cmp;}


return mappingA.generatedColumn - mappingB.generatedColumn;}
;
exports.compareByOriginalPositions = compareByOriginalPositions;










function compareByGeneratedPositions(mappingA, mappingB, onlyCompareGenerated){
var cmp;

cmp = mappingA.generatedLine - mappingB.generatedLine;
if(cmp){
return cmp;}


cmp = mappingA.generatedColumn - mappingB.generatedColumn;
if(cmp || onlyCompareGenerated){
return cmp;}


cmp = strcmp(mappingA.source, mappingB.source);
if(cmp){
return cmp;}


cmp = mappingA.originalLine - mappingB.originalLine;
if(cmp){
return cmp;}


cmp = mappingA.originalColumn - mappingB.originalColumn;
if(cmp){
return cmp;}


return strcmp(mappingA.name, mappingB.name);}
;
exports.compareByGeneratedPositions = compareByGeneratedPositions;});








define("source-map/array-set", ["require", "exports", "module", "source-map/util"], function(require, exports, module){

var util=require("./util");







function ArraySet(){
this._array = [];
this._set = {};}





ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates){
var set=new ArraySet();
for(var i=0, len=aArray.length; i < len; i++) {
set.add(aArray[i], aAllowDuplicates);}

return set;};







ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates){
var isDuplicate=this.has(aStr);
var idx=this._array.length;
if(!isDuplicate || aAllowDuplicates){
this._array.push(aStr);}

if(!isDuplicate){
this._set[util.toSetString(aStr)] = idx;}};








ArraySet.prototype.has = function ArraySet_has(aStr){
return Object.prototype.hasOwnProperty.call(this._set, 
util.toSetString(aStr));};







ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr){
if(this.has(aStr)){
return this._set[util.toSetString(aStr)];}

throw new Error("\"" + aStr + "\" is not in the set.");};







ArraySet.prototype.at = function ArraySet_at(aIdx){
if(aIdx >= 0 && aIdx < this._array.length){
return this._array[aIdx];}

throw new Error("No element indexed by " + aIdx);};







ArraySet.prototype.toArray = function ArraySet_toArray(){
return this._array.slice();};


exports.ArraySet = ArraySet;});








define("source-map/source-map-consumer", ["require", "exports", "module", "source-map/util", "source-map/binary-search", "source-map/array-set", "source-map/base64-vlq"], function(require, exports, module){

var util=require("./util");
var binarySearch=require("./binary-search");
var ArraySet=require("./array-set").ArraySet;
var base64VLQ=require("./base64-vlq");































function SourceMapConsumer(aSourceMap){
var sourceMap=aSourceMap;
if(typeof aSourceMap === "string"){
sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ""));}


var version=util.getArg(sourceMap, "version");
var sources=util.getArg(sourceMap, "sources");


var names=util.getArg(sourceMap, "names", []);
var sourceRoot=util.getArg(sourceMap, "sourceRoot", null);
var sourcesContent=util.getArg(sourceMap, "sourcesContent", null);
var mappings=util.getArg(sourceMap, "mappings");
var file=util.getArg(sourceMap, "file", null);



if(version != this._version){
throw new Error("Unsupported version: " + version);}






this._names = ArraySet.fromArray(names, true);
this._sources = ArraySet.fromArray(sources, true);

this.sourceRoot = sourceRoot;
this.sourcesContent = sourcesContent;
this._mappings = mappings;
this.file = file;}









SourceMapConsumer.fromSourceMap = 
function SourceMapConsumer_fromSourceMap(aSourceMap){
var smc=Object.create(SourceMapConsumer.prototype);

smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);
smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);
smc.sourceRoot = aSourceMap._sourceRoot;
smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(), 
smc.sourceRoot);
smc.file = aSourceMap._file;

smc.__generatedMappings = aSourceMap._mappings.slice().
sort(util.compareByGeneratedPositions);
smc.__originalMappings = aSourceMap._mappings.slice().
sort(util.compareByOriginalPositions);

return smc;};





SourceMapConsumer.prototype._version = 3;




Object.defineProperty(SourceMapConsumer.prototype, "sources", {
get:function(){
return this._sources.toArray().map(function(s){
return this.sourceRoot?util.join(this.sourceRoot, s):s;}, 
this);}});

































SourceMapConsumer.prototype.__generatedMappings = null;
Object.defineProperty(SourceMapConsumer.prototype, "_generatedMappings", {
get:function(){
if(!this.__generatedMappings){
this.__generatedMappings = [];
this.__originalMappings = [];
this._parseMappings(this._mappings, this.sourceRoot);}


return this.__generatedMappings;}});



SourceMapConsumer.prototype.__originalMappings = null;
Object.defineProperty(SourceMapConsumer.prototype, "_originalMappings", {
get:function(){
if(!this.__originalMappings){
this.__generatedMappings = [];
this.__originalMappings = [];
this._parseMappings(this._mappings, this.sourceRoot);}


return this.__originalMappings;}});








SourceMapConsumer.prototype._parseMappings = 
function SourceMapConsumer_parseMappings(aStr, aSourceRoot){
var generatedLine=1;
var previousGeneratedColumn=0;
var previousOriginalLine=0;
var previousOriginalColumn=0;
var previousSource=0;
var previousName=0;
var mappingSeparator=/^[,;]/;
var str=aStr;
var mapping;
var temp;

while(str.length > 0) {
if(str.charAt(0) === ";"){
generatedLine++;
str = str.slice(1);
previousGeneratedColumn = 0;}else 

if(str.charAt(0) === ","){
str = str.slice(1);}else 

{
mapping = {};
mapping.generatedLine = generatedLine;


temp = base64VLQ.decode(str);
mapping.generatedColumn = previousGeneratedColumn + temp.value;
previousGeneratedColumn = mapping.generatedColumn;
str = temp.rest;

if(str.length > 0 && !mappingSeparator.test(str.charAt(0))){

temp = base64VLQ.decode(str);
mapping.source = this._sources.at(previousSource + temp.value);
previousSource += temp.value;
str = temp.rest;
if(str.length === 0 || mappingSeparator.test(str.charAt(0))){
throw new Error("Found a source, but no line and column");}



temp = base64VLQ.decode(str);
mapping.originalLine = previousOriginalLine + temp.value;
previousOriginalLine = mapping.originalLine;

mapping.originalLine += 1;
str = temp.rest;
if(str.length === 0 || mappingSeparator.test(str.charAt(0))){
throw new Error("Found a source and line, but no column");}



temp = base64VLQ.decode(str);
mapping.originalColumn = previousOriginalColumn + temp.value;
previousOriginalColumn = mapping.originalColumn;
str = temp.rest;

if(str.length > 0 && !mappingSeparator.test(str.charAt(0))){

temp = base64VLQ.decode(str);
mapping.name = this._names.at(previousName + temp.value);
previousName += temp.value;
str = temp.rest;}}



this.__generatedMappings.push(mapping);
if(typeof mapping.originalLine === "number"){
this.__originalMappings.push(mapping);}}}




this.__originalMappings.sort(util.compareByOriginalPositions);};






SourceMapConsumer.prototype._findMapping = 
function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName, 
aColumnName, aComparator){





if(aNeedle[aLineName] <= 0){
throw new TypeError("Line must be greater than or equal to 1, got " + 
aNeedle[aLineName]);}

if(aNeedle[aColumnName] < 0){
throw new TypeError("Column must be greater than or equal to 0, got " + 
aNeedle[aColumnName]);}


return binarySearch.search(aNeedle, aMappings, aComparator);};

















SourceMapConsumer.prototype.originalPositionFor = 
function SourceMapConsumer_originalPositionFor(aArgs){
var needle={
generatedLine:util.getArg(aArgs, "line"), 
generatedColumn:util.getArg(aArgs, "column")};


var mapping=this._findMapping(needle, 
this._generatedMappings, 
"generatedLine", 
"generatedColumn", 
util.compareByGeneratedPositions);

if(mapping){
var source=util.getArg(mapping, "source", null);
if(source && this.sourceRoot){
source = util.join(this.sourceRoot, source);}

return {
source:source, 
line:util.getArg(mapping, "originalLine", null), 
column:util.getArg(mapping, "originalColumn", null), 
name:util.getArg(mapping, "name", null)};}



return {
source:null, 
line:null, 
column:null, 
name:null};};








SourceMapConsumer.prototype.sourceContentFor = 
function SourceMapConsumer_sourceContentFor(aSource){
if(!this.sourcesContent){
return null;}


if(this.sourceRoot){
aSource = util.relative(this.sourceRoot, aSource);}


if(this._sources.has(aSource)){
return this.sourcesContent[this._sources.indexOf(aSource)];}


var url;
if(this.sourceRoot && (
url = util.urlParse(this.sourceRoot))){




var fileUriAbsPath=aSource.replace(/^file:\/\//, "");
if(url.scheme == "file" && 
this._sources.has(fileUriAbsPath)){
return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];}


if((!url.path || url.path == "/") && 
this._sources.has("/" + aSource)){
return this.sourcesContent[this._sources.indexOf("/" + aSource)];}}



throw new Error("\"" + aSource + "\" is not in the SourceMap.");};
















SourceMapConsumer.prototype.generatedPositionFor = 
function SourceMapConsumer_generatedPositionFor(aArgs){
var needle={
source:util.getArg(aArgs, "source"), 
originalLine:util.getArg(aArgs, "line"), 
originalColumn:util.getArg(aArgs, "column")};


if(this.sourceRoot){
needle.source = util.relative(this.sourceRoot, needle.source);}


var mapping=this._findMapping(needle, 
this._originalMappings, 
"originalLine", 
"originalColumn", 
util.compareByOriginalPositions);

if(mapping){
return {
line:util.getArg(mapping, "generatedLine", null), 
column:util.getArg(mapping, "generatedColumn", null)};}



return {
line:null, 
column:null};};



SourceMapConsumer.GENERATED_ORDER = 1;
SourceMapConsumer.ORIGINAL_ORDER = 2;

















SourceMapConsumer.prototype.eachMapping = 
function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder){
var context=aContext || null;
var order=aOrder || SourceMapConsumer.GENERATED_ORDER;

var mappings;
switch(order){
case SourceMapConsumer.GENERATED_ORDER:
mappings = this._generatedMappings;
break;
case SourceMapConsumer.ORIGINAL_ORDER:
mappings = this._originalMappings;
break;
default:
throw new Error("Unknown order of iteration.");}


var sourceRoot=this.sourceRoot;
mappings.map(function(mapping){
var source=mapping.source;
if(source && sourceRoot){
source = util.join(sourceRoot, source);}

return {
source:source, 
generatedLine:mapping.generatedLine, 
generatedColumn:mapping.generatedColumn, 
originalLine:mapping.originalLine, 
originalColumn:mapping.originalColumn, 
name:mapping.name};}).

forEach(aCallback, context);};


exports.SourceMapConsumer = SourceMapConsumer;});








define("source-map/binary-search", ["require", "exports", "module"], function(require, exports, module){










function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare){










var mid=Math.floor((aHigh - aLow) / 2) + aLow;
var cmp=aCompare(aNeedle, aHaystack[mid], true);
if(cmp === 0){

return aHaystack[mid];}else 

if(cmp > 0){

if(aHigh - mid > 1){

return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare);}



return aHaystack[mid];}else 

{

if(mid - aLow > 1){

return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare);}



return aLow < 0?
null:
aHaystack[aLow];}}
















exports.search = function search(aNeedle, aHaystack, aCompare){
return aHaystack.length > 0?
recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack, aCompare):
null;};});









define("source-map/source-node", ["require", "exports", "module", "source-map/source-map-generator", "source-map/util"], function(require, exports, module){

var SourceMapGenerator=require("./source-map-generator").SourceMapGenerator;
var util=require("./util");













function SourceNode(aLine, aColumn, aSource, aChunks, aName){
this.children = [];
this.sourceContents = {};
this.line = aLine === undefined?null:aLine;
this.column = aColumn === undefined?null:aColumn;
this.source = aSource === undefined?null:aSource;
this.name = aName === undefined?null:aName;
if(aChunks != null)this.add(aChunks);}








SourceNode.fromStringWithSourceMap = 
function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer){


var node=new SourceNode();



var remainingLines=aGeneratedCode.split("\n");


var lastGeneratedLine=1, lastGeneratedColumn=0;




var lastMapping=null;

aSourceMapConsumer.eachMapping(function(mapping){
if(lastMapping === null){



while(lastGeneratedLine < mapping.generatedLine) {
node.add(remainingLines.shift() + "\n");
lastGeneratedLine++;}

if(lastGeneratedColumn < mapping.generatedColumn){
var nextLine=remainingLines[0];
node.add(nextLine.substr(0, mapping.generatedColumn));
remainingLines[0] = nextLine.substr(mapping.generatedColumn);
lastGeneratedColumn = mapping.generatedColumn;}}else 

{


if(lastGeneratedLine < mapping.generatedLine){
var code="";

do {
code += remainingLines.shift() + "\n";
lastGeneratedLine++;
lastGeneratedColumn = 0;}while(
lastGeneratedLine < mapping.generatedLine);


if(lastGeneratedColumn < mapping.generatedColumn){
var nextLine=remainingLines[0];
code += nextLine.substr(0, mapping.generatedColumn);
remainingLines[0] = nextLine.substr(mapping.generatedColumn);
lastGeneratedColumn = mapping.generatedColumn;}


addMappingWithCode(lastMapping, code);}else 
{



var nextLine=remainingLines[0];
var code=nextLine.substr(0, mapping.generatedColumn - 
lastGeneratedColumn);
remainingLines[0] = nextLine.substr(mapping.generatedColumn - 
lastGeneratedColumn);
lastGeneratedColumn = mapping.generatedColumn;
addMappingWithCode(lastMapping, code);}}


lastMapping = mapping;}, 
this);



addMappingWithCode(lastMapping, remainingLines.join("\n"));


aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
node.setSourceContent(sourceFile, content);}});



return node;

function addMappingWithCode(mapping, code){
if(mapping === null || mapping.source === undefined){
node.add(code);}else 
{
node.add(new SourceNode(mapping.originalLine, 
mapping.originalColumn, 
mapping.source, 
code, 
mapping.name));}}};










SourceNode.prototype.add = function SourceNode_add(aChunk){
if(Array.isArray(aChunk)){
aChunk.forEach(function(chunk){
this.add(chunk);}, 
this);}else 

if(aChunk instanceof SourceNode || typeof aChunk === "string"){
if(aChunk){
this.children.push(aChunk);}}else 


{
throw new TypeError(
"Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk);}


return this;};








SourceNode.prototype.prepend = function SourceNode_prepend(aChunk){
if(Array.isArray(aChunk)){
for(var i=aChunk.length - 1; i >= 0; i--) {
this.prepend(aChunk[i]);}}else 


if(aChunk instanceof SourceNode || typeof aChunk === "string"){
this.children.unshift(aChunk);}else 

{
throw new TypeError(
"Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk);}


return this;};









SourceNode.prototype.walk = function SourceNode_walk(aFn){
var chunk;
for(var i=0, len=this.children.length; i < len; i++) {
chunk = this.children[i];
if(chunk instanceof SourceNode){
chunk.walk(aFn);}else 

{
if(chunk !== ""){
aFn(chunk, {source:this.source, 
line:this.line, 
column:this.column, 
name:this.name});}}}};











SourceNode.prototype.join = function SourceNode_join(aSep){
var newChildren;
var i;
var len=this.children.length;
if(len > 0){
newChildren = [];
for(i = 0; i < len - 1; i++) {
newChildren.push(this.children[i]);
newChildren.push(aSep);}

newChildren.push(this.children[i]);
this.children = newChildren;}

return this;};









SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement){
var lastChild=this.children[this.children.length - 1];
if(lastChild instanceof SourceNode){
lastChild.replaceRight(aPattern, aReplacement);}else 

if(typeof lastChild === "string"){
this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);}else 

{
this.children.push("".replace(aPattern, aReplacement));}

return this;};









SourceNode.prototype.setSourceContent = 
function SourceNode_setSourceContent(aSourceFile, aSourceContent){
this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;};








SourceNode.prototype.walkSourceContents = 
function SourceNode_walkSourceContents(aFn){
for(var i=0, len=this.children.length; i < len; i++) {
if(this.children[i] instanceof SourceNode){
this.children[i].walkSourceContents(aFn);}}



var sources=Object.keys(this.sourceContents);
for(var i=0, len=sources.length; i < len; i++) {
aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);}};







SourceNode.prototype.toString = function SourceNode_toString(){
var str="";
this.walk(function(chunk){
str += chunk;});

return str;};






SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs){
var generated={
code:"", 
line:1, 
column:0};

var map=new SourceMapGenerator(aArgs);
var sourceMappingActive=false;
var lastOriginalSource=null;
var lastOriginalLine=null;
var lastOriginalColumn=null;
var lastOriginalName=null;
this.walk(function(chunk, original){
generated.code += chunk;
if(original.source !== null && 
original.line !== null && 
original.column !== null){
if(lastOriginalSource !== original.source || 
lastOriginalLine !== original.line || 
lastOriginalColumn !== original.column || 
lastOriginalName !== original.name){
map.addMapping({
source:original.source, 
original:{
line:original.line, 
column:original.column}, 

generated:{
line:generated.line, 
column:generated.column}, 

name:original.name});}


lastOriginalSource = original.source;
lastOriginalLine = original.line;
lastOriginalColumn = original.column;
lastOriginalName = original.name;
sourceMappingActive = true;}else 
if(sourceMappingActive){
map.addMapping({
generated:{
line:generated.line, 
column:generated.column}});


lastOriginalSource = null;
sourceMappingActive = false;}

chunk.split("").forEach(function(ch){
if(ch === "\n"){
generated.line++;
generated.column = 0;}else 
{
generated.column++;}});});



this.walkSourceContents(function(sourceFile, sourceContent){
map.setSourceContent(sourceFile, sourceContent);});


return {code:generated.code, map:map};};


exports.SourceNode = SourceNode;});





this.sourceMap = {
SourceMapConsumer:require("source-map/source-map-consumer").SourceMapConsumer, 
SourceMapGenerator:require("source-map/source-map-generator").SourceMapGenerator, 
SourceNode:require("source-map/source-node").SourceNode};}});
__d('react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (














function(){
var define=null;




void (function(root, factory){
if(typeof define === "function" && define.amd){
define(factory);}else 
if(typeof exports === "object"){
module.exports = factory();}else 
{
root.sourceMappingURL = factory();}})(

this, function(){

var innerRegex=/[#@] sourceMappingURL=([^\s'"]*)/;

var regex=RegExp(
"(?:" + 
"/\\*" + 
"(?:\\s*\r?\n(?://)?)?" + 
"(?:" + innerRegex.source + ")" + 
"\\s*" + 
"\\*/" + 
"|" + 
"//(?:" + innerRegex.source + ")" + 
")" + 
"\\s*$");


return {

regex:regex, 
_innerRegex:innerRegex, 

getFrom:function(code){
var match=code.match(regex);
return match?match[1] || match[2] || "":null;}, 


existsIn:function(code){
return regex.test(code);}, 


removeFrom:function(code){
return code.replace(regex, "");}, 


insertBefore:function(code, string){
var match=code.match(regex);
if(match){
return code.slice(0, match.index) + string + code.slice(match.index);}else 
{
return code + string;}}};});})();});
__d('parseErrorStack',["stacktrace-parser/index"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var stacktraceParser=require('stacktrace-parser/index');

function resolveSourceMaps(sourceMapInstance, stackFrame){
try{
var orig=sourceMapInstance.originalPositionFor({
line:stackFrame.lineNumber, 
column:stackFrame.column});

if(orig){
stackFrame.file = orig.source;
stackFrame.lineNumber = orig.line;
stackFrame.column = orig.column;}}

catch(innerEx) {}}



function parseErrorStack(e, sourceMapInstance){
var stack=stacktraceParser.parse(e.stack);

var framesToPop=e.framesToPop || 0;
while(framesToPop--) {
stack.shift();}


if(sourceMapInstance){
stack.forEach(resolveSourceMaps.bind(null, sourceMapInstance));}


return stack;}


module.exports = parseErrorStack;});
__d('stacktrace-parser/index',["stacktrace-parser/lib/stacktrace-parser"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = require('stacktrace-parser/lib/stacktrace-parser');});
__d('stacktrace-parser/lib/stacktrace-parser',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 

UNKNOWN_FUNCTION='<unknown>';

var StackTraceParser={




parse:function(stackString){
var chrome=/^\s*at (?:(?:(?:Anonymous function)?|((?:\[object object\])?\S+(?: \[as \S+\])?)) )?\(?((?:file|http|https):.*?):(\d+)(?::(\d+))?\)?\s*$/i, 
gecko=/^(?:\s*(\S*)(?:\((.*?)\))?@)?((?:\w).*?):(\d+)(?::(\d+))?\s*$/i, 
node=/^\s*at (?:((?:\[object object\])?\S+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i, 
lines=stackString.split('\n'), 
stack=[], 
parts, 
element;

for(var i=0, j=lines.length; i < j; ++i) {
if(parts = gecko.exec(lines[i])){
element = {
'file':parts[3], 
'methodName':parts[1] || UNKNOWN_FUNCTION, 
'lineNumber':+parts[4], 
'column':parts[5]?+parts[5]:null};}else 

if(parts = chrome.exec(lines[i])){
element = {
'file':parts[2], 
'methodName':parts[1] || UNKNOWN_FUNCTION, 
'lineNumber':+parts[3], 
'column':parts[4]?+parts[4]:null};}else 

if(parts = node.exec(lines[i])){
element = {
'file':parts[2], 
'methodName':parts[1] || UNKNOWN_FUNCTION, 
'lineNumber':+parts[3], 
'column':parts[4]?+parts[4]:null};}else 

{
continue;}


stack.push(element);}


return stack;}};




module.exports = StackTraceParser;});
__d('stringifySafe',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';
















function stringifySafe(arg){
var ret;
var type=typeof arg;
if(arg === undefined){
ret = 'undefined';}else 
if(arg === null){
ret = 'null';}else 
if(type === 'string'){
ret = '"' + arg + '"';}else 
if(type === 'function'){
try{
ret = arg.toString();}
catch(e) {
ret = '[function unknown]';}}else 

{


try{
ret = JSON.stringify(arg);}
catch(e) {
if(typeof arg.toString === 'function'){
try{
ret = arg.toString();}
catch(E) {}}}}



return ret || '["' + type + '" failed to stringify]';}


module.exports = stringifySafe;});
__d('Platform',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var Platform={
OS:'ios'};


module.exports = Platform;});
__d('XMLHttpRequest',["NativeModules","XMLHttpRequestBase"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}












var RCTDataManager=require('NativeModules').DataManager;

var XMLHttpRequestBase=require('XMLHttpRequestBase');var 

XMLHttpRequest=(function(_XMLHttpRequestBase){function XMLHttpRequest(){_classCallCheck(this, XMLHttpRequest);if(_XMLHttpRequestBase != null){_XMLHttpRequestBase.apply(this, arguments);}}_inherits(XMLHttpRequest, _XMLHttpRequestBase);_createClass(XMLHttpRequest, [{key:'sendImpl', value:

function sendImpl(method, url, headers, data){
RCTDataManager.queryData(
'http', 
{
method:method, 
url:url, 
data:data, 
headers:headers}, 

this.callback.bind(this));}}, {key:'abortImpl', value:



function abortImpl(){
console.warn(
'XMLHttpRequest: abort() cancels JS callbacks ' + 
'but not native HTTP request.');}}]);return XMLHttpRequest;})(XMLHttpRequestBase);




module.exports = XMLHttpRequest;});
__d('XMLHttpRequestBase',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 










XMLHttpRequestBase=(function(){





















function XMLHttpRequestBase(){_classCallCheck(this, XMLHttpRequestBase);
this.UNSENT = 0;
this.OPENED = 1;
this.HEADERS_RECEIVED = 2;
this.LOADING = 3;
this.DONE = 4;

this.onreadystatechange = undefined;
this.upload = undefined;
this.readyState = this.UNSENT;
this.responseHeaders = undefined;
this.responseText = undefined;
this.status = 0;

this._method = null;
this._url = null;
this._headers = {};
this._sent = false;
this._aborted = false;}_createClass(XMLHttpRequestBase, [{key:'getAllResponseHeaders', value:


function getAllResponseHeaders(){
if(this.responseHeaders){
var headers=[];
for(var headerName in this.responseHeaders) {
headers.push(headerName + ': ' + this.responseHeaders[headerName]);}

return headers.join('\n');}


return null;}}, {key:'getResponseHeader', value:


function getResponseHeader(header){
if(this.responseHeaders){
var value=this.responseHeaders[header.toLowerCase()];
return value !== undefined?value:null;}

return null;}}, {key:'setRequestHeader', value:


function setRequestHeader(header, value){
this._headers[header.toLowerCase()] = value;}}, {key:'open', value:


function open(method, url, async){

if(this.readyState !== this.UNSENT){
throw new Error('Cannot open, already sending');}

if(async !== undefined && !async){

throw new Error('Synchronous http requests are not supported');}

this._method = method;
this._url = url;
this._aborted = false;
this._setReadyState(this.OPENED);}}, {key:'sendImpl', value:


function sendImpl(method, url, headers, data){
throw new Error('Subclass must define sendImpl method');}}, {key:'abortImpl', value:


function abortImpl(){
throw new Error('Subclass must define abortImpl method');}}, {key:'send', value:


function send(data){
if(this.readyState !== this.OPENED){
throw new Error('Request has not been opened');}

if(this._sent){
throw new Error('Request has already been sent');}

this._sent = true;
this.sendImpl(this._method, this._url, this._headers, data);}}, {key:'abort', value:


function abort(){
this.abortImpl();


if(!(this.readyState === this.UNSENT || 
this.readyState === this.OPENED && !this._sent || 
this.readyState === this.DONE)){
this._sent = false;
this._setReadyState(this.DONE);}

if(this.readyState === this.DONE){
this._sendLoad();}

this.readyState = this.UNSENT;
this._aborted = true;}}, {key:'callback', value:


function callback(status, responseHeaders, responseText){
if(this._aborted){
return;}

this.status = status;

var lcResponseHeaders={};
for(var header in responseHeaders) {
lcResponseHeaders[header.toLowerCase()] = responseHeaders[header];}

this.responseHeaders = lcResponseHeaders;
this.responseText = responseText;
this._setReadyState(this.DONE);
this._sendLoad();}}, {key:'_setReadyState', value:


function _setReadyState(newState){
this.readyState = newState;

var onreadystatechange=this.onreadystatechange;
if(onreadystatechange){


onreadystatechange(null);}}}, {key:'_sendLoad', value:



function _sendLoad(){

var onload=this.onload;
if(onload){


onload(null);}}}]);return XMLHttpRequestBase;})();




module.exports = XMLHttpRequestBase;});
__d('fetch',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';
















var self={};

























(function(){
'use strict';

if(self.fetch){
return;}


function normalizeName(name){
if(typeof name !== 'string'){
name = name.toString();}

if(/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)){
throw new TypeError('Invalid character in header field name');}

return name.toLowerCase();}


function normalizeValue(value){
if(typeof value !== 'string'){
value = value.toString();}

return value;}


function Headers(headers){
this.map = {};

var self=this;
if(headers instanceof Headers){
headers.forEach(function(name, values){
values.forEach(function(value){
self.append(name, value);});});}else 



if(headers){
Object.getOwnPropertyNames(headers).forEach(function(name){
self.append(name, headers[name]);});}}




Headers.prototype.append = function(name, value){
name = normalizeName(name);
value = normalizeValue(value);
var list=this.map[name];
if(!list){
list = [];
this.map[name] = list;}

list.push(value);};


Headers.prototype['delete'] = function(name){
delete this.map[normalizeName(name)];};


Headers.prototype.get = function(name){
var values=this.map[normalizeName(name)];
return values?values[0]:null;};


Headers.prototype.getAll = function(name){
return this.map[normalizeName(name)] || [];};


Headers.prototype.has = function(name){
return this.map.hasOwnProperty(normalizeName(name));};


Headers.prototype.set = function(name, value){
this.map[normalizeName(name)] = [normalizeValue(value)];};



Headers.prototype.forEach = function(callback){
var self=this;
Object.getOwnPropertyNames(this.map).forEach(function(name){
callback(name, self.map[name]);});};



function consumed(body){
if(body.bodyUsed){
return Promise.reject(new TypeError('Already read'));}

body.bodyUsed = true;}


function fileReaderReady(reader){
return new Promise(function(resolve, reject){
reader.onload = function(){
resolve(reader.result);};

reader.onerror = function(){
reject(reader.error);};});}




function readBlobAsArrayBuffer(blob){
var reader=new FileReader();
reader.readAsArrayBuffer(blob);
return fileReaderReady(reader);}


function readBlobAsText(blob){
var reader=new FileReader();
reader.readAsText(blob);
return fileReaderReady(reader);}


var support={
blob:'FileReader' in self && 'Blob' in self && (function(){
try{
new Blob();
return true;}
catch(e) {
return false;}})(), 


formData:'FormData' in self};


function Body(){
this.bodyUsed = false;


this._initBody = function(body){
this._bodyInit = body;
if(typeof body === 'string'){
this._bodyText = body;}else 
if(support.blob && Blob.prototype.isPrototypeOf(body)){
this._bodyBlob = body;}else 
if(support.formData && FormData.prototype.isPrototypeOf(body)){
this._bodyFormData = body;}else 
if(!body){
this._bodyText = '';}else 
{
throw new Error('unsupported BodyInit type');}};



if(support.blob){
this.blob = function(){
var rejected=consumed(this);
if(rejected){
return rejected;}


if(this._bodyBlob){
return Promise.resolve(this._bodyBlob);}else 
if(this._bodyFormData){
throw new Error('could not read FormData body as blob');}else 
{
return Promise.resolve(new Blob([this._bodyText]));}};



this.arrayBuffer = function(){
return this.blob().then(readBlobAsArrayBuffer);};


this.text = function(){
var rejected=consumed(this);
if(rejected){
return rejected;}


if(this._bodyBlob){
return readBlobAsText(this._bodyBlob);}else 
if(this._bodyFormData){
throw new Error('could not read FormData body as text');}else 
{
return Promise.resolve(this._bodyText);}};}else 


{
this.text = function(){
var rejected=consumed(this);
return rejected?rejected:Promise.resolve(this._bodyText);};}



if(support.formData){
this.formData = function(){
return this.text().then(decode);};}



this.json = function(){
return this.text().then(JSON.parse);};


return this;}



var methods=['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

function normalizeMethod(method){
var upcased=method.toUpperCase();
return methods.indexOf(upcased) > -1?upcased:method;}


function Request(url, options){
options = options || {};
this.url = url;

this.credentials = options.credentials || 'omit';
this.headers = new Headers(options.headers);
this.method = normalizeMethod(options.method || 'GET');
this.mode = options.mode || null;
this.referrer = null;

if((this.method === 'GET' || this.method === 'HEAD') && options.body){
throw new TypeError('Body not allowed for GET or HEAD requests');}

this._initBody(options.body);}


function decode(body){
var form=new FormData();
body.trim().split('&').forEach(function(bytes){
if(bytes){
var split=bytes.split('=');
var name=split.shift().replace(/\+/g, ' ');
var value=split.join('=').replace(/\+/g, ' ');
form.append(decodeURIComponent(name), decodeURIComponent(value));}});


return form;}


function headers(xhr){
var head=new Headers();
var pairs=xhr.getAllResponseHeaders().trim().split('\n');
pairs.forEach(function(header){
var split=header.trim().split(':');
var key=split.shift().trim();
var value=split.join(':').trim();
head.append(key, value);});

return head;}


Body.call(Request.prototype);

function Response(bodyInit, options){
if(!options){
options = {};}


this._initBody(bodyInit);
this.type = 'default';
this.url = null;
this.status = options.status;
this.ok = this.status >= 200 && this.status < 300;
this.statusText = options.statusText;
this.headers = options.headers instanceof Headers?options.headers:new Headers(options.headers);
this.url = options.url || '';}


Body.call(Response.prototype);

self.Headers = Headers;
self.Request = Request;
self.Response = Response;

self.fetch = function(input, init){

var request;
if(Request.prototype.isPrototypeOf(input) && !init){
request = input;}else 
{
request = new Request(input, init);}


return new Promise(function(resolve, reject){
var xhr=new XMLHttpRequest();
if(request.credentials === 'cors'){
xhr.withCredentials = true;}


function responseURL(){
if('responseURL' in xhr){
return xhr.responseURL;}



if(/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())){
return xhr.getResponseHeader('X-Request-URL');}


return;}


xhr.onload = function(){
var status=xhr.status === 1223?204:xhr.status;
if(status < 100 || status > 599){
reject(new TypeError('Network request failed'));
return;}

var options={
status:status, 
statusText:xhr.statusText, 
headers:headers(xhr), 
url:responseURL()};

var body='response' in xhr?xhr.response:xhr.responseText;
resolve(new Response(body, options));};


xhr.onerror = function(){
reject(new TypeError('Network request failed'));};


xhr.open(request.method, request.url, true);

if('responseType' in xhr && support.blob){
xhr.responseType = 'blob';}


request.headers.forEach(function(name, values){
values.forEach(function(value){
xhr.setRequestHeader(name, value);});});



xhr.send(typeof request._bodyInit === 'undefined'?null:request._bodyInit);});};


self.fetch.polyfill = true;})();




module.exports = self;});
__d('Geolocation',["RCTDeviceEventEmitter","NativeModules","invariant","logError","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTLocationObserver=require('NativeModules').LocationObserver;

var invariant=require('invariant');
var logError=require('logError');
var warning=require('warning');

var subscriptions=[];

var updatesEnabled=false;















var Geolocation={





getCurrentPosition:function(
geo_success, 
geo_error, 
geo_options)
{
invariant(
typeof geo_success === 'function', 
'Must provide a valid geo_success callback.');

RCTLocationObserver.getCurrentPosition(
geo_options || {}, 
geo_success, 
geo_error || logError);}, 







watchPosition:function(success, error, options){
if(!updatesEnabled){
RCTLocationObserver.startObserving(options || {});
updatesEnabled = true;}

var watchID=subscriptions.length;
subscriptions.push([
RCTDeviceEventEmitter.addListener(
'geolocationDidChange', 
success), 

error?RCTDeviceEventEmitter.addListener(
'geolocationError', 
error):
null]);

return watchID;}, 


clearWatch:function(watchID){
var sub=subscriptions[watchID];
if(!sub){


return;}


sub[0].remove();

var sub1=sub[1];sub1 && sub1.remove();
subscriptions[watchID] = undefined;
var noWatchers=true;
for(var ii=0; ii < subscriptions.length; ii++) {
if(subscriptions[ii]){
noWatchers = false;}}


if(noWatchers){
Geolocation.stopObserving();}}, 



stopObserving:function(){
if(updatesEnabled){
RCTLocationObserver.stopObserving();
updatesEnabled = false;
for(var ii=0; ii < subscriptions.length; ii++) {
var sub=subscriptions[ii];
if(sub){
warning('Called stopObserving with existing subscriptions.');
sub[0].remove();

var sub1=sub[1];sub1 && sub1.remove();}}


subscriptions = [];}}};




module.exports = Geolocation;});
__d('logError',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

















var logError=function(){
if(arguments.length === 1 && arguments[0] instanceof Error){
var err=arguments[0];
console.error('Error: "' + err.message + '".  Stack:\n' + err.stack);}else 
{
console.error.apply(console, arguments);}};



module.exports = logError;});
__d('WebSocket',["RCTDeviceEventEmitter","NativeModules","WebSocketBase"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTWebSocketManager=require('NativeModules').WebSocketManager;

var WebSocketBase=require('WebSocketBase');

var WebSocketId=0;var 

WebSocket=(function(_WebSocketBase){function WebSocket(){_classCallCheck(this, WebSocket);if(_WebSocketBase != null){_WebSocketBase.apply(this, arguments);}}_inherits(WebSocket, _WebSocketBase);_createClass(WebSocket, [{key:'connectToSocketImpl', value:



function connectToSocketImpl(url){
this._socketId = WebSocketId++;
RCTWebSocketManager.connect(url, this._socketId);
this._registerEvents(this._socketId);}}, {key:'closeConnectionImpl', value:


function closeConnectionImpl(){
RCTWebSocketManager.close(this._socketId);}}, {key:'cancelConnectionImpl', value:


function cancelConnectionImpl(){
RCTWebSocketManager.close(this._socketId);}}, {key:'sendStringImpl', value:


function sendStringImpl(message){
RCTWebSocketManager.send(message, this._socketId);}}, {key:'sendArrayBufferImpl', value:


function sendArrayBufferImpl(){

console.warn('Sending ArrayBuffers is not yet supported');}}, {key:'_unregisterEvents', value:


function _unregisterEvents(){
this._subs.forEach(function(e){return e.remove();});
this._subs = [];}}, {key:'_registerEvents', value:


function _registerEvents(id){
this._subs = [
RCTDeviceEventEmitter.addListener(
'websocketMessage', 
(function(ev){
if(ev.id !== id){
return;}

this.onmessage && this.onmessage({
data:ev.data});}).

bind(this)), 

RCTDeviceEventEmitter.addListener(
'websocketOpen', 
(function(ev){
if(ev.id !== id){
return;}

this.readyState = this.OPEN;
this.onopen && this.onopen();}).
bind(this)), 

RCTDeviceEventEmitter.addListener(
'websocketClosed', 
(function(ev){
if(ev.id !== id){
return;}

this.readyState = this.CLOSED;
this.onclose && this.onclose(ev);
this._unregisterEvents();
RCTWebSocketManager.close(id);}).
bind(this)), 

RCTDeviceEventEmitter.addListener(
'websocketFailed', 
(function(ev){
if(ev.id !== id){
return;}

this.onerror && this.onerror(new Error(ev.message));
this._unregisterEvents();
RCTWebSocketManager.close(id);}).
bind(this))];}}]);return WebSocket;})(WebSocketBase);






module.exports = WebSocket;});
__d('WebSocketBase',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 















WebSocketBase=(function(){

















function WebSocketBase(url, protocols){_classCallCheck(this, WebSocketBase);
this.CONNECTING = 0;
this.OPEN = 1;
this.CLOSING = 2;
this.CLOSED = 3;

if(!protocols){
protocols = [];}


this.connectToSocketImpl(url);}_createClass(WebSocketBase, [{key:'close', value:


function close(){
if(this.readyState === WebSocketBase.CLOSING || 
this.readyState === WebSocketBase.CLOSED){
return;}


if(this.readyState === WebSocketBase.CONNECTING){
this.cancelConnectionImpl();}


this.closeConnectionImpl();}}, {key:'send', value:


function send(data){
if(this.readyState === WebSocketBase.CONNECTING){
throw new Error('INVALID_STATE_ERR');}


if(typeof data === 'string'){
this.sendStringImpl(data);}else 
if(data instanceof ArrayBuffer){
this.sendArrayBufferImpl(data);}else 
{
throw new Error('Not supported data type');}}}, {key:'closeConnectionImpl', value:



function closeConnectionImpl(){
throw new Error('Subclass must define closeConnectionImpl method');}}, {key:'connectToSocketImpl', value:


function connectToSocketImpl(){
throw new Error('Subclass must define connectToSocketImpl method');}}, {key:'cancelConnectionImpl', value:


function cancelConnectionImpl(){
throw new Error('Subclass must define cancelConnectionImpl method');}}, {key:'sendStringImpl', value:


function sendStringImpl(){
throw new Error('Subclass must define sendStringImpl method');}}, {key:'sendArrayBufferImpl', value:


function sendArrayBufferImpl(){
throw new Error('Subclass must define sendArrayBufferImpl method');}}]);return WebSocketBase;})();




module.exports = WebSocketBase;});
__d('EventPluginHub',["EventPluginRegistry","EventPluginUtils","accumulateInto","forEachAccumulated","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventPluginRegistry=require('EventPluginRegistry');
var EventPluginUtils=require('EventPluginUtils');

var accumulateInto=require('accumulateInto');
var forEachAccumulated=require('forEachAccumulated');
var invariant=require('invariant');




var listenerBank={};





var eventQueue=null;







var executeDispatchesAndRelease=function(event){
if(event){
var executeDispatch=EventPluginUtils.executeDispatch;

var PluginModule=EventPluginRegistry.getPluginModuleForEvent(event);
if(PluginModule && PluginModule.executeDispatch){
executeDispatch = PluginModule.executeDispatch;}

EventPluginUtils.executeDispatchesInOrder(event, executeDispatch);

if(!event.isPersistent()){
event.constructor.release(event);}}};








var InstanceHandle=null;

function validateInstanceHandle(){
var valid=
InstanceHandle && 
InstanceHandle.traverseTwoPhase && 
InstanceHandle.traverseEnterLeave;
invariant(
valid, 
'InstanceHandle not injected before use!');}

























var EventPluginHub={




injection:{





injectMount:EventPluginUtils.injection.injectMount, 





injectInstanceHandle:function(InjectedInstanceHandle){
InstanceHandle = InjectedInstanceHandle;
if(__DEV__){
validateInstanceHandle();}}, 



getInstanceHandle:function(){
if(__DEV__){
validateInstanceHandle();}

return InstanceHandle;}, 






injectEventPluginOrder:EventPluginRegistry.injectEventPluginOrder, 




injectEventPluginsByName:EventPluginRegistry.injectEventPluginsByName}, 



eventNameDispatchConfigs:EventPluginRegistry.eventNameDispatchConfigs, 

registrationNameModules:EventPluginRegistry.registrationNameModules, 








putListener:function(id, registrationName, listener){
invariant(
!listener || typeof listener === 'function', 
'Expected %s listener to be a function, instead got type %s', 
registrationName, typeof listener);


var bankForRegistrationName=
listenerBank[registrationName] || (listenerBank[registrationName] = {});
bankForRegistrationName[id] = listener;}, 







getListener:function(id, registrationName){
var bankForRegistrationName=listenerBank[registrationName];
return bankForRegistrationName && bankForRegistrationName[id];}, 








deleteListener:function(id, registrationName){
var bankForRegistrationName=listenerBank[registrationName];
if(bankForRegistrationName){
delete bankForRegistrationName[id];}}, 








deleteAllListeners:function(id){
for(var registrationName in listenerBank) {
delete listenerBank[registrationName][id];}}, 














extractEvents:function(
topLevelType, 
topLevelTarget, 
topLevelTargetID, 
nativeEvent){
var events;
var plugins=EventPluginRegistry.plugins;
for(var i=0, l=plugins.length; i < l; i++) {

var possiblePlugin=plugins[i];
if(possiblePlugin){
var extractedEvents=possiblePlugin.extractEvents(
topLevelType, 
topLevelTarget, 
topLevelTargetID, 
nativeEvent);

if(extractedEvents){
events = accumulateInto(events, extractedEvents);}}}



return events;}, 









enqueueEvents:function(events){
if(events){
eventQueue = accumulateInto(eventQueue, events);}}, 








processEventQueue:function(){


var processingEventQueue=eventQueue;
eventQueue = null;
forEachAccumulated(processingEventQueue, executeDispatchesAndRelease);
invariant(
!eventQueue, 
'processEventQueue(): Additional events were enqueued while processing ' + 
'an event queue. Support for this has not yet been implemented.');}, 






__purge:function(){
listenerBank = {};}, 


__getListenerBank:function(){
return listenerBank;}};




module.exports = EventPluginHub;});
__d('EventPluginRegistry',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var invariant=require('invariant');




var EventPluginOrder=null;




var namesToPlugins={};






function recomputePluginOrdering(){
if(!EventPluginOrder){

return;}

for(var pluginName in namesToPlugins) {
var PluginModule=namesToPlugins[pluginName];
var pluginIndex=EventPluginOrder.indexOf(pluginName);
invariant(
pluginIndex > -1, 
'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 
'the plugin ordering, `%s`.', 
pluginName);

if(EventPluginRegistry.plugins[pluginIndex]){
continue;}

invariant(
PluginModule.extractEvents, 
'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 
'method, but `%s` does not.', 
pluginName);

EventPluginRegistry.plugins[pluginIndex] = PluginModule;
var publishedEvents=PluginModule.eventTypes;
for(var eventName in publishedEvents) {
invariant(
publishEventForPlugin(
publishedEvents[eventName], 
PluginModule, 
eventName), 

'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', 
eventName, 
pluginName);}}}













function publishEventForPlugin(dispatchConfig, PluginModule, eventName){
invariant(
!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName), 
'EventPluginHub: More than one plugin attempted to publish the same ' + 
'event name, `%s`.', 
eventName);

EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

var phasedRegistrationNames=dispatchConfig.phasedRegistrationNames;
if(phasedRegistrationNames){
for(var phaseName in phasedRegistrationNames) {
if(phasedRegistrationNames.hasOwnProperty(phaseName)){
var phasedRegistrationName=phasedRegistrationNames[phaseName];
publishRegistrationName(
phasedRegistrationName, 
PluginModule, 
eventName);}}



return true;}else 
if(dispatchConfig.registrationName){
publishRegistrationName(
dispatchConfig.registrationName, 
PluginModule, 
eventName);

return true;}

return false;}










function publishRegistrationName(registrationName, PluginModule, eventName){
invariant(
!EventPluginRegistry.registrationNameModules[registrationName], 
'EventPluginHub: More than one plugin attempted to publish the same ' + 
'registration name, `%s`.', 
registrationName);

EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
EventPluginRegistry.registrationNameDependencies[registrationName] = 
PluginModule.eventTypes[eventName].dependencies;}







var EventPluginRegistry={




plugins:[], 




eventNameDispatchConfigs:{}, 




registrationNameModules:{}, 




registrationNameDependencies:{}, 










injectEventPluginOrder:function(InjectedEventPluginOrder){
invariant(
!EventPluginOrder, 
'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 
'once. You are likely trying to load more than one copy of React.');


EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
recomputePluginOrdering();}, 












injectEventPluginsByName:function(injectedNamesToPlugins){
var isOrderingDirty=false;
for(var pluginName in injectedNamesToPlugins) {
if(!injectedNamesToPlugins.hasOwnProperty(pluginName)){
continue;}

var PluginModule=injectedNamesToPlugins[pluginName];
if(!namesToPlugins.hasOwnProperty(pluginName) || 
namesToPlugins[pluginName] !== PluginModule){
invariant(
!namesToPlugins[pluginName], 
'EventPluginRegistry: Cannot inject two different event plugins ' + 
'using the same name, `%s`.', 
pluginName);

namesToPlugins[pluginName] = PluginModule;
isOrderingDirty = true;}}


if(isOrderingDirty){
recomputePluginOrdering();}}, 










getPluginModuleForEvent:function(event){
var dispatchConfig=event.dispatchConfig;
if(dispatchConfig.registrationName){
return EventPluginRegistry.registrationNameModules[
dispatchConfig.registrationName] || 
null;}

for(var phase in dispatchConfig.phasedRegistrationNames) {
if(!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)){
continue;}

var PluginModule=EventPluginRegistry.registrationNameModules[
dispatchConfig.phasedRegistrationNames[phase]];

if(PluginModule){
return PluginModule;}}


return null;}, 






_resetEventPlugins:function(){
EventPluginOrder = null;
for(var pluginName in namesToPlugins) {
if(namesToPlugins.hasOwnProperty(pluginName)){
delete namesToPlugins[pluginName];}}


EventPluginRegistry.plugins.length = 0;

var eventNameDispatchConfigs=EventPluginRegistry.eventNameDispatchConfigs;
for(var eventName in eventNameDispatchConfigs) {
if(eventNameDispatchConfigs.hasOwnProperty(eventName)){
delete eventNameDispatchConfigs[eventName];}}



var registrationNameModules=EventPluginRegistry.registrationNameModules;
for(var registrationName in registrationNameModules) {
if(registrationNameModules.hasOwnProperty(registrationName)){
delete registrationNameModules[registrationName];}}}};






module.exports = EventPluginRegistry;});
__d('EventPluginUtils',["EventConstants","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventConstants=require('EventConstants');

var invariant=require('invariant');









var injection={
Mount:null, 
injectMount:function(InjectedMount){
injection.Mount = InjectedMount;
if(__DEV__){
invariant(
InjectedMount && InjectedMount.getNode, 
'EventPluginUtils.injection.injectMount(...): Injected Mount module ' + 
'is missing getNode.');}}};





var topLevelTypes=EventConstants.topLevelTypes;

function isEndish(topLevelType){
return topLevelType === topLevelTypes.topMouseUp || 
topLevelType === topLevelTypes.topTouchEnd || 
topLevelType === topLevelTypes.topTouchCancel;}


function isMoveish(topLevelType){
return topLevelType === topLevelTypes.topMouseMove || 
topLevelType === topLevelTypes.topTouchMove;}

function isStartish(topLevelType){
return topLevelType === topLevelTypes.topMouseDown || 
topLevelType === topLevelTypes.topTouchStart;}



var validateEventDispatches;
if(__DEV__){
validateEventDispatches = function(event){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;

var listenersIsArr=Array.isArray(dispatchListeners);
var idsIsArr=Array.isArray(dispatchIDs);
var IDsLen=idsIsArr?dispatchIDs.length:dispatchIDs?1:0;
var listenersLen=listenersIsArr?
dispatchListeners.length:
dispatchListeners?1:0;

invariant(
idsIsArr === listenersIsArr && IDsLen === listenersLen, 
'EventPluginUtils: Invalid `event`.');};}









function forEachEventDispatch(event, cb){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;
if(__DEV__){
validateEventDispatches(event);}

if(Array.isArray(dispatchListeners)){
for(var i=0; i < dispatchListeners.length; i++) {
if(event.isPropagationStopped()){
break;}


cb(event, dispatchListeners[i], dispatchIDs[i]);}}else 

if(dispatchListeners){
cb(event, dispatchListeners, dispatchIDs);}}









function executeDispatch(event, listener, domID){
event.currentTarget = injection.Mount.getNode(domID);
var returnValue=listener(event, domID);
event.currentTarget = null;
return returnValue;}





function executeDispatchesInOrder(event, cb){
forEachEventDispatch(event, cb);
event._dispatchListeners = null;
event._dispatchIDs = null;}









function executeDispatchesInOrderStopAtTrueImpl(event){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;
if(__DEV__){
validateEventDispatches(event);}

if(Array.isArray(dispatchListeners)){
for(var i=0; i < dispatchListeners.length; i++) {
if(event.isPropagationStopped()){
break;}


if(dispatchListeners[i](event, dispatchIDs[i])){
return dispatchIDs[i];}}}else 


if(dispatchListeners){
if(dispatchListeners(event, dispatchIDs)){
return dispatchIDs;}}


return null;}





function executeDispatchesInOrderStopAtTrue(event){
var ret=executeDispatchesInOrderStopAtTrueImpl(event);
event._dispatchIDs = null;
event._dispatchListeners = null;
return ret;}











function executeDirectDispatch(event){
if(__DEV__){
validateEventDispatches(event);}

var dispatchListener=event._dispatchListeners;
var dispatchID=event._dispatchIDs;
invariant(
!Array.isArray(dispatchListener), 
'executeDirectDispatch(...): Invalid `event`.');

var res=dispatchListener?
dispatchListener(event, dispatchID):
null;
event._dispatchListeners = null;
event._dispatchIDs = null;
return res;}






function hasDispatches(event){
return !!event._dispatchListeners;}





var EventPluginUtils={
isEndish:isEndish, 
isMoveish:isMoveish, 
isStartish:isStartish, 

executeDirectDispatch:executeDirectDispatch, 
executeDispatch:executeDispatch, 
executeDispatchesInOrder:executeDispatchesInOrder, 
executeDispatchesInOrderStopAtTrue:executeDispatchesInOrderStopAtTrue, 
hasDispatches:hasDispatches, 
injection:injection, 
useTouchEvents:false};


module.exports = EventPluginUtils;});
__d('EventConstants',["keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var keyMirror=require('keyMirror');

var PropagationPhases=keyMirror({bubbled:null, captured:null});




var topLevelTypes=keyMirror({
topBlur:null, 
topChange:null, 
topClick:null, 
topCompositionEnd:null, 
topCompositionStart:null, 
topCompositionUpdate:null, 
topContextMenu:null, 
topCopy:null, 
topCut:null, 
topDoubleClick:null, 
topDrag:null, 
topDragEnd:null, 
topDragEnter:null, 
topDragExit:null, 
topDragLeave:null, 
topDragOver:null, 
topDragStart:null, 
topDrop:null, 
topError:null, 
topFocus:null, 
topInput:null, 
topKeyDown:null, 
topKeyPress:null, 
topKeyUp:null, 
topLoad:null, 
topMouseDown:null, 
topMouseMove:null, 
topMouseOut:null, 
topMouseOver:null, 
topMouseUp:null, 
topPaste:null, 
topReset:null, 
topScroll:null, 
topSelectionChange:null, 
topSubmit:null, 
topTextInput:null, 
topTouchCancel:null, 
topTouchEnd:null, 
topTouchMove:null, 
topTouchStart:null, 
topWheel:null});


var EventConstants={
topLevelTypes:topLevelTypes, 
PropagationPhases:PropagationPhases};


module.exports = EventConstants;});
__d('accumulateInto',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');















function accumulateInto(current, next){
invariant(
next != null, 
'accumulateInto(...): Accumulated items must not be null or undefined.');

if(current == null){
return next;}




var currentIsArray=Array.isArray(current);
var nextIsArray=Array.isArray(next);

if(currentIsArray && nextIsArray){
current.push.apply(current, next);
return current;}


if(currentIsArray){
current.push(next);
return current;}


if(nextIsArray){

return [current].concat(next);}


return [current, next];}


module.exports = accumulateInto;});
__d('forEachAccumulated',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var forEachAccumulated=function(arr, cb, scope){
if(Array.isArray(arr)){
arr.forEach(cb, scope);}else 
if(arr){
cb.call(scope, arr);}};



module.exports = forEachAccumulated;});
__d('IOSDefaultEventPluginOrder',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var IOSDefaultEventPluginOrder=[
'ResponderEventPlugin', 
'IOSNativeBridgeEventPlugin'];


module.exports = IOSDefaultEventPluginOrder;});
__d('IOSNativeBridgeEventPlugin',["EventPropagators","NativeModules","SyntheticEvent","merge","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventPropagators=require('EventPropagators');
var NativeModules=require('NativeModules');
var SyntheticEvent=require('SyntheticEvent');

var merge=require('merge');
var warning=require('warning');

var RCTUIManager=NativeModules.UIManager;

var customBubblingEventTypes=RCTUIManager.customBubblingEventTypes;
var customDirectEventTypes=RCTUIManager.customDirectEventTypes;

var allTypesByEventName={};

for(var bubblingTypeName in customBubblingEventTypes) {
allTypesByEventName[bubblingTypeName] = customBubblingEventTypes[bubblingTypeName];}


for(var directTypeName in customDirectEventTypes) {
warning(
!customBubblingEventTypes[directTypeName], 
'Event cannot be both direct and bubbling: %s', 
directTypeName);

allTypesByEventName[directTypeName] = customDirectEventTypes[directTypeName];}


var IOSNativeBridgeEventPlugin={

eventTypes:merge(customBubblingEventTypes, customDirectEventTypes), 









extractEvents:function(
topLevelType, 
topLevelTarget, 
topLevelTargetID, 
nativeEvent)
{
var bubbleDispatchConfig=customBubblingEventTypes[topLevelType];
var directDispatchConfig=customDirectEventTypes[topLevelType];
var event=SyntheticEvent.getPooled(
bubbleDispatchConfig || directDispatchConfig, 
topLevelTargetID, 
nativeEvent);

if(bubbleDispatchConfig){
EventPropagators.accumulateTwoPhaseDispatches(event);}else 
if(directDispatchConfig){
EventPropagators.accumulateDirectDispatches(event);}else 
{
return null;}

return event;}};



module.exports = IOSNativeBridgeEventPlugin;});
__d('EventPropagators',["EventConstants","EventPluginHub","accumulateInto","forEachAccumulated"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');

var accumulateInto=require('accumulateInto');
var forEachAccumulated=require('forEachAccumulated');

var PropagationPhases=EventConstants.PropagationPhases;
var getListener=EventPluginHub.getListener;





function listenerAtPhase(id, event, propagationPhase){
var registrationName=
event.dispatchConfig.phasedRegistrationNames[propagationPhase];
return getListener(id, registrationName);}








function accumulateDirectionalDispatches(domID, upwards, event){
if(__DEV__){
if(!domID){
throw new Error('Dispatching id must not be null');}}


var phase=upwards?PropagationPhases.bubbled:PropagationPhases.captured;
var listener=listenerAtPhase(domID, event, phase);
if(listener){
event._dispatchListeners = 
accumulateInto(event._dispatchListeners, listener);
event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);}}










function accumulateTwoPhaseDispatchesSingle(event){
if(event && event.dispatchConfig.phasedRegistrationNames){
EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(
event.dispatchMarker, 
accumulateDirectionalDispatches, 
event);}}







function accumulateTwoPhaseDispatchesSingleSkipTarget(event){
if(event && event.dispatchConfig.phasedRegistrationNames){
EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(
event.dispatchMarker, 
accumulateDirectionalDispatches, 
event);}}










function accumulateDispatches(id, ignoredDirection, event){
if(event && event.dispatchConfig.registrationName){
var registrationName=event.dispatchConfig.registrationName;
var listener=getListener(id, registrationName);
if(listener){
event._dispatchListeners = 
accumulateInto(event._dispatchListeners, listener);
event._dispatchIDs = accumulateInto(event._dispatchIDs, id);}}}









function accumulateDirectDispatchesSingle(event){
if(event && event.dispatchConfig.registrationName){
accumulateDispatches(event.dispatchMarker, null, event);}}



function accumulateTwoPhaseDispatches(events){
forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);}


function accumulateTwoPhaseDispatchesSkipTarget(events){
forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);}


function accumulateEnterLeaveDispatches(leave, enter, fromID, toID){
EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(
fromID, 
toID, 
accumulateDispatches, 
leave, 
enter);}




function accumulateDirectDispatches(events){
forEachAccumulated(events, accumulateDirectDispatchesSingle);}















var EventPropagators={
accumulateTwoPhaseDispatches:accumulateTwoPhaseDispatches, 
accumulateTwoPhaseDispatchesSkipTarget:accumulateTwoPhaseDispatchesSkipTarget, 
accumulateDirectDispatches:accumulateDirectDispatches, 
accumulateEnterLeaveDispatches:accumulateEnterLeaveDispatches};


module.exports = EventPropagators;});
__d('SyntheticEvent',["PooledClass","Object.assign","emptyFunction","getEventTarget"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var PooledClass=require('PooledClass');

var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var getEventTarget=require('getEventTarget');





var EventInterface={
type:null, 
target:getEventTarget, 

currentTarget:emptyFunction.thatReturnsNull, 
eventPhase:null, 
bubbles:null, 
cancelable:null, 
timeStamp:function(event){
return event.timeStamp || Date.now();}, 

defaultPrevented:null, 
isTrusted:null};



















function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent){
this.dispatchConfig = dispatchConfig;
this.dispatchMarker = dispatchMarker;
this.nativeEvent = nativeEvent;

var Interface=this.constructor.Interface;
for(var propName in Interface) {
if(!Interface.hasOwnProperty(propName)){
continue;}

var normalize=Interface[propName];
if(normalize){
this[propName] = normalize(nativeEvent);}else 
{
this[propName] = nativeEvent[propName];}}



var defaultPrevented=nativeEvent.defaultPrevented != null?
nativeEvent.defaultPrevented:
nativeEvent.returnValue === false;
if(defaultPrevented){
this.isDefaultPrevented = emptyFunction.thatReturnsTrue;}else 
{
this.isDefaultPrevented = emptyFunction.thatReturnsFalse;}

this.isPropagationStopped = emptyFunction.thatReturnsFalse;}


assign(SyntheticEvent.prototype, {

preventDefault:function(){
this.defaultPrevented = true;
var event=this.nativeEvent;
if(event.preventDefault){
event.preventDefault();}else 
{
event.returnValue = false;}

this.isDefaultPrevented = emptyFunction.thatReturnsTrue;}, 


stopPropagation:function(){
var event=this.nativeEvent;
if(event.stopPropagation){
event.stopPropagation();}else 
{
event.cancelBubble = true;}

this.isPropagationStopped = emptyFunction.thatReturnsTrue;}, 







persist:function(){
this.isPersistent = emptyFunction.thatReturnsTrue;}, 







isPersistent:emptyFunction.thatReturnsFalse, 




destructor:function(){
var Interface=this.constructor.Interface;
for(var propName in Interface) {
this[propName] = null;}

this.dispatchConfig = null;
this.dispatchMarker = null;
this.nativeEvent = null;}});




SyntheticEvent.Interface = EventInterface;







SyntheticEvent.augmentClass = function(Class, Interface){
var Super=this;

var prototype=Object.create(Super.prototype);
assign(prototype, Class.prototype);
Class.prototype = prototype;
Class.prototype.constructor = Class;

Class.Interface = assign({}, Super.Interface, Interface);
Class.augmentClass = Super.augmentClass;

PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);};


PooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);

module.exports = SyntheticEvent;});
__d('getEventTarget',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















function getEventTarget(nativeEvent){
var target=nativeEvent.target || nativeEvent.srcElement || window;


return target.nodeType === 3?target.parentNode:target;}


module.exports = getEventTarget;});
__d('merge',["mergeInto"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";
































var mergeInto=require("mergeInto");








var merge=function(one, two){
var result={};
mergeInto(result, one);
mergeInto(result, two);
return result;};


module.exports = merge;});
__d('mergeInto',["mergeHelpers"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

































var mergeHelpers=require("mergeHelpers");

var checkMergeObjectArg=mergeHelpers.checkMergeObjectArg;
var checkMergeIntoObjectArg=mergeHelpers.checkMergeIntoObjectArg;







function mergeInto(one, two){
checkMergeIntoObjectArg(one);
if(two != null){
checkMergeObjectArg(two);
for(var key in two) {
if(!two.hasOwnProperty(key)){
continue;}

one[key] = two[key];}}}




module.exports = mergeInto;});
__d('mergeHelpers',["invariant","keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';


































var invariant=require('invariant');
var keyMirror=require('keyMirror');





var MAX_MERGE_DEPTH=36;







var isTerminal=function(o){
return typeof o !== 'object' || o === null;};


var mergeHelpers={

MAX_MERGE_DEPTH:MAX_MERGE_DEPTH, 

isTerminal:isTerminal, 







normalizeMergeArg:function(arg){
return arg === undefined || arg === null?{}:arg;}, 










checkMergeArrayArgs:function(one, two){
invariant(
Array.isArray(one) && Array.isArray(two), 
'Tried to merge arrays, instead got %s and %s.', 
one, 
two);}, 







checkMergeObjectArgs:function(one, two){
mergeHelpers.checkMergeObjectArg(one);
mergeHelpers.checkMergeObjectArg(two);}, 





checkMergeObjectArg:function(arg){
invariant(
!isTerminal(arg) && !Array.isArray(arg), 
'Tried to merge an object, instead got %s.', 
arg);}, 






checkMergeIntoObjectArg:function(arg){
invariant(
(!isTerminal(arg) || typeof arg === 'function') && !Array.isArray(arg), 
'Tried to merge into an object, instead got %s.', 
arg);}, 









checkMergeLevel:function(level){
invariant(
level < MAX_MERGE_DEPTH, 
'Maximum deep merge depth exceeded. You may be attempting to merge ' + 
'circular structures in an unsupported way.');}, 








checkArrayStrategy:function(strategy){
invariant(
strategy === undefined || strategy in mergeHelpers.ArrayStrategies, 
'You must provide an array strategy to deep merge functions to ' + 
'instruct the deep merge how to resolve merging two arrays.');}, 










ArrayStrategies:keyMirror({
Clobber:true, 
IndexByIndex:true})};




module.exports = mergeHelpers;});
__d('NodeHandle',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 




























































NodeHandle={



injection:{
injectImplementation:function(Impl){
NodeHandle._Implementation = Impl;}}, 



_Implementation:null, 





getRootNodeID:function(nodeHandle){
return NodeHandle._Implementation.getRootNodeID(nodeHandle);}};



module.exports = NodeHandle;});
__d('ReactComponentEnvironment',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');

var injected=false;

var ReactComponentEnvironment={






unmountIDFromEnvironment:null, 





replaceNodeWithMarkupByID:null, 





processChildrenUpdates:null, 

injection:{
injectEnvironment:function(environment){
invariant(
!injected, 
'ReactCompositeComponent: injectEnvironment() can only be called once.');

ReactComponentEnvironment.unmountIDFromEnvironment = 
environment.unmountIDFromEnvironment;
ReactComponentEnvironment.replaceNodeWithMarkupByID = 
environment.replaceNodeWithMarkupByID;
ReactComponentEnvironment.processChildrenUpdates = 
environment.processChildrenUpdates;
injected = true;}}};





module.exports = ReactComponentEnvironment;});
__d('ReactDefaultBatchingStrategy',["ReactUpdates","Transaction","Object.assign","emptyFunction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactUpdates=require('ReactUpdates');
var Transaction=require('Transaction');

var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');

var RESET_BATCHED_UPDATES={
initialize:emptyFunction, 
close:function(){
ReactDefaultBatchingStrategy.isBatchingUpdates = false;}};



var FLUSH_BATCHED_UPDATES={
initialize:emptyFunction, 
close:ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)};


var TRANSACTION_WRAPPERS=[FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction(){
this.reinitializeTransaction();}


assign(
ReactDefaultBatchingStrategyTransaction.prototype, 
Transaction.Mixin, 
{
getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;}});




var transaction=new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy={
isBatchingUpdates:false, 





batchedUpdates:function(callback, a, b, c, d){
var alreadyBatchingUpdates=ReactDefaultBatchingStrategy.isBatchingUpdates;

ReactDefaultBatchingStrategy.isBatchingUpdates = true;


if(alreadyBatchingUpdates){
callback(a, b, c, d);}else 
{
transaction.perform(callback, null, a, b, c, d);}}};




module.exports = ReactDefaultBatchingStrategy;});
__d('ReactEmptyComponent',["ReactElement","ReactInstanceMap","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');

var invariant=require('invariant');

var component;


var nullComponentIDsRegistry={};

var ReactEmptyComponentInjection={
injectEmptyComponent:function(emptyComponent){
component = ReactElement.createFactory(emptyComponent);}};



var ReactEmptyComponentType=function(){};
ReactEmptyComponentType.prototype.componentDidMount = function(){
var internalInstance=ReactInstanceMap.get(this);




if(!internalInstance){
return;}

registerNullComponentID(internalInstance._rootNodeID);};

ReactEmptyComponentType.prototype.componentWillUnmount = function(){
var internalInstance=ReactInstanceMap.get(this);

if(!internalInstance){
return;}

deregisterNullComponentID(internalInstance._rootNodeID);};

ReactEmptyComponentType.prototype.render = function(){
invariant(
component, 
'Trying to return null from a render, but no null placeholder component ' + 
'was injected.');

return component();};


var emptyElement=ReactElement.createElement(ReactEmptyComponentType);





function registerNullComponentID(id){
nullComponentIDsRegistry[id] = true;}






function deregisterNullComponentID(id){
delete nullComponentIDsRegistry[id];}






function isNullComponentID(id){
return !!nullComponentIDsRegistry[id];}


var ReactEmptyComponent={
emptyElement:emptyElement, 
injection:ReactEmptyComponentInjection, 
isNullComponentID:isNullComponentID};


module.exports = ReactEmptyComponent;});
__d('ReactNativeComponentEnvironment',["ReactNativeDOMIDOperations","ReactNativeReconcileTransaction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeDOMIDOperations=require('ReactNativeDOMIDOperations');
var ReactNativeReconcileTransaction=require('ReactNativeReconcileTransaction');

var ReactNativeComponentEnvironment={

processChildrenUpdates:ReactNativeDOMIDOperations.dangerouslyProcessChildrenUpdates, 

replaceNodeWithMarkupByID:ReactNativeDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID, 






unmountIDFromEnvironment:function(){}, 






clearNode:function(){}, 



ReactReconcileTransaction:ReactNativeReconcileTransaction};


module.exports = ReactNativeComponentEnvironment;});
__d('ReactNativeDOMIDOperations',["ReactNativeTagHandles","ReactMultiChildUpdateTypes","NativeModules","ReactPerf"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactMultiChildUpdateTypes=require('ReactMultiChildUpdateTypes');
var RCTUIManager=require('NativeModules').UIManager;
var ReactPerf=require('ReactPerf');













var dangerouslyProcessChildrenUpdates=function(childrenUpdates, markupList){
if(!childrenUpdates.length){
return;}

var byContainerTag={};


for(var i=0; i < childrenUpdates.length; i++) {
var update=childrenUpdates[i];
var containerTag=ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(update.parentID);
var updates=byContainerTag[containerTag] || (byContainerTag[containerTag] = {});
if(update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING){
(updates.moveFromIndices || (updates.moveFromIndices = [])).push(update.fromIndex);
(updates.moveToIndices || (updates.moveToIndices = [])).push(update.toIndex);}else 
if(update.type === ReactMultiChildUpdateTypes.REMOVE_NODE){
(updates.removeAtIndices || (updates.removeAtIndices = [])).push(update.fromIndex);}else 
if(update.type === ReactMultiChildUpdateTypes.INSERT_MARKUP){
var mountImage=markupList[update.markupIndex];
var tag=mountImage.tag;
var rootNodeID=mountImage.rootNodeID;
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(rootNodeID, tag);
(updates.addAtIndices || (updates.addAtIndices = [])).push(update.toIndex);
(updates.addChildTags || (updates.addChildTags = [])).push(tag);}}





for(var updateParentTagString in byContainerTag) {
var updateParentTagNumber=+updateParentTagString;
var childUpdatesToSend=byContainerTag[updateParentTagNumber];
RCTUIManager.manageChildren(
updateParentTagNumber, 
childUpdatesToSend.moveFromIndices, 
childUpdatesToSend.moveToIndices, 
childUpdatesToSend.addChildTags, 
childUpdatesToSend.addAtIndices, 
childUpdatesToSend.removeAtIndices);}};








var ReactNativeDOMIDOperations={
dangerouslyProcessChildrenUpdates:ReactPerf.measure(

'ReactDOMIDOperations', 
'dangerouslyProcessChildrenUpdates', 
dangerouslyProcessChildrenUpdates), 








dangerouslyReplaceNodeWithMarkupByID:ReactPerf.measure(
'ReactDOMIDOperations', 
'dangerouslyReplaceNodeWithMarkupByID', 
function(id, mountImage){
var oldTag=ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(id);
RCTUIManager.replaceExistingNonRootView(oldTag, mountImage.tag);
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(id, mountImage.tag);})};




module.exports = ReactNativeDOMIDOperations;});
__d('ReactNativeTagHandles',["invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');
var warning=require('warning');














var INITIAL_TAG_COUNT=1;
var ReactNativeTagHandles={
tagsStartAt:INITIAL_TAG_COUNT, 
tagCount:INITIAL_TAG_COUNT, 

allocateTag:function(){

while(this.reactTagIsNativeTopRootID(ReactNativeTagHandles.tagCount)) {
ReactNativeTagHandles.tagCount++;}

var tag=ReactNativeTagHandles.tagCount;
ReactNativeTagHandles.tagCount++;
return tag;}, 











associateRootNodeIDWithMountedNodeHandle:function(
rootNodeID, 
tag)
{
warning(rootNodeID && tag, 'Root node or tag is null when associating');
if(rootNodeID && tag){
ReactNativeTagHandles.tagToRootNodeID[tag] = rootNodeID;
ReactNativeTagHandles.rootNodeIDToTag[rootNodeID] = tag;}}, 



allocateRootNodeIDForTag:function(tag){
invariant(
this.reactTagIsNativeTopRootID(tag), 
'Expect a native root tag, instead got ', tag);

return '.r[' + tag + ']{TOP_LEVEL}';}, 


reactTagIsNativeTopRootID:function(reactTag){

return reactTag % 10 === 1;}, 














mostRecentMountedNodeHandleForRootNodeID:function(
rootNodeID)
{
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];}, 


tagToRootNodeID:[], 

rootNodeIDToTag:{}};


module.exports = ReactNativeTagHandles;});
__d('ReactMultiChildUpdateTypes',["keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var keyMirror=require('keyMirror');









var ReactMultiChildUpdateTypes=keyMirror({
INSERT_MARKUP:null, 
MOVE_EXISTING:null, 
REMOVE_NODE:null, 
TEXT_CONTENT:null});


module.exports = ReactMultiChildUpdateTypes;});
__d('ReactNativeReconcileTransaction',["CallbackQueue","PooledClass","Transaction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var CallbackQueue=require('CallbackQueue');
var PooledClass=require('PooledClass');
var Transaction=require('Transaction');





var ON_DOM_READY_QUEUEING={



initialize:function(){
this.reactMountReady.reset();}, 





close:function(){
this.reactMountReady.notifyAll();}};








var TRANSACTION_WRAPPERS=[ON_DOM_READY_QUEUEING];















function ReactNativeReconcileTransaction(){
this.reinitializeTransaction();
this.reactMountReady = CallbackQueue.getPooled(null);}


var Mixin={







getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;}, 






getReactMountReady:function(){
return this.reactMountReady;}, 






destructor:function(){
CallbackQueue.release(this.reactMountReady);
this.reactMountReady = null;}};



Object.assign(
ReactNativeReconcileTransaction.prototype, 
Transaction.Mixin, 
ReactNativeReconcileTransaction, 
Mixin);


PooledClass.addPoolingTo(ReactNativeReconcileTransaction);

module.exports = ReactNativeReconcileTransaction;});
__d('ReactNativeGlobalInteractionHandler',["InteractionManager"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var InteractionManager=require('InteractionManager');



var interactionHandle=null;

var ReactNativeGlobalInteractionHandler={
onChange:function(numberActiveTouches){
if(numberActiveTouches === 0){
if(interactionHandle){
InteractionManager.clearInteractionHandle(interactionHandle);
interactionHandle = null;}}else 

if(!interactionHandle){
interactionHandle = InteractionManager.createInteractionHandle();}}};




module.exports = ReactNativeGlobalInteractionHandler;});
__d('InteractionManager',["ErrorUtils","EventEmitter","Set","invariant","keyMirror","setImmediate"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ErrorUtils=require('ErrorUtils');
var EventEmitter=require('EventEmitter');
var Set=require('Set');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var setImmediate=require('setImmediate');






var DEV_TIMEOUT=2000;

var _emitter=new EventEmitter();
var _interactionSet=new Set();
var _addInteractionSet=new Set();
var _deleteInteractionSet=new Set();
var _nextUpdateHandle=null;
var _queue=[];
var _inc=0;




































var InteractionManager={
Events:keyMirror({
interactionStart:true, 
interactionComplete:true}), 





runAfterInteractions:function(callback){
invariant(
typeof callback === 'function', 
'Must specify a function to schedule.');

scheduleUpdate();
_queue.push(callback);}, 





createInteractionHandle:function(){
scheduleUpdate();
var handle=++_inc;
_addInteractionSet.add(handle);
if(__DEV__){

var error=new Error(
'InteractionManager: interaction handle not cleared within ' + 
DEV_TIMEOUT + ' ms.');

setDevTimeoutHandle(handle, error, DEV_TIMEOUT);}

return handle;}, 





clearInteractionHandle:function(handle){
invariant(
!!handle, 
'Must provide a handle to clear.');

scheduleUpdate();
_addInteractionSet.delete(handle);
_deleteInteractionSet.add(handle);}, 


addListener:_emitter.addListener.bind(_emitter)};





function scheduleUpdate(){
if(!_nextUpdateHandle){
_nextUpdateHandle = setImmediate(processUpdate);}}






function processUpdate(){
_nextUpdateHandle = null;

var interactionCount=_interactionSet.size;
_addInteractionSet.forEach(function(handle){return (
_interactionSet.add(handle));});

_deleteInteractionSet.forEach(function(handle){return (
_interactionSet.delete(handle));});

var nextInteractionCount=_interactionSet.size;

if(interactionCount !== 0 && nextInteractionCount === 0){

_emitter.emit(InteractionManager.Events.interactionComplete);}else 
if(interactionCount === 0 && nextInteractionCount !== 0){

_emitter.emit(InteractionManager.Events.interactionStart);}



if(nextInteractionCount === 0){
var queue=_queue;
_queue = [];
queue.forEach(function(callback){
ErrorUtils.applyWithGuard(callback);});}



_addInteractionSet.clear();
_deleteInteractionSet.clear();}





function setDevTimeoutHandle(
handle, 
error, 
timeout)
{
setTimeout(function(){
if(_interactionSet.has(handle)){
console.warn(error.message + '\n' + error.stack);}}, 

timeout);}


module.exports = InteractionManager;});
__d('Set',["Map","toIterator","_shouldPolyfillES6Collection"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}



















var Map=require('Map');
var toIterator=require('toIterator');
var _shouldPolyfillES6Collection=require('_shouldPolyfillES6Collection');

module.exports = (function(global, undefined){





if(!_shouldPolyfillES6Collection('Set')){
return global.Set;}var 











































Set=(function(){










function Set(iterable){_classCallCheck(this, Set);
if(this == null || 
typeof this !== 'object' && typeof this !== 'function'){
throw new TypeError('Wrong set object type.');}


initSet(this);

if(iterable != null){
var it=toIterator(iterable);
var next;
while(!(next = it.next()).done) {
this.add(next.value);}}}_createClass(Set, [{key:'add', value:












function add(value){
this._map.set(value, value);
this.size = this._map.size;
return this;}}, {key:'clear', value:







function clear(){
initSet(this);}}, {key:'delete', value:











function _delete(value){
var ret=this._map.delete(value);
this.size = this._map.size;
return ret;}}, {key:'entries', value:







function entries(){
return this._map.entries();}}, {key:'forEach', value:









function forEach(callback){
var thisArg=arguments[1];
var it=this._map.keys();
var next;
while(!(next = it.next()).done) {
callback.call(thisArg, next.value, next.value, this);}}}, {key:'has', value:











function has(value){
return this._map.has(value);}}, {key:'values', value:







function values(){
return this._map.values();}}]);return Set;})();




Set.prototype[toIterator.ITERATOR_SYMBOL] = Set.prototype.values;


Set.prototype.keys = Set.prototype.values;

function initSet(set){
set._map = new Map();
set.size = set._map.size;}


return Set;})(
Function('return this')());});
__d('Map',["guid","isNode","toIterator","_shouldPolyfillES6Collection"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}



















var guid=require('guid');
var isNode=require('isNode');
var toIterator=require('toIterator');
var _shouldPolyfillES6Collection=require('_shouldPolyfillES6Collection');

module.exports = (function(global, undefined){




if(!_shouldPolyfillES6Collection('Map')){
return global.Map;}

























































var KIND_KEY='key';
var KIND_VALUE='value';
var KIND_KEY_VALUE='key+value';



var KEY_PREFIX='$map_';



var SECRET_SIZE_PROP;
if(__DEV__){
SECRET_SIZE_PROP = '$size' + guid();}



var OLD_IE_HASH_PREFIX='IE_HASH_';var 

Map=(function(){










function Map(iterable){_classCallCheck(this, Map);
if(!isObject(this)){
throw new TypeError('Wrong map object type.');}


initMap(this);

if(iterable != null){
var it=toIterator(iterable);
var next;
while(!(next = it.next()).done) {
if(!isObject(next.value)){
throw new TypeError('Expected iterable items to be pair objects.');}

this.set(next.value[0], next.value[1]);}}}_createClass(Map, [{key:'clear', value:








function clear(){
initMap(this);}}, {key:'has', value:









function has(key){
var index=getIndex(this, key);
return !!(index != null && this._mapData[index]);}}, {key:'set', value:










function set(key, value){
var index=getIndex(this, key);

if(index != null && this._mapData[index]){
this._mapData[index][1] = value;}else 
{
index = this._mapData.push([
key, 
value]) - 
1;
setIndex(this, key, index);
if(__DEV__){
this[SECRET_SIZE_PROP] += 1;}else 
{
this.size += 1;}}



return this;}}, {key:'get', value:









function get(key){
var index=getIndex(this, key);
if(index == null){
return undefined;}else 
{
return this._mapData[index][1];}}}, {key:'delete', value:











function _delete(key){
var index=getIndex(this, key);
if(index != null && this._mapData[index]){
setIndex(this, key, undefined);
this._mapData[index] = undefined;
if(__DEV__){
this[SECRET_SIZE_PROP] -= 1;}else 
{
this.size -= 1;}

return true;}else 
{
return false;}}}, {key:'entries', value:










function entries(){
return new MapIterator(this, KIND_KEY_VALUE);}}, {key:'keys', value:








function keys(){
return new MapIterator(this, KIND_KEY);}}, {key:'values', value:








function values(){
return new MapIterator(this, KIND_VALUE);}}, {key:'forEach', value:











function forEach(callback, thisArg){
if(typeof callback !== 'function'){
throw new TypeError('Callback must be callable.');}


var boundCallback=callback.bind(thisArg || undefined);
var mapData=this._mapData;




for(var i=0; i < mapData.length; i++) {
var entry=mapData[i];
if(entry != null){
boundCallback(entry[1], entry[0], this);}}}}]);return Map;})();






Map.prototype[toIterator.ITERATOR_SYMBOL] = Map.prototype.entries;var 

MapIterator=(function(){









function MapIterator(map, kind){_classCallCheck(this, MapIterator);
if(!(isObject(map) && map['_mapData'])){
throw new TypeError('Object is not a map.');}


if([KIND_KEY, KIND_KEY_VALUE, KIND_VALUE].indexOf(kind) === -1){
throw new Error('Invalid iteration kind.');}


this._map = map;
this._nextIndex = 0;
this._kind = kind;}_createClass(MapIterator, [{key:'next', value:








function next(){
if(!this instanceof Map){
throw new TypeError('Expected to be called on a MapIterator.');}


var map=this._map;
var index=this._nextIndex;
var kind=this._kind;

if(map == null){
return createIterResultObject(undefined, true);}


var entries=map['_mapData'];

while(index < entries.length) {
var record=entries[index];

index += 1;
this._nextIndex = index;

if(record){
if(kind === KIND_KEY){
return createIterResultObject(record[0], false);}else 
if(kind === KIND_VALUE){
return createIterResultObject(record[1], false);}else 
if(kind){
return createIterResultObject(record, false);}}}




this._map = undefined;

return createIterResultObject(undefined, true);}}]);return MapIterator;})();






MapIterator.prototype[toIterator.ITERATOR_SYMBOL] = function(){
return this;};













function getIndex(map, key){
if(isObject(key)){
var hash=getHash(key);
return map._objectIndex[hash];}else 
{
var prefixedKey=KEY_PREFIX + key;
if(typeof key === 'string'){
return map._stringIndex[prefixedKey];}else 
{
return map._otherIndex[prefixedKey];}}}










function setIndex(map, key, index){
var shouldDelete=index == null;

if(isObject(key)){
var hash=getHash(key);
if(shouldDelete){
delete map._objectIndex[hash];}else 
{
map._objectIndex[hash] = index;}}else 

{
var prefixedKey=KEY_PREFIX + key;
if(typeof key === 'string'){
if(shouldDelete){
delete map._stringIndex[prefixedKey];}else 
{
map._stringIndex[prefixedKey] = index;}}else 

{
if(shouldDelete){
delete map._otherIndex[prefixedKey];}else 
{
map._otherIndex[prefixedKey] = index;}}}}










function initMap(map){






map._mapData = [];







map._objectIndex = {};


map._stringIndex = {};


map._otherIndex = {};







if(__DEV__){
if(isES5){



if(map.hasOwnProperty(SECRET_SIZE_PROP)){
map[SECRET_SIZE_PROP] = 0;}else 
{
Object.defineProperty(map, SECRET_SIZE_PROP, {
value:0, 
writable:true});

Object.defineProperty(map, 'size', {
set:function(v){
console.error(
'PLEASE FIX ME: You are changing the map size property which ' + 
'should not be writable and will break in production.');

throw new Error('The map size property is not writable.');}, 

get:function(){return map[SECRET_SIZE_PROP];}});}




return;}}





map.size = 0;}








function isObject(o){
return o != null && (typeof o === 'object' || typeof o === 'function');}









function createIterResultObject(value, done){
return {value:value, done:done};}



var isES5=(function(){
try{
Object.defineProperty({}, 'x', {});
return true;}
catch(e) {
return false;}})();









function isExtensible(o){
if(!isES5){
return true;}else 
{
return Object.isExtensible(o);}}











function getIENodeHash(node){
var uniqueID;
switch(node.nodeType){
case 1:
uniqueID = node.uniqueID;
break;
case 9:
uniqueID = node.documentElement.uniqueID;
break;
default:
return null;}


if(uniqueID){
return OLD_IE_HASH_PREFIX + uniqueID;}else 
{
return null;}}



var getHash=(function(){
var propIsEnumerable=Object.prototype.propertyIsEnumerable;
var hashProperty=guid();
var hashCounter=0;







return function getHash(o){
if(o[hashProperty]){
return o[hashProperty];}else 
if(!isES5 && 
o.propertyIsEnumerable && 
o.propertyIsEnumerable[hashProperty]){
return o.propertyIsEnumerable[hashProperty];}else 
if(!isES5 && 
isNode(o) && 
getIENodeHash(o)){
return getIENodeHash(o);}else 
if(!isES5 && o[hashProperty]){
return o[hashProperty];}


if(isExtensible(o)){
hashCounter += 1;
if(isES5){
Object.defineProperty(o, hashProperty, {
enumerable:false, 
writable:false, 
configurable:false, 
value:hashCounter});}else 

if(o.propertyIsEnumerable){




o.propertyIsEnumerable = function(){
return propIsEnumerable.apply(this, arguments);};

o.propertyIsEnumerable[hashProperty] = hashCounter;}else 
if(isNode(o)){




o[hashProperty] = hashCounter;}else 
{
throw new Error('Unable to set a non-enumerable property on object.');}

return hashCounter;}else 
{
throw new Error('Non-extensible objects are not allowed as keys.');}};})();




return Map;})(
Function('return this')());});
__d('guid',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 

























guid(){
return 'f' + (Math.random() * (1 << 30)).toString(16).replace('.', '');}


module.exports = guid;});
__d('isNode',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 















isNode(object){
return !!(object && (
typeof Node === 'function'?object instanceof Node:
typeof object === 'object' && 
typeof object.nodeType === 'number' && 
typeof object.nodeName === 'string'));}



module.exports = isNode;});
__d('toIterator',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}






























var KIND_KEY='key';
var KIND_VALUE='value';
var KIND_KEY_VAL='key+value';

var ITERATOR_SYMBOL=typeof Symbol === 'function'?
Symbol.iterator:
'@@iterator';

var toIterator=(function(){
if(!(Array.prototype[ITERATOR_SYMBOL] && 
String.prototype[ITERATOR_SYMBOL])){

return (function(){var 
ArrayIterator=(function(){

function ArrayIterator(array, kind){_classCallCheck(this, ArrayIterator);
if(!Array.isArray(array)){
throw new TypeError('Object is not an Array');}

this._iteratedObject = array;
this._kind = kind;
this._nextIndex = 0;}_createClass(ArrayIterator, [{key:'next', value:



function next(){
if(!this instanceof ArrayIterator){
throw new TypeError('Object is not an ArrayIterator');}


if(this._iteratedObject == null){
return createIterResultObject(undefined, true);}


var array=this._iteratedObject;
var len=this._iteratedObject.length;
var index=this._nextIndex;
var kind=this._kind;

if(index >= len){
this._iteratedObject = undefined;
return createIterResultObject(undefined, true);}


this._nextIndex = index + 1;

if(kind === KIND_KEY){
return createIterResultObject(index, false);}else 
if(kind === KIND_VALUE){
return createIterResultObject(array[index], false);}else 
if(kind === KIND_KEY_VAL){
return createIterResultObject([index, array[index]], false);}}}, {key:




'@@iterator', value:function iterator(){
return this;}}]);return ArrayIterator;})();var 



StringIterator=(function(){

function StringIterator(string){_classCallCheck(this, StringIterator);
if(typeof string !== 'string'){
throw new TypeError('Object is not a string');}

this._iteratedString = string;
this._nextIndex = 0;}_createClass(StringIterator, [{key:'next', value:



function next(){
if(!this instanceof StringIterator){
throw new TypeError('Object is not a StringIterator');}


if(this._iteratedString == null){
return createIterResultObject(undefined, true);}


var index=this._nextIndex;
var s=this._iteratedString;
var len=s.length;

if(index >= len){
this._iteratedString = undefined;
return createIterResultObject(undefined, true);}


var ret;
var first=s.charCodeAt(index);

if(first < 55296 || first > 56319 || index + 1 === len){
ret = s[index];}else 
{
var second=s.charCodeAt(index + 1);
if(second < 56320 || second > 57343){
ret = s[index];}else 
{
ret = s[index] + s[index + 1];}}



this._nextIndex = index + ret.length;

return createIterResultObject(ret, false);}}, {key:



'@@iterator', value:function iterator(){
return this;}}]);return StringIterator;})();




function createIterResultObject(value, done){
return {value:value, done:done};}


return function(object, kind){
if(typeof object === 'string'){
return new StringIterator(object);}else 
if(Array.isArray(object)){
return new ArrayIterator(object, kind || KIND_VALUE);}else 
{
return object[ITERATOR_SYMBOL]();}};})();}else 



{
return function(object){
return object[ITERATOR_SYMBOL]();};}})();








Object.assign(toIterator, {
KIND_KEY:KIND_KEY, 
KIND_VALUE:KIND_VALUE, 
KIND_KEY_VAL:KIND_KEY_VAL, 
ITERATOR_SYMBOL:ITERATOR_SYMBOL});


module.exports = toIterator;});
__d('_shouldPolyfillES6Collection',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}

























function shouldPolyfillES6Collection(collectionName){
var Collection=global[collectionName];
if(Collection == null){
return true;}


var proto=Collection.prototype;


return Collection == null || 
typeof Collection !== 'function' || 
typeof proto.clear !== 'function' || 
new Collection().size !== 0 || 
typeof proto.keys !== 'function' || 
typeof proto.forEach !== 'function' || 
isCallableWithoutNew(Collection) || 
!supportsSubclassing(Collection);}







function supportsSubclassing(Collection){var 
SubCollection=(function(_Collection){function SubCollection(){_classCallCheck(this, SubCollection);if(_Collection != null){_Collection.apply(this, arguments);}}_inherits(SubCollection, _Collection);return SubCollection;})(Collection);
try{
var s=new SubCollection([]);


s.size;
return s instanceof Collection;}
catch(e) {
return false;}}








function isCallableWithoutNew(Collection){
try{
Collection();}
catch(e) {
return false;}

return true;}


module.exports = shouldPolyfillES6Collection;});
__d('ReactNativeGlobalResponderHandler',["NativeModules","ReactNativeTagHandles"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTUIManager=require('NativeModules').UIManager;
var ReactNativeTagHandles=require('ReactNativeTagHandles');

var ReactNativeGlobalResponderHandler={
onChange:function(from, to){
if(to !== null){
RCTUIManager.setJSResponder(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(to));}else 

{
RCTUIManager.clearJSResponder();}}};




module.exports = ReactNativeGlobalResponderHandler;});
__d('ReactNativeMount',["NativeModules","ReactNativeTagHandles","ReactPerf","ReactReconciler","ReactUpdateQueue","ReactUpdates","emptyObject","instantiateReactComponent","shouldUpdateReactComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTUIManager=require('NativeModules').UIManager;

var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');
var ReactUpdates=require('ReactUpdates');

var emptyObject=require('emptyObject');
var instantiateReactComponent=require('instantiateReactComponent');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');

function instanceNumberToChildRootID(rootNodeID, instanceNumber){
return rootNodeID + '[' + instanceNumber + ']';}










function mountComponentIntoNode(
componentInstance, 
rootID, 
container, 
transaction){
var markup=ReactReconciler.mountComponent(
componentInstance, rootID, transaction, emptyObject);

componentInstance._isTopLevel = true;
ReactNativeMount._mountImageIntoNode(markup, container);}









function batchedMountComponentIntoNode(
componentInstance, 
rootID, 
container){
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
transaction.perform(
mountComponentIntoNode, 
null, 
componentInstance, 
rootID, 
container, 
transaction);

ReactUpdates.ReactReconcileTransaction.release(transaction);}






var ReactNativeMount={
instanceCount:0, 

_instancesByContainerID:{}, 





renderComponent:function(
nextElement, 
containerTag, 
callback)
{
var topRootNodeID=ReactNativeTagHandles.tagToRootNodeID[containerTag];
if(topRootNodeID){
var prevComponent=ReactNativeMount._instancesByContainerID[topRootNodeID];
if(prevComponent){
var prevElement=prevComponent._currentElement;
if(shouldUpdateReactComponent(prevElement, nextElement)){
ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
if(callback){
ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);}

return prevComponent;}else 
{
ReactNativeMount.unmountComponentAtNode(containerTag);}}}




if(!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)){
console.error('You cannot render into anything but a top root');
return;}


var topRootNodeID=ReactNativeTagHandles.allocateRootNodeIDForTag(containerTag);
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
topRootNodeID, 
containerTag);


var instance=instantiateReactComponent(nextElement);
ReactNativeMount._instancesByContainerID[topRootNodeID] = instance;

var childRootNodeID=instanceNumberToChildRootID(
topRootNodeID, 
ReactNativeMount.instanceCount++);






ReactUpdates.batchedUpdates(
batchedMountComponentIntoNode, 
instance, 
childRootNodeID, 
topRootNodeID);

var component=instance.getPublicInstance();
if(callback){
callback.call(component);}

return component;}, 






_mountImageIntoNode:ReactPerf.measure(

'ReactComponentBrowserEnvironment', 
'mountImageIntoNode', 
function(mountImage, containerID){


ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
mountImage.rootNodeID, 
mountImage.tag);

var addChildTags=[mountImage.tag];
var addAtIndices=[0];
RCTUIManager.manageChildren(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(containerID), 
null, 
null, 
addChildTags, 
addAtIndices, 
null);}), 












unmountComponentAtNodeAndRemoveContainer:function(
containerTag)
{
ReactNativeMount.unmountComponentAtNode(containerTag);

RCTUIManager.removeRootView(containerTag);}, 







unmountComponentAtNode:function(containerTag){
if(!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)){
console.error('You cannot render into anything but a top root');
return false;}


var containerID=ReactNativeTagHandles.tagToRootNodeID[containerTag];
var instance=ReactNativeMount._instancesByContainerID[containerID];
if(!instance){
return false;}

ReactNativeMount.unmountComponentFromNode(instance, containerID);
delete ReactNativeMount._instancesByContainerID[containerID];
return true;}, 











unmountComponentFromNode:function(
instance, 
containerID)
{

ReactReconciler.unmountComponent(instance);
var containerTag=
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(containerID);
RCTUIManager.removeSubviewsFromContainerWithID(containerTag);}, 


getNode:function(id){
return id;}};



ReactNativeMount.renderComponent = ReactPerf.measure(
'ReactMount', 
'_renderNewRootComponent', 
ReactNativeMount.renderComponent);


module.exports = ReactNativeMount;});
__d('instantiateReactComponent',["ReactCompositeComponent","ReactEmptyComponent","ReactNativeComponent","Object.assign","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactCompositeComponent=require('ReactCompositeComponent');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactNativeComponent=require('ReactNativeComponent');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');


var ReactCompositeComponentWrapper=function(){};
assign(
ReactCompositeComponentWrapper.prototype, 
ReactCompositeComponent.Mixin, 
{
_instantiateReactComponent:instantiateReactComponent});










function isInternalComponentType(type){
return (
typeof type === 'function' && 
typeof type.prototype !== 'undefined' && 
typeof type.prototype.mountComponent === 'function' && 
typeof type.prototype.receiveComponent === 'function');}











function instantiateReactComponent(node, parentCompositeType){
var instance;

if(node === null || node === false){
node = ReactEmptyComponent.emptyElement;}


if(typeof node === 'object'){
var element=node;
if(__DEV__){
warning(
element && (typeof element.type === 'function' || 
typeof element.type === 'string'), 
'Only functions or strings can be mounted as React components.');}




if(parentCompositeType === element.type && 
typeof element.type === 'string'){

instance = ReactNativeComponent.createInternalComponent(element);}else 


if(isInternalComponentType(element.type)){



instance = new element.type(element);}else 
{
instance = new ReactCompositeComponentWrapper();}}else 

if(typeof node === 'string' || typeof node === 'number'){
instance = ReactNativeComponent.createInstanceForText(node);}else 
{
invariant(
false, 
'Encountered invalid React node of type %s', 
typeof node);}



if(__DEV__){
warning(
typeof instance.construct === 'function' && 
typeof instance.mountComponent === 'function' && 
typeof instance.receiveComponent === 'function' && 
typeof instance.unmountComponent === 'function', 
'Only React Components can be mounted.');}




instance.construct(node);




instance._mountIndex = 0;
instance._mountImage = null;

if(__DEV__){
instance._isOwnerNecessary = false;
instance._warnedAboutRefsInRender = false;}




if(__DEV__){
if(Object.preventExtensions){
Object.preventExtensions(instance);}}



return instance;}


module.exports = instantiateReactComponent;});
__d('ReactCompositeComponent',["ReactComponentEnvironment","ReactContext","ReactCurrentOwner","ReactElement","ReactElementValidator","ReactInstanceMap","ReactLifeCycle","ReactNativeComponent","ReactPerf","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactReconciler","ReactUpdates","Object.assign","emptyObject","invariant","shouldUpdateReactComponent","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactContext=require('ReactContext');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactElementValidator=require('ReactElementValidator');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactLifeCycle=require('ReactLifeCycle');
var ReactNativeComponent=require('ReactNativeComponent');
var ReactPerf=require('ReactPerf');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactReconciler=require('ReactReconciler');
var ReactUpdates=require('ReactUpdates');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var invariant=require('invariant');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var warning=require('warning');

function getDeclarationErrorAddendum(component){
var owner=component._currentElement._owner || null;
if(owner){
var name=owner.getName();
if(name){
return ' Check the render method of `' + name + '`.';}}


return '';}



































var nextMountID=1;




var ReactCompositeComponentMixin={








construct:function(element){
this._currentElement = element;
this._rootNodeID = null;
this._instance = null;


this._pendingElement = null;
this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;

this._renderedComponent = null;

this._context = null;
this._mountOrder = 0;
this._isTopLevel = false;


this._pendingCallbacks = null;}, 











mountComponent:function(rootID, transaction, context){
this._context = context;
this._mountOrder = nextMountID++;
this._rootNodeID = rootID;

var publicProps=this._processProps(this._currentElement.props);
var publicContext=this._processContext(this._currentElement._context);

var Component=ReactNativeComponent.getComponentClassForElement(
this._currentElement);



var inst=new Component(publicProps, publicContext);

if(__DEV__){


warning(
inst.render != null, 
'%s(...): No `render` method found on the returned component ' + 
'instance: you may have forgotten to define `render` in your ' + 
'component or you may have accidentally tried to render an element ' + 
'whose type is a function that isn\'t a React component.', 
Component.displayName || Component.name || 'Component');}





inst.props = publicProps;
inst.context = publicContext;
inst.refs = emptyObject;

this._instance = inst;


ReactInstanceMap.set(inst, this);

if(__DEV__){
this._warnIfContextsDiffer(this._currentElement._context, context);}


if(__DEV__){



warning(
!inst.getInitialState || 
inst.getInitialState.isReactClassApproved, 
'getInitialState was defined on %s, a plain JavaScript class. ' + 
'This is only supported for classes created using React.createClass. ' + 
'Did you mean to define a state property instead?', 
this.getName() || 'a component');

warning(
!inst.getDefaultProps || 
inst.getDefaultProps.isReactClassApproved, 
'getDefaultProps was defined on %s, a plain JavaScript class. ' + 
'This is only supported for classes created using React.createClass. ' + 
'Use a static property to define defaultProps instead.', 
this.getName() || 'a component');

warning(
!inst.propTypes, 
'propTypes was defined as an instance property on %s. Use a static ' + 
'property to define propTypes instead.', 
this.getName() || 'a component');

warning(
!inst.contextTypes, 
'contextTypes was defined as an instance property on %s. Use a ' + 
'static property to define contextTypes instead.', 
this.getName() || 'a component');

warning(
typeof inst.componentShouldUpdate !== 'function', 
'%s has a method called ' + 
'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 
'The name is phrased as a question because the function is ' + 
'expected to return a value.', 
this.getName() || 'A component');}



var initialState=inst.state;
if(initialState === undefined){
inst.state = initialState = null;}

invariant(
typeof initialState === 'object' && !Array.isArray(initialState), 
'%s.state: must be set to an object or null', 
this.getName() || 'ReactCompositeComponent');


this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;

var renderedElement;

var previouslyMounting=ReactLifeCycle.currentlyMountingInstance;
ReactLifeCycle.currentlyMountingInstance = this;
try{
if(inst.componentWillMount){
inst.componentWillMount();


if(this._pendingStateQueue){
inst.state = this._processPendingState(inst.props, inst.context);}}



renderedElement = this._renderValidatedComponent();}finally 
{
ReactLifeCycle.currentlyMountingInstance = previouslyMounting;}


this._renderedComponent = this._instantiateReactComponent(
renderedElement, 
this._currentElement.type);


var markup=ReactReconciler.mountComponent(
this._renderedComponent, 
rootID, 
transaction, 
this._processChildContext(context));

if(inst.componentDidMount){
transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);}


return markup;}, 








unmountComponent:function(){
var inst=this._instance;

if(inst.componentWillUnmount){
var previouslyUnmounting=ReactLifeCycle.currentlyUnmountingInstance;
ReactLifeCycle.currentlyUnmountingInstance = this;
try{
inst.componentWillUnmount();}finally 
{
ReactLifeCycle.currentlyUnmountingInstance = previouslyUnmounting;}}



ReactReconciler.unmountComponent(this._renderedComponent);
this._renderedComponent = null;


this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;
this._pendingCallbacks = null;
this._pendingElement = null;



this._context = null;
this._rootNodeID = null;




ReactInstanceMap.remove(inst);}, 
















_setPropsInternal:function(partialProps, callback){


var element=this._pendingElement || this._currentElement;
this._pendingElement = ReactElement.cloneAndReplaceProps(
element, 
assign({}, element.props, partialProps));

ReactUpdates.enqueueUpdate(this, callback);}, 










_maskContext:function(context){
var maskedContext=null;


if(typeof this._currentElement.type === 'string'){
return emptyObject;}

var contextTypes=this._currentElement.type.contextTypes;
if(!contextTypes){
return emptyObject;}

maskedContext = {};
for(var contextName in contextTypes) {
maskedContext[contextName] = context[contextName];}

return maskedContext;}, 










_processContext:function(context){
var maskedContext=this._maskContext(context);
if(__DEV__){
var Component=ReactNativeComponent.getComponentClassForElement(
this._currentElement);

if(Component.contextTypes){
this._checkPropTypes(
Component.contextTypes, 
maskedContext, 
ReactPropTypeLocations.context);}}



return maskedContext;}, 







_processChildContext:function(currentContext){
var inst=this._instance;
var childContext=inst.getChildContext && inst.getChildContext();
if(childContext){
invariant(
typeof inst.constructor.childContextTypes === 'object', 
'%s.getChildContext(): childContextTypes must be defined in order to ' + 
'use getChildContext().', 
this.getName() || 'ReactCompositeComponent');

if(__DEV__){
this._checkPropTypes(
inst.constructor.childContextTypes, 
childContext, 
ReactPropTypeLocations.childContext);}


for(var name in childContext) {
invariant(
name in inst.constructor.childContextTypes, 
'%s.getChildContext(): key "%s" is not defined in childContextTypes.', 
this.getName() || 'ReactCompositeComponent', 
name);}


return assign({}, currentContext, childContext);}

return currentContext;}, 











_processProps:function(newProps){
if(__DEV__){
var Component=ReactNativeComponent.getComponentClassForElement(
this._currentElement);

if(Component.propTypes){
this._checkPropTypes(
Component.propTypes, 
newProps, 
ReactPropTypeLocations.prop);}}



return newProps;}, 










_checkPropTypes:function(propTypes, props, location){


var componentName=this.getName();
for(var propName in propTypes) {
if(propTypes.hasOwnProperty(propName)){
var error;
try{


invariant(
typeof propTypes[propName] === 'function', 
'%s: %s type `%s` is invalid; it must be a function, usually ' + 
'from React.PropTypes.', 
componentName || 'React class', 
ReactPropTypeLocationNames[location], 
propName);

error = propTypes[propName](props, propName, componentName, location);}
catch(ex) {
error = ex;}

if(error instanceof Error){



var addendum=getDeclarationErrorAddendum(this);

if(location === ReactPropTypeLocations.prop){

warning(
false, 
'Failed Composite propType: %s%s', 
error.message, 
addendum);}else 

{
warning(
false, 
'Failed Context Types: %s%s', 
error.message, 
addendum);}}}}}, 







receiveComponent:function(nextElement, transaction, nextContext){
var prevElement=this._currentElement;
var prevContext=this._context;

this._pendingElement = null;

this.updateComponent(
transaction, 
prevElement, 
nextElement, 
prevContext, 
nextContext);}, 










performUpdateIfNecessary:function(transaction){
if(this._pendingElement != null){
ReactReconciler.receiveComponent(
this, 
this._pendingElement || this._currentElement, 
transaction, 
this._context);}



if(this._pendingStateQueue !== null || this._pendingForceUpdate){
if(__DEV__){
ReactElementValidator.checkAndWarnForMutatedProps(
this._currentElement);}



this.updateComponent(
transaction, 
this._currentElement, 
this._currentElement, 
this._context, 
this._context);}}, 








_warnIfContextsDiffer:function(ownerBasedContext, parentBasedContext){
ownerBasedContext = this._maskContext(ownerBasedContext);
parentBasedContext = this._maskContext(parentBasedContext);
var parentKeys=Object.keys(parentBasedContext).sort();
var displayName=this.getName() || 'ReactCompositeComponent';
for(var i=0; i < parentKeys.length; i++) {
var key=parentKeys[i];
warning(
ownerBasedContext[key] === parentBasedContext[key], 
'owner-based and parent-based contexts differ ' + 
'(values: `%s` vs `%s`) for key (%s) while mounting %s ' + 
'(see: http://fb.me/react-context-by-parent)', 
ownerBasedContext[key], 
parentBasedContext[key], 
key, 
displayName);}}, 



















updateComponent:function(
transaction, 
prevParentElement, 
nextParentElement, 
prevUnmaskedContext, 
nextUnmaskedContext)
{
var inst=this._instance;

var nextContext=inst.context;
var nextProps=inst.props;


if(prevParentElement !== nextParentElement){
nextContext = this._processContext(nextParentElement._context);
nextProps = this._processProps(nextParentElement.props);

if(__DEV__){
if(nextUnmaskedContext != null){
this._warnIfContextsDiffer(
nextParentElement._context, 
nextUnmaskedContext);}}








if(inst.componentWillReceiveProps){
inst.componentWillReceiveProps(nextProps, nextContext);}}



var nextState=this._processPendingState(nextProps, nextContext);

var shouldUpdate=
this._pendingForceUpdate || 
!inst.shouldComponentUpdate || 
inst.shouldComponentUpdate(nextProps, nextState, nextContext);

if(__DEV__){
warning(
typeof shouldUpdate !== 'undefined', 
'%s.shouldComponentUpdate(): Returned undefined instead of a ' + 
'boolean value. Make sure to return true or false.', 
this.getName() || 'ReactCompositeComponent');}



if(shouldUpdate){
this._pendingForceUpdate = false;

this._performComponentUpdate(
nextParentElement, 
nextProps, 
nextState, 
nextContext, 
transaction, 
nextUnmaskedContext);}else 

{


this._currentElement = nextParentElement;
this._context = nextUnmaskedContext;
inst.props = nextProps;
inst.state = nextState;
inst.context = nextContext;}}, 



_processPendingState:function(props, context){
var inst=this._instance;
var queue=this._pendingStateQueue;
var replace=this._pendingReplaceState;
this._pendingReplaceState = false;
this._pendingStateQueue = null;

if(!queue){
return inst.state;}


var nextState=assign({}, replace?queue[0]:inst.state);
for(var i=replace?1:0; i < queue.length; i++) {
var partial=queue[i];
assign(
nextState, 
typeof partial === 'function'?
partial.call(inst, nextState, props, context):
partial);}



return nextState;}, 














_performComponentUpdate:function(
nextElement, 
nextProps, 
nextState, 
nextContext, 
transaction, 
unmaskedContext)
{
var inst=this._instance;

var prevProps=inst.props;
var prevState=inst.state;
var prevContext=inst.context;

if(inst.componentWillUpdate){
inst.componentWillUpdate(nextProps, nextState, nextContext);}


this._currentElement = nextElement;
this._context = unmaskedContext;
inst.props = nextProps;
inst.state = nextState;
inst.context = nextContext;

this._updateRenderedComponent(transaction, unmaskedContext);

if(inst.componentDidUpdate){
transaction.getReactMountReady().enqueue(
inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), 
inst);}}, 










_updateRenderedComponent:function(transaction, context){
var prevComponentInstance=this._renderedComponent;
var prevRenderedElement=prevComponentInstance._currentElement;
var nextRenderedElement=this._renderValidatedComponent();
if(shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)){
ReactReconciler.receiveComponent(
prevComponentInstance, 
nextRenderedElement, 
transaction, 
this._processChildContext(context));}else 

{

var thisID=this._rootNodeID;
var prevComponentID=prevComponentInstance._rootNodeID;
ReactReconciler.unmountComponent(prevComponentInstance);

this._renderedComponent = this._instantiateReactComponent(
nextRenderedElement, 
this._currentElement.type);

var nextMarkup=ReactReconciler.mountComponent(
this._renderedComponent, 
thisID, 
transaction, 
this._processChildContext(context));

this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);}}, 






_replaceNodeWithMarkupByID:function(prevComponentID, nextMarkup){
ReactComponentEnvironment.replaceNodeWithMarkupByID(
prevComponentID, 
nextMarkup);}, 






_renderValidatedComponentWithoutOwnerOrContext:function(){
var inst=this._instance;
var renderedComponent=inst.render();
if(__DEV__){

if(typeof renderedComponent === 'undefined' && 
inst.render._isMockFunction){


renderedComponent = null;}}



return renderedComponent;}, 





_renderValidatedComponent:function(){
var renderedComponent;
var previousContext=ReactContext.current;
ReactContext.current = this._processChildContext(
this._currentElement._context);

ReactCurrentOwner.current = this;
try{
renderedComponent = 
this._renderValidatedComponentWithoutOwnerOrContext();}finally 
{
ReactContext.current = previousContext;
ReactCurrentOwner.current = null;}

invariant(

renderedComponent === null || renderedComponent === false || 
ReactElement.isValidElement(renderedComponent), 
'%s.render(): A valid ReactComponent must be returned. You may have ' + 
'returned undefined, an array or some other invalid object.', 
this.getName() || 'ReactCompositeComponent');

return renderedComponent;}, 










attachRef:function(ref, component){
var inst=this.getPublicInstance();
var refs=inst.refs === emptyObject?inst.refs = {}:inst.refs;
refs[ref] = component.getPublicInstance();}, 









detachRef:function(ref){
var refs=this.getPublicInstance().refs;
delete refs[ref];}, 








getName:function(){
var type=this._currentElement.type;
var constructor=this._instance && this._instance.constructor;
return (
type.displayName || constructor && constructor.displayName || 
type.name || constructor && constructor.name || 
null);}, 











getPublicInstance:function(){
return this._instance;}, 



_instantiateReactComponent:null};



ReactPerf.measureMethods(
ReactCompositeComponentMixin, 
'ReactCompositeComponent', 
{
mountComponent:'mountComponent', 
updateComponent:'updateComponent', 
_renderValidatedComponent:'_renderValidatedComponent'});



var ReactCompositeComponent={

Mixin:ReactCompositeComponentMixin};



module.exports = ReactCompositeComponent;});
__d('shouldUpdateReactComponent',["warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var warning=require('warning');












function shouldUpdateReactComponent(prevElement, nextElement){
if(prevElement != null && nextElement != null){
var prevType=typeof prevElement;
var nextType=typeof nextElement;
if(prevType === 'string' || prevType === 'number'){
return nextType === 'string' || nextType === 'number';}else 
{
if(nextType === 'object' && 
prevElement.type === nextElement.type && 
prevElement.key === nextElement.key){
var ownersMatch=prevElement._owner === nextElement._owner;
var prevName=null;
var nextName=null;
var nextDisplayName=null;
if(__DEV__){
if(!ownersMatch){
if(prevElement._owner != null && 
prevElement._owner.getPublicInstance() != null && 
prevElement._owner.getPublicInstance().constructor != null){
prevName = 
prevElement._owner.getPublicInstance().constructor.displayName;}

if(nextElement._owner != null && 
nextElement._owner.getPublicInstance() != null && 
nextElement._owner.getPublicInstance().constructor != null){
nextName = 
nextElement._owner.getPublicInstance().constructor.displayName;}

if(nextElement.type != null && 
nextElement.type.displayName != null){
nextDisplayName = nextElement.type.displayName;}

if(nextElement.type != null && typeof nextElement.type === 'string'){
nextDisplayName = nextElement.type;}

if(typeof nextElement.type !== 'string' || 
nextElement.type === 'input' || 
nextElement.type === 'textarea'){
if(prevElement._owner != null && 
prevElement._owner._isOwnerNecessary === false || 
nextElement._owner != null && 
nextElement._owner._isOwnerNecessary === false){
if(prevElement._owner != null){
prevElement._owner._isOwnerNecessary = true;}

if(nextElement._owner != null){
nextElement._owner._isOwnerNecessary = true;}

warning(
false, 
'<%s /> is being rendered by both %s and %s using the same ' + 
'key (%s) in the same place. Currently, this means that ' + 
'they don\'t preserve state. This behavior should be very ' + 
'rare so we\'re considering deprecating it. Please contact ' + 
'the React team and explain your use case so that we can ' + 
'take that into consideration.', 
nextDisplayName || 'Unknown Component', 
prevName || '[Unknown]', 
nextName || '[Unknown]', 
prevElement.key);}}}}





return ownersMatch;}}}



return false;}


module.exports = shouldUpdateReactComponent;});
__d('ReactNativeTextComponent',["ReactNativeTagHandles","NativeModules","Object.assign"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var RCTUIManager=require('NativeModules').UIManager;

var assign=require('Object.assign');

var ReactNativeTextComponent=function(props){};



assign(ReactNativeTextComponent.prototype, {

construct:function(text){

this._currentElement = text;
this._stringText = '' + text;
this._rootNodeID = null;}, 


mountComponent:function(rootID, transaction, context){
this._rootNodeID = rootID;
var tag=ReactNativeTagHandles.allocateTag();
RCTUIManager.createView(tag, 'RCTRawText', {text:this._stringText});
return {
rootNodeID:rootID, 
tag:tag};}, 



receiveComponent:function(nextText, transaction, context){
if(nextText !== this._currentElement){
this._currentElement = nextText;
var nextStringText='' + nextText;
if(nextStringText !== this._stringText){
this._stringText = nextStringText;
RCTUIManager.updateView(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(
this._rootNodeID), 

'RCTRawText', 
{text:this._stringText});}}}, 





unmountComponent:function(){
this._currentElement = null;
this._stringText = null;
this._rootNodeID = null;}});




module.exports = ReactNativeTextComponent;});
__d('ResponderEventPlugin',["EventConstants","EventPluginUtils","EventPropagators","NodeHandle","ReactInstanceHandles","ResponderSyntheticEvent","ResponderTouchHistoryStore","accumulate","invariant","keyOf"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var EventConstants=require('EventConstants');
var EventPluginUtils=require('EventPluginUtils');
var EventPropagators=require('EventPropagators');
var NodeHandle=require('NodeHandle');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ResponderSyntheticEvent=require('ResponderSyntheticEvent');
var ResponderTouchHistoryStore=require('ResponderTouchHistoryStore');

var accumulate=require('accumulate');
var invariant=require('invariant');
var keyOf=require('keyOf');

var isStartish=EventPluginUtils.isStartish;
var isMoveish=EventPluginUtils.isMoveish;
var isEndish=EventPluginUtils.isEndish;
var executeDirectDispatch=EventPluginUtils.executeDirectDispatch;
var hasDispatches=EventPluginUtils.hasDispatches;
var executeDispatchesInOrderStopAtTrue=
EventPluginUtils.executeDispatchesInOrderStopAtTrue;





var responderID=null;





var trackedTouchCount=0;




var previousActiveTouches=0;

var changeResponder=function(nextResponderID){
var oldResponderID=responderID;
responderID = nextResponderID;
if(ResponderEventPlugin.GlobalResponderHandler !== null){
ResponderEventPlugin.GlobalResponderHandler.onChange(
oldResponderID, 
nextResponderID);}};




var eventTypes={




startShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onStartShouldSetResponder:null}), 
captured:keyOf({onStartShouldSetResponderCapture:null})}}, 












scrollShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onScrollShouldSetResponder:null}), 
captured:keyOf({onScrollShouldSetResponderCapture:null})}}, 










selectionChangeShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onSelectionChangeShouldSetResponder:null}), 
captured:keyOf({onSelectionChangeShouldSetResponderCapture:null})}}, 







moveShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onMoveShouldSetResponder:null}), 
captured:keyOf({onMoveShouldSetResponderCapture:null})}}, 






responderStart:{registrationName:keyOf({onResponderStart:null})}, 
responderMove:{registrationName:keyOf({onResponderMove:null})}, 
responderEnd:{registrationName:keyOf({onResponderEnd:null})}, 
responderRelease:{registrationName:keyOf({onResponderRelease:null})}, 
responderTerminationRequest:{
registrationName:keyOf({onResponderTerminationRequest:null})}, 

responderGrant:{registrationName:keyOf({onResponderGrant:null})}, 
responderReject:{registrationName:keyOf({onResponderReject:null})}, 
responderTerminate:{registrationName:keyOf({onResponderTerminate:null})}};






































































































































































































function setResponderAndExtractTransfer(
topLevelType, 
topLevelTargetID, 
nativeEvent){
var shouldSetEventType=
isStartish(topLevelType)?eventTypes.startShouldSetResponder:
isMoveish(topLevelType)?eventTypes.moveShouldSetResponder:
topLevelType === EventConstants.topLevelTypes.topSelectionChange?
eventTypes.selectionChangeShouldSetResponder:
eventTypes.scrollShouldSetResponder;


var bubbleShouldSetFrom=!responderID?
topLevelTargetID:
ReactInstanceHandles._getFirstCommonAncestorID(responderID, topLevelTargetID);





var skipOverBubbleShouldSetFrom=bubbleShouldSetFrom === responderID;
var shouldSetEvent=ResponderSyntheticEvent.getPooled(
shouldSetEventType, 
bubbleShouldSetFrom, 
nativeEvent);

shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
if(skipOverBubbleShouldSetFrom){
EventPropagators.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);}else 
{
EventPropagators.accumulateTwoPhaseDispatches(shouldSetEvent);}

var wantsResponderID=executeDispatchesInOrderStopAtTrue(shouldSetEvent);
if(!shouldSetEvent.isPersistent()){
shouldSetEvent.constructor.release(shouldSetEvent);}


if(!wantsResponderID || wantsResponderID === responderID){
return null;}

var extracted;
var grantEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderGrant, 
wantsResponderID, 
nativeEvent);

grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;

EventPropagators.accumulateDirectDispatches(grantEvent);
if(responderID){

var terminationRequestEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderTerminationRequest, 
responderID, 
nativeEvent);

terminationRequestEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(terminationRequestEvent);
var shouldSwitch=!hasDispatches(terminationRequestEvent) || 
executeDirectDispatch(terminationRequestEvent);
if(!terminationRequestEvent.isPersistent()){
terminationRequestEvent.constructor.release(terminationRequestEvent);}


if(shouldSwitch){
var terminateType=eventTypes.responderTerminate;
var terminateEvent=ResponderSyntheticEvent.getPooled(
terminateType, 
responderID, 
nativeEvent);

terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(terminateEvent);
extracted = accumulate(extracted, [grantEvent, terminateEvent]);
changeResponder(wantsResponderID);}else 
{
var rejectEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderReject, 
wantsResponderID, 
nativeEvent);

rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(rejectEvent);
extracted = accumulate(extracted, rejectEvent);}}else 

{
extracted = accumulate(extracted, grantEvent);
changeResponder(wantsResponderID);}

return extracted;}










function canTriggerTransfer(topLevelType, topLevelTargetID){
return topLevelTargetID && (
topLevelType === EventConstants.topLevelTypes.topScroll || 
trackedTouchCount > 0 && 
topLevelType === EventConstants.topLevelTypes.topSelectionChange || 
isStartish(topLevelType) || 
isMoveish(topLevelType));}










function noResponderTouches(nativeEvent){
var touches=nativeEvent.touches;
if(!touches || touches.length === 0){
return true;}

for(var i=0; i < touches.length; i++) {
var activeTouch=touches[i];
var target=activeTouch.target;
if(target !== null && target !== undefined && target !== 0){

var commonAncestor=
ReactInstanceHandles._getFirstCommonAncestorID(
responderID, 
NodeHandle.getRootNodeID(target));

if(commonAncestor === responderID){
return false;}}}



return true;}



var ResponderEventPlugin={

getResponderID:function(){
return responderID;}, 


eventTypes:eventTypes, 













extractEvents:function(
topLevelType, 
topLevelTarget, 
topLevelTargetID, 
nativeEvent){

if(isStartish(topLevelType)){
trackedTouchCount += 1;}else 
if(isEndish(topLevelType)){
trackedTouchCount -= 1;
invariant(
trackedTouchCount >= 0, 
'Ended a touch event which was not counted in trackedTouchCount.');}



ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);

var extracted=canTriggerTransfer(topLevelType, topLevelTargetID)?
setResponderAndExtractTransfer(topLevelType, topLevelTargetID, nativeEvent):
null;










var isResponderTouchStart=responderID && isStartish(topLevelType);
var isResponderTouchMove=responderID && isMoveish(topLevelType);
var isResponderTouchEnd=responderID && isEndish(topLevelType);
var incrementalTouch=
isResponderTouchStart?eventTypes.responderStart:
isResponderTouchMove?eventTypes.responderMove:
isResponderTouchEnd?eventTypes.responderEnd:
null;

if(incrementalTouch){
var gesture=
ResponderSyntheticEvent.getPooled(incrementalTouch, responderID, nativeEvent);
gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(gesture);
extracted = accumulate(extracted, gesture);}


var isResponderTerminate=
responderID && 
topLevelType === EventConstants.topLevelTypes.topTouchCancel;
var isResponderRelease=
responderID && 
!isResponderTerminate && 
isEndish(topLevelType) && 
noResponderTouches(nativeEvent);
var finalTouch=
isResponderTerminate?eventTypes.responderTerminate:
isResponderRelease?eventTypes.responderRelease:
null;
if(finalTouch){
var finalEvent=
ResponderSyntheticEvent.getPooled(finalTouch, responderID, nativeEvent);
finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(finalEvent);
extracted = accumulate(extracted, finalEvent);
changeResponder(null);}


var numberActiveTouches=
ResponderTouchHistoryStore.touchHistory.numberActiveTouches;
if(ResponderEventPlugin.GlobalInteractionHandler && 
numberActiveTouches !== previousActiveTouches){
ResponderEventPlugin.GlobalInteractionHandler.onChange(
numberActiveTouches);}


previousActiveTouches = numberActiveTouches;

return extracted;}, 


GlobalResponderHandler:null, 
GlobalInteractionHandler:null, 

injection:{





injectGlobalResponderHandler:function(GlobalResponderHandler){
ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;}, 






injectGlobalInteractionHandler:function(GlobalInteractionHandler){
ResponderEventPlugin.GlobalInteractionHandler = GlobalInteractionHandler;}}};




module.exports = ResponderEventPlugin;});
__d('ResponderSyntheticEvent',["SyntheticEvent"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";




















var SyntheticEvent=require("SyntheticEvent");






var ResponderEventInterface={
touchHistory:function(nativeEvent){
return null;}};









function ResponderSyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent){
SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);}


SyntheticEvent.augmentClass(ResponderSyntheticEvent, ResponderEventInterface);

module.exports = ResponderSyntheticEvent;});
__d('ResponderTouchHistoryStore',["EventPluginUtils","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';





var EventPluginUtils=require('EventPluginUtils');

var invariant=require('invariant');

var isMoveish=EventPluginUtils.isMoveish;
var isStartish=EventPluginUtils.isStartish;
var isEndish=EventPluginUtils.isEndish;

var MAX_TOUCH_BANK=20;
















var touchHistory={
touchBank:[], 
numberActiveTouches:0, 



indexOfSingleActiveTouch:-1, 
mostRecentTimeStamp:0};


var timestampForTouch=function(touch){



return touch.timeStamp || touch.timestamp;};







var initializeTouchData=function(touch){
return {
touchActive:true, 
startTimeStamp:timestampForTouch(touch), 
startPageX:touch.pageX, 
startPageY:touch.pageY, 
currentPageX:touch.pageX, 
currentPageY:touch.pageY, 
currentTimeStamp:timestampForTouch(touch), 
previousPageX:touch.pageX, 
previousPageY:touch.pageY, 
previousTimeStamp:timestampForTouch(touch)};};



var reinitializeTouchTrack=function(touchTrack, touch){
touchTrack.touchActive = true;
touchTrack.startTimeStamp = timestampForTouch(touch);
touchTrack.startPageX = touch.pageX;
touchTrack.startPageY = touch.pageY;
touchTrack.currentPageX = touch.pageX;
touchTrack.currentPageY = touch.pageY;
touchTrack.currentTimeStamp = timestampForTouch(touch);
touchTrack.previousPageX = touch.pageX;
touchTrack.previousPageY = touch.pageY;
touchTrack.previousTimeStamp = timestampForTouch(touch);};


var validateTouch=function(touch){
var identifier=touch.identifier;
invariant(identifier != null, 'Touch object is missing identifier');
if(identifier > MAX_TOUCH_BANK){
console.warn(
'Touch identifier ' + identifier + ' is greater than maximum ' + 
'supported ' + MAX_TOUCH_BANK + ' which causes performance issues ' + 
'backfilling array locations for all of the indices.');}};




var recordStartTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var identifier=touch.identifier;
var touchTrack=touchBank[identifier];
if(__DEV__){
validateTouch(touch);}

if(!touchTrack){
touchBank[touch.identifier] = initializeTouchData(touch);}else 
{
reinitializeTouchTrack(touchTrack, touch);}

touchHistory.mostRecentTimeStamp = timestampForTouch(touch);};


var recordMoveTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var touchTrack=touchBank[touch.identifier];
if(__DEV__){
validateTouch(touch);
invariant(touchTrack, 'Touch data should have been recorded on start');}

touchTrack.touchActive = true;
touchTrack.previousPageX = touchTrack.currentPageX;
touchTrack.previousPageY = touchTrack.currentPageY;
touchTrack.previousTimeStamp = touchTrack.currentTimeStamp;
touchTrack.currentPageX = touch.pageX;
touchTrack.currentPageY = touch.pageY;
touchTrack.currentTimeStamp = timestampForTouch(touch);
touchHistory.mostRecentTimeStamp = timestampForTouch(touch);};


var recordEndTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var touchTrack=touchBank[touch.identifier];
if(__DEV__){
validateTouch(touch);
invariant(touchTrack, 'Touch data should have been recorded on start');}

touchTrack.previousPageX = touchTrack.currentPageX;
touchTrack.previousPageY = touchTrack.currentPageY;
touchTrack.previousTimeStamp = touchTrack.currentTimeStamp;
touchTrack.currentPageX = touch.pageX;
touchTrack.currentPageY = touch.pageY;
touchTrack.currentTimeStamp = timestampForTouch(touch);
touchTrack.touchActive = false;
touchHistory.mostRecentTimeStamp = timestampForTouch(touch);};


var ResponderTouchHistoryStore={
recordTouchTrack:function(topLevelType, nativeEvent){
var touchBank=touchHistory.touchBank;
if(isMoveish(topLevelType)){
nativeEvent.changedTouches.forEach(recordMoveTouchData);}else 
if(isStartish(topLevelType)){
nativeEvent.changedTouches.forEach(recordStartTouchData);
touchHistory.numberActiveTouches = nativeEvent.touches.length;
if(touchHistory.numberActiveTouches === 1){
touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier;}}else 

if(isEndish(topLevelType)){
nativeEvent.changedTouches.forEach(recordEndTouchData);
touchHistory.numberActiveTouches = nativeEvent.touches.length;
if(touchHistory.numberActiveTouches === 1){
for(var i=0; i < touchBank.length; i++) {
var touchTrackToCheck=touchBank[i];
if(touchTrackToCheck != null && touchTrackToCheck.touchActive){
touchHistory.indexOfSingleActiveTouch = i;
break;}}


if(__DEV__){
var activeTouchData=touchBank[touchHistory.indexOfSingleActiveTouch];
var foundActive=activeTouchData != null && !!activeTouchData.touchActive;
invariant(foundActive, 'Cannot find single active touch');}}}}, 





touchHistory:touchHistory};



module.exports = ResponderTouchHistoryStore;});
__d('accumulate',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');








function accumulate(current, next){
invariant(
next != null, 
'accumulate(...): Accumulated items must be not be null or undefined.');

if(current == null){
return next;}else 
{


var currentIsArray=Array.isArray(current);
var nextIsArray=Array.isArray(next);
if(currentIsArray){
return current.concat(next);}else 
{
if(nextIsArray){
return [current].concat(next);}else 
{
return [current, next];}}}}





module.exports = accumulate;});
__d('UniversalWorkerNodeHandle',["ReactNativeTagHandles","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 



ReactNativeTagHandles=require('ReactNativeTagHandles');

var invariant=require('invariant');

var UniversalWorkerNodeHandle={
getRootNodeID:function(nodeHandle){
invariant(
nodeHandle !== undefined && nodeHandle !== null && nodeHandle !== 0, 
'No node handle defined');

return ReactNativeTagHandles.tagToRootNodeID[nodeHandle];}};



module.exports = UniversalWorkerNodeHandle;});
__d('createReactNativeComponentClass',["ReactNativeBaseComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactNativeBaseComponent=require('ReactNativeBaseComponent');











var createReactNativeComponentClass=function(
viewConfig)
{
var Constructor=function(element){
this._currentElement = element;

this._rootNodeID = null;
this._renderedChildren = null;
this.previousFlattenedStyle = null;};

Constructor.displayName = viewConfig.uiViewClassName;
Constructor.prototype = new ReactNativeBaseComponent(viewConfig);
Constructor.prototype.constructor = Constructor;

return Constructor;};


module.exports = createReactNativeComponentClass;});
__d('ReactNativeBaseComponent',["NativeMethodsMixin","ReactNativeEventEmitter","ReactNativeStyleAttributes","ReactNativeTagHandles","ReactMultiChild","NativeModules","styleDiffer","deepFreezeAndThrowOnMutationInDev","diffRawProperties","flattenStyle","precomputeStyle","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var ReactNativeEventEmitter=require('ReactNativeEventEmitter');
var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactMultiChild=require('ReactMultiChild');
var RCTUIManager=require('NativeModules').UIManager;

var styleDiffer=require('styleDiffer');
var deepFreezeAndThrowOnMutationInDev=require('deepFreezeAndThrowOnMutationInDev');
var diffRawProperties=require('diffRawProperties');
var flattenStyle=require('flattenStyle');
var precomputeStyle=require('precomputeStyle');
var warning=require('warning');

var registrationNames=ReactNativeEventEmitter.registrationNames;
var putListener=ReactNativeEventEmitter.putListener;
var deleteAllListeners=ReactNativeEventEmitter.deleteAllListeners;












var ReactNativeBaseComponent=function(
viewConfig)
{
this.viewConfig = viewConfig;};












var cachedIndexArray=function(size){
var cachedResult=cachedIndexArray._cache[size];
if(!cachedResult){
var arr=[];
for(var i=0; i < size; i++) {
arr[i] = i;}

cachedIndexArray._cache[size] = arr;
return arr;}else 
{
return cachedResult;}};


cachedIndexArray._cache = {};





ReactNativeBaseComponent.Mixin = {
getPublicInstance:function(){

return this;}, 


construct:function(element){
this._currentElement = element;}, 


unmountComponent:function(){
deleteAllListeners(this._rootNodeID);
this.unmountChildren();
this._rootNodeID = null;}, 










initializeChildren:function(children, containerTag, transaction, context){
var mountImages=this.mountChildren(children, transaction, context);



if(mountImages.length){
var indexes=cachedIndexArray(mountImages.length);


var createdTags=[];
for(var i=0; i < mountImages.length; i++) {
var mountImage=mountImages[i];
var childTag=mountImage.tag;
var childID=mountImage.rootNodeID;
warning(
mountImage && mountImage.rootNodeID && mountImage.tag, 
'Mount image returned does not have required data');

ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
childID, 
childTag);

createdTags[i] = mountImage.tag;}

RCTUIManager.
manageChildren(containerTag, null, null, createdTags, indexes, null);}}, 












computeUpdatedProperties:function(prevProps, nextProps, validAttributes){
if(__DEV__){
for(var key in nextProps) {
if(nextProps.hasOwnProperty(key) && 
nextProps[key] && 
validAttributes[key]){
deepFreezeAndThrowOnMutationInDev(nextProps[key]);}}}




var updatePayload=diffRawProperties(
null, 
prevProps, 
nextProps, 
validAttributes);







if(styleDiffer(nextProps.style, prevProps.style)){
var nextFlattenedStyle=precomputeStyle(flattenStyle(nextProps.style));
updatePayload = diffRawProperties(
updatePayload, 
this.previousFlattenedStyle, 
nextFlattenedStyle, 
ReactNativeStyleAttributes);

this.previousFlattenedStyle = nextFlattenedStyle;}


return updatePayload;}, 











receiveComponent:function(nextElement, transaction, context){
var prevElement=this._currentElement;
this._currentElement = nextElement;

var updatePayload=this.computeUpdatedProperties(
prevElement.props, 
nextElement.props, 
this.viewConfig.validAttributes);


if(updatePayload){
RCTUIManager.updateView(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(this._rootNodeID), 
this.viewConfig.uiViewClassName, 
updatePayload);}



this._reconcileListenersUponUpdate(
prevElement.props, 
nextElement.props);

this.updateChildren(nextElement.props.children, transaction, context);}, 





_registerListenersUponCreation:function(initialProps){
for(var key in initialProps) {


if(registrationNames[key] && initialProps[key]){
var listener=initialProps[key];
putListener(this._rootNodeID, key, listener);}}}, 









_reconcileListenersUponUpdate:function(prevProps, nextProps){
for(var key in nextProps) {
if(registrationNames[key] && nextProps[key] !== prevProps[key]){
putListener(this._rootNodeID, key, nextProps[key]);}}}, 









mountComponent:function(rootID, transaction, context){
this._rootNodeID = rootID;

var tag=ReactNativeTagHandles.allocateTag();

this.previousFlattenedStyle = {};
var updatePayload=this.computeUpdatedProperties(
{}, 
this._currentElement.props, 
this.viewConfig.validAttributes);

RCTUIManager.createView(tag, this.viewConfig.uiViewClassName, updatePayload);

this._registerListenersUponCreation(this._currentElement.props);
this.initializeChildren(
this._currentElement.props.children, 
tag, 
transaction, 
context);

return {
rootNodeID:rootID, 
tag:tag};}};








Object.assign(
ReactNativeBaseComponent.prototype, 
ReactMultiChild.Mixin, 
ReactNativeBaseComponent.Mixin, 
NativeMethodsMixin);


module.exports = ReactNativeBaseComponent;});
__d('NativeMethodsMixin',["NativeModules","TextInputState","findNodeHandle","flattenStyle","invariant","mergeFast","precomputeStyle"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTPOPAnimationManager=NativeModules.POPAnimationManager;
var RCTUIManager=NativeModules.UIManager;
var TextInputState=require('TextInputState');

var findNodeHandle=require('findNodeHandle');
var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var mergeFast=require('mergeFast');
var precomputeStyle=require('precomputeStyle');

















var animationIDInvariant=function(
funcName, 
anim)
{
invariant(
anim, 
funcName + ' must be called with a valid animation ID returned from' + 
' POPAnimation.createAnimation, received: "' + anim + '"');};



var NativeMethodsMixin={
addAnimation:function(anim, callback){
animationIDInvariant('addAnimation', anim);
RCTPOPAnimationManager.addAnimation(
findNodeHandle(this), 
anim, 
mountSafeCallback(this, callback));}, 



removeAnimation:function(anim){
animationIDInvariant('removeAnimation', anim);
RCTPOPAnimationManager.removeAnimation(findNodeHandle(this), anim);}, 


measure:function(callback){
RCTUIManager.measure(
findNodeHandle(this), 
mountSafeCallback(this, callback));}, 



measureLayout:function(
relativeToNativeNode, 
onSuccess, 
onFail)
{
RCTUIManager.measureLayout(
findNodeHandle(this), 
relativeToNativeNode, 
mountSafeCallback(this, onFail), 
mountSafeCallback(this, onSuccess));}, 








setNativeProps:function(nativeProps){





var hasOnlyStyle=true;
for(var key in nativeProps) {
if(key !== 'style'){
hasOnlyStyle = false;
break;}}


var style=precomputeStyle(flattenStyle(nativeProps.style));

var props=null;
if(hasOnlyStyle){
props = style;}else 
if(!style){
props = nativeProps;}else 
{
props = mergeFast(nativeProps, style);}


RCTUIManager.updateView(
findNodeHandle(this), 
this.viewConfig.uiViewClassName, 
props);}, 



focus:function(){
TextInputState.focusTextInput(findNodeHandle(this));}, 


blur:function(){
TextInputState.blurTextInput(findNodeHandle(this));}};



function throwOnStylesProp(component, props){
if(props.styles !== undefined){
var owner=component._owner || null;
var name=component.constructor.displayName;
var msg='`styles` is not a supported property of `' + name + '`, did ' + 
'you mean `style` (singular)?';
if(owner && owner.constructor && owner.constructor.displayName){
msg += '\n\nCheck the `' + owner.constructor.displayName + '` parent ' + 
' component.';}

throw new Error(msg);}}


if(__DEV__){



var NativeMethodsMixin_DEV=NativeMethodsMixin;
invariant(
!NativeMethodsMixin_DEV.componentWillMount && 
!NativeMethodsMixin_DEV.componentWillReceiveProps, 
'Do not override existing functions.');

NativeMethodsMixin_DEV.componentWillMount = function(){
throwOnStylesProp(this, this.props);};

NativeMethodsMixin_DEV.componentWillReceiveProps = function(newProps){
throwOnStylesProp(this, newProps);};}







var mountSafeCallback=function(context, callback){
return function(){
if(!callback || context.isMounted && !context.isMounted()){
return;}

return callback.apply(context, arguments);};};



module.exports = NativeMethodsMixin;});
__d('TextInputState',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';
















var RCTUIManager=require('NativeModules').UIManager;

var TextInputState={



_currentlyFocusedID:null, 





currentlyFocusedField:function(){
return this._currentlyFocusedID;}, 







focusTextInput:function(textFieldID){
if(this._currentlyFocusedID !== textFieldID && textFieldID !== null){
this._currentlyFocusedID = textFieldID;
RCTUIManager.focus(textFieldID);}}, 








blurTextInput:function(textFieldID){
if(this._currentlyFocusedID === textFieldID && textFieldID !== null){
this._currentlyFocusedID = null;
RCTUIManager.blur(textFieldID);}}};




module.exports = TextInputState;});
__d('findNodeHandle',["ReactCurrentOwner","ReactInstanceMap","ReactNativeTagHandles","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

var invariant=require('invariant');
var warning=require('warning');































function findNodeHandle(componentOrHandle){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner !== null){
warning(
owner._warnedAboutRefsInRender, 
'%s is accessing findNodeHandle inside its render(). ' + 
'render() should be a pure function of props and state. It should ' + 
'never access something that requires stale data from the previous ' + 
'render, such as refs. Move this logic to componentDidMount and ' + 
'componentDidUpdate instead.', 
owner.getName() || 'A component');

owner._warnedAboutRefsInRender = true;}}


if(componentOrHandle == null){
return null;}

if(typeof componentOrHandle === 'number'){

return componentOrHandle;}


var component=componentOrHandle;



var internalInstance=ReactInstanceMap.get(component);
if(internalInstance){
return ReactNativeTagHandles.rootNodeIDToTag[internalInstance._rootNodeID];}else 
{
var rootNodeID=component._rootNodeID;
if(rootNodeID){
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];}else 
{
invariant(


typeof component === 'object' && 
'_rootNodeID' in component || 


component.render != null && 
typeof component.render === 'function', 

'findNodeHandle(...): Argument is not a component ' + 
'(type: %s, keys: %s)', 
typeof component, 
Object.keys(component));

invariant(
false, 
'findNodeHandle(...): Unable to find node handle for unmounted ' + 
'component.');}}}





module.exports = findNodeHandle;});
__d('flattenStyle',["StyleSheetRegistry","invariant","mergeIntoFast"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var StyleSheetRegistry=require('StyleSheetRegistry');
var invariant=require('invariant');
var mergeIntoFast=require('mergeIntoFast');




function getStyle(style){
if(typeof style === 'number'){
return StyleSheetRegistry.getStyleByID(style);}

return style;}





function flattenStyle(style){
if(!style){
return undefined;}

invariant(style !== true, 'style may be false but not true');

if(!Array.isArray(style)){
return getStyle(style);}


var result={};
for(var i=0; i < style.length; ++i) {
var computedStyle=flattenStyle(style[i]);
if(computedStyle){
mergeIntoFast(result, computedStyle);}}


return result;}


module.exports = flattenStyle;});
__d('StyleSheetRegistry',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var styles={};
var uniqueID=1;
var emptyStyle={};var 

StyleSheetRegistry=(function(){function StyleSheetRegistry(){_classCallCheck(this, StyleSheetRegistry);}_createClass(StyleSheetRegistry, null, [{key:'registerStyle', value:
function registerStyle(style){
var id=++uniqueID;
if(__DEV__){
Object.freeze(style);}

styles[id] = style;
return id;}}, {key:'getStyleByID', value:


function getStyleByID(id){
if(!id){


return emptyStyle;}


var style=styles[id];
if(!style){
console.warn('Invalid style with id `' + id + '`. Skipping ...');
return emptyStyle;}

return style;}}]);return StyleSheetRegistry;})();



module.exports = StyleSheetRegistry;});
__d('mergeIntoFast',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var mergeIntoFast=function(one, two){
for(var keyTwo in two) {
one[keyTwo] = two[keyTwo];}};



module.exports = mergeIntoFast;});
__d('mergeFast',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';





















var mergeFast=function(one, two){
var ret={};
for(var keyOne in one) {
ret[keyOne] = one[keyOne];}

for(var keyTwo in two) {
ret[keyTwo] = two[keyTwo];}

return ret;};


module.exports = mergeFast;});
__d('precomputeStyle',["MatrixMath","Platform","deepFreezeAndThrowOnMutationInDev","invariant","stringifySafe"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};












var MatrixMath=require('MatrixMath');
var Platform=require('Platform');

var deepFreezeAndThrowOnMutationInDev=require('deepFreezeAndThrowOnMutationInDev');
var invariant=require('invariant');
var stringifySafe=require('stringifySafe');





function precomputeStyle(style){
if(!style || !style.transform){
return style;}

invariant(
!style.transformMatrix, 
'transformMatrix and transform styles cannot be used on the same component');

var newStyle=_precomputeTransforms(_extends({}, style));
deepFreezeAndThrowOnMutationInDev(newStyle);
return newStyle;}










function _precomputeTransforms(style){var 
transform=style.transform;
var result=MatrixMath.createIdentityMatrix();

transform.forEach(function(transformation){
var key=Object.keys(transformation)[0];
var value=transformation[key];
if(__DEV__){
_validateTransform(key, value, transformation);}


switch(key){
case 'matrix':
MatrixMath.multiplyInto(result, result, value);
break;
case 'rotate':
_multiplyTransform(result, MatrixMath.reuseRotateZCommand, [_convertToRadians(value)]);
break;
case 'scale':
_multiplyTransform(result, MatrixMath.reuseScaleCommand, [value]);
break;
case 'scaleX':
_multiplyTransform(result, MatrixMath.reuseScaleXCommand, [value]);
break;
case 'scaleY':
_multiplyTransform(result, MatrixMath.reuseScaleYCommand, [value]);
break;
case 'translate':
_multiplyTransform(result, MatrixMath.reuseTranslate3dCommand, [value[0], value[1], value[2] || 0]);
break;
case 'translateX':
_multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [value, 0]);
break;
case 'translateY':
_multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [0, value]);
break;
default:
throw new Error('Invalid transform name: ' + key);}});







if(Platform.OS === 'android'){
return _extends({}, 
style, {
transformMatrix:result, 
decomposedMatrix:MatrixMath.decomposeMatrix(result)});}


return _extends({}, 
style, {
transformMatrix:result});}






function _multiplyTransform(
result, 
matrixMathFunction, 
args)
{
var matrixToApply=MatrixMath.createIdentityMatrix();
var argsWithIdentity=[matrixToApply].concat(args);
matrixMathFunction.apply(this, argsWithIdentity);
MatrixMath.multiplyInto(result, result, matrixToApply);}






function _convertToRadians(value){
var floatValue=parseFloat(value, 10);
return value.indexOf('rad') > -1?floatValue:floatValue * Math.PI / 180;}


function _validateTransform(key, value, transformation){
invariant(
!value.getValue, 
'You passed an animated value or spring to a normal component. ' + 
'You need to wrap that component in an Animated. For example, ' + 
'replace <View /> by <Animated.View />.');


var multivalueTransforms=[
'matrix', 
'translate'];

if(multivalueTransforms.indexOf(key) !== -1){
invariant(
Array.isArray(value), 
'Transform with key of %s must have an array as the value: %s', 
key, 
stringifySafe(transformation));}


switch(key){
case 'matrix':
invariant(
value.length === 9 || value.length === 16, 
'Matrix transform must have a length of 9 (2d) or 16 (3d). ' + 
'Provided matrix has a length of %s: %s', 
value.length, 
stringifySafe(transformation));

break;
case 'translate':
break;
case 'rotate':
invariant(
typeof value === 'string', 
'Transform with key of "%s" must be a string: %s', 
key, 
stringifySafe(transformation));

invariant(
value.indexOf('deg') > -1 || value.indexOf('rad') > -1, 
'Rotate transform must be expressed in degrees (deg) or radians ' + 
'(rad): %s', 
stringifySafe(transformation));

break;
default:
invariant(
typeof value === 'number', 
'Transform with key of "%s" must be a number: %s', 
key, 
stringifySafe(transformation));}}




module.exports = precomputeStyle;});
__d('MatrixMath',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';







var invariant=require('invariant');





var MatrixMath={
createIdentityMatrix:function(){
return [
1, 0, 0, 0, 
0, 1, 0, 0, 
0, 0, 1, 0, 
0, 0, 0, 1];}, 



createCopy:function(m){
return [
m[0], m[1], m[2], m[3], 
m[4], m[5], m[6], m[7], 
m[8], m[9], m[10], m[11], 
m[12], m[13], m[14], m[15]];}, 



createTranslate2d:function(x, y){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseTranslate2dCommand(mat, x, y);
return mat;}, 


reuseTranslate2dCommand:function(matrixCommand, x, y){
matrixCommand[12] = x;
matrixCommand[13] = y;}, 


reuseTranslate3dCommand:function(matrixCommand, x, y, z){
matrixCommand[12] = x;
matrixCommand[13] = y;
matrixCommand[14] = z;}, 


createScale:function(factor){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseScaleCommand(mat, factor);
return mat;}, 


reuseScaleCommand:function(matrixCommand, factor){
matrixCommand[0] = factor;
matrixCommand[5] = factor;}, 


reuseScale3dCommand:function(matrixCommand, x, y, z){
matrixCommand[0] = x;
matrixCommand[5] = y;
matrixCommand[10] = z;}, 


reuseScaleXCommand:function(matrixCommand, factor){
matrixCommand[0] = factor;}, 


reuseScaleYCommand:function(matrixCommand, factor){
matrixCommand[5] = factor;}, 


reuseScaleZCommand:function(matrixCommand, factor){
matrixCommand[10] = factor;}, 


reuseRotateXCommand:function(matrixCommand, radians){
matrixCommand[5] = Math.cos(radians);
matrixCommand[6] = Math.sin(radians);
matrixCommand[9] = -Math.sin(radians);
matrixCommand[10] = Math.cos(radians);}, 


reuseRotateYCommand:function(matrixCommand, amount){
matrixCommand[0] = Math.cos(amount);
matrixCommand[2] = -Math.sin(amount);
matrixCommand[8] = Math.sin(amount);
matrixCommand[10] = Math.cos(amount);}, 



reuseRotateZCommand:function(matrixCommand, radians){
matrixCommand[0] = Math.cos(radians);
matrixCommand[1] = Math.sin(radians);
matrixCommand[4] = -Math.sin(radians);
matrixCommand[5] = Math.cos(radians);}, 


createRotateZ:function(radians){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseRotateZCommand(mat, radians);
return mat;}, 


multiplyInto:function(out, a, b){
var a00=a[0], a01=a[1], a02=a[2], a03=a[3], 
a10=a[4], a11=a[5], a12=a[6], a13=a[7], 
a20=a[8], a21=a[9], a22=a[10], a23=a[11], 
a30=a[12], a31=a[13], a32=a[14], a33=a[15];

var b0=b[0], b1=b[1], b2=b[2], b3=b[3];
out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];
out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];
out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];
out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;}, 


determinant:function(matrix){var 

m00=



matrix[0];var m01=matrix[1];var m02=matrix[2];var m03=matrix[3];var m10=matrix[4];var m11=matrix[5];var m12=matrix[6];var m13=matrix[7];var m20=matrix[8];var m21=matrix[9];var m22=matrix[10];var m23=matrix[11];var m30=matrix[12];var m31=matrix[13];var m32=matrix[14];var m33=matrix[15];
return (
m03 * m12 * m21 * m30 - m02 * m13 * m21 * m30 - 
m03 * m11 * m22 * m30 + m01 * m13 * m22 * m30 + 
m02 * m11 * m23 * m30 - m01 * m12 * m23 * m30 - 
m03 * m12 * m20 * m31 + m02 * m13 * m20 * m31 + 
m03 * m10 * m22 * m31 - m00 * m13 * m22 * m31 - 
m02 * m10 * m23 * m31 + m00 * m12 * m23 * m31 + 
m03 * m11 * m20 * m32 - m01 * m13 * m20 * m32 - 
m03 * m10 * m21 * m32 + m00 * m13 * m21 * m32 + 
m01 * m10 * m23 * m32 - m00 * m11 * m23 * m32 - 
m02 * m11 * m20 * m33 + m01 * m12 * m20 * m33 + 
m02 * m10 * m21 * m33 - m00 * m12 * m21 * m33 - 
m01 * m10 * m22 * m33 + m00 * m11 * m22 * m33);}, 










inverse:function(matrix){
var det=MatrixMath.determinant(matrix);
if(!det){
return matrix;}var 


m00=



matrix[0];var m01=matrix[1];var m02=matrix[2];var m03=matrix[3];var m10=matrix[4];var m11=matrix[5];var m12=matrix[6];var m13=matrix[7];var m20=matrix[8];var m21=matrix[9];var m22=matrix[10];var m23=matrix[11];var m30=matrix[12];var m31=matrix[13];var m32=matrix[14];var m33=matrix[15];
return [
(m12 * m23 * m31 - m13 * m22 * m31 + m13 * m21 * m32 - m11 * m23 * m32 - m12 * m21 * m33 + m11 * m22 * m33) / det, 
(m03 * m22 * m31 - m02 * m23 * m31 - m03 * m21 * m32 + m01 * m23 * m32 + m02 * m21 * m33 - m01 * m22 * m33) / det, 
(m02 * m13 * m31 - m03 * m12 * m31 + m03 * m11 * m32 - m01 * m13 * m32 - m02 * m11 * m33 + m01 * m12 * m33) / det, 
(m03 * m12 * m21 - m02 * m13 * m21 - m03 * m11 * m22 + m01 * m13 * m22 + m02 * m11 * m23 - m01 * m12 * m23) / det, 
(m13 * m22 * m30 - m12 * m23 * m30 - m13 * m20 * m32 + m10 * m23 * m32 + m12 * m20 * m33 - m10 * m22 * m33) / det, 
(m02 * m23 * m30 - m03 * m22 * m30 + m03 * m20 * m32 - m00 * m23 * m32 - m02 * m20 * m33 + m00 * m22 * m33) / det, 
(m03 * m12 * m30 - m02 * m13 * m30 - m03 * m10 * m32 + m00 * m13 * m32 + m02 * m10 * m33 - m00 * m12 * m33) / det, 
(m02 * m13 * m20 - m03 * m12 * m20 + m03 * m10 * m22 - m00 * m13 * m22 - m02 * m10 * m23 + m00 * m12 * m23) / det, 
(m11 * m23 * m30 - m13 * m21 * m30 + m13 * m20 * m31 - m10 * m23 * m31 - m11 * m20 * m33 + m10 * m21 * m33) / det, 
(m03 * m21 * m30 - m01 * m23 * m30 - m03 * m20 * m31 + m00 * m23 * m31 + m01 * m20 * m33 - m00 * m21 * m33) / det, 
(m01 * m13 * m30 - m03 * m11 * m30 + m03 * m10 * m31 - m00 * m13 * m31 - m01 * m10 * m33 + m00 * m11 * m33) / det, 
(m03 * m11 * m20 - m01 * m13 * m20 - m03 * m10 * m21 + m00 * m13 * m21 + m01 * m10 * m23 - m00 * m11 * m23) / det, 
(m12 * m21 * m30 - m11 * m22 * m30 - m12 * m20 * m31 + m10 * m22 * m31 + m11 * m20 * m32 - m10 * m21 * m32) / det, 
(m01 * m22 * m30 - m02 * m21 * m30 + m02 * m20 * m31 - m00 * m22 * m31 - m01 * m20 * m32 + m00 * m21 * m32) / det, 
(m02 * m11 * m30 - m01 * m12 * m30 - m02 * m10 * m31 + m00 * m12 * m31 + m01 * m10 * m32 - m00 * m11 * m32) / det, 
(m01 * m12 * m20 - m02 * m11 * m20 + m02 * m10 * m21 - m00 * m12 * m21 - m01 * m10 * m22 + m00 * m11 * m22) / det];}, 






transpose:function(m){
return [
m[0], m[4], m[8], m[12], 
m[1], m[5], m[9], m[13], 
m[2], m[6], m[10], m[14], 
m[3], m[7], m[11], m[15]];}, 






multiplyVectorByMatrix:function(
v, 
m)
{var 
vx=v[0];var vy=v[1];var vz=v[2];var vw=v[3];
return [
vx * m[0] + vy * m[4] + vz * m[8] + vw * m[12], 
vx * m[1] + vy * m[5] + vz * m[9] + vw * m[13], 
vx * m[2] + vy * m[6] + vz * m[10] + vw * m[14], 
vx * m[3] + vy * m[7] + vz * m[11] + vw * m[15]];}, 






v3Length:function(a){
return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);}, 





v3Normalize:function(
vector, 
v3Length)
{
var im=1 / (v3Length || MatrixMath.v3Length(vector));
return [
vector[0] * im, 
vector[1] * im, 
vector[2] * im];}, 







v3Dot:function(a, b){
return a[0] * b[0] + 
a[1] * b[1] + 
a[2] * b[2];}, 






v3Combine:function(
a, 
b, 
aScale, 
bScale)
{
return [
aScale * a[0] + bScale * b[0], 
aScale * a[1] + bScale * b[1], 
aScale * a[2] + bScale * b[2]];}, 







v3Cross:function(a, b){
return [
a[1] * b[2] - a[2] * b[1], 
a[2] * b[0] - a[0] * b[2], 
a[0] * b[1] - a[1] * b[0]];}, 



















quaternionToDegreesXYZ:function(q, matrix, row){var 
qx=q[0];var qy=q[1];var qz=q[2];var qw=q[3];
var qw2=qw * qw;
var qx2=qx * qx;
var qy2=qy * qy;
var qz2=qz * qz;
var test=qx * qy + qz * qw;
var unit=qw2 + qx2 + qy2 + qz2;
var conv=180 / Math.PI;

if(test > 0.49999 * unit){
return [0, 2 * Math.atan2(qx, qw) * conv, 90];}

if(test < -0.49999 * unit){
return [0, -2 * Math.atan2(qx, qw) * conv, -90];}


return [
MatrixMath.roundTo3Places(
Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx2 - 2 * qz2) * conv), 

MatrixMath.roundTo3Places(
Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy2 - 2 * qz2) * conv), 

MatrixMath.roundTo3Places(
Math.asin(2 * qx * qy + 2 * qz * qw) * conv)];}, 








roundTo3Places:function(n){
var arr=n.toString().split('e');
return Math.round(arr[0] + 'e' + (arr[1]?+arr[1] - 3:3)) * 0.001;}, 













decomposeMatrix:function(transformMatrix){

invariant(
transformMatrix.length === 16, 
'Matrix decomposition needs a list of 3d matrix values, received %s', 
transformMatrix);



var perspective=[];
var quaternion=[];
var scale=[];
var skew=[];
var translation=[];



if(!transformMatrix[15]){
return;}

var matrix=[];
var perspectiveMatrix=[];
for(var i=0; i < 4; i++) {
matrix.push([]);
for(var j=0; j < 4; j++) {
var value=transformMatrix[i * 4 + j] / transformMatrix[15];
matrix[i].push(value);
perspectiveMatrix.push(j === 3?0:value);}}


perspectiveMatrix[15] = 1;


if(!MatrixMath.determinant(perspectiveMatrix)){
return;}



if(matrix[0][3] !== 0 || matrix[1][3] !== 0 || matrix[2][3] !== 0){


var rightHandSide=[
matrix[0][3], 
matrix[1][3], 
matrix[2][3], 
matrix[3][3]];




var inversePerspectiveMatrix=MatrixMath.inverse3x3(
perspectiveMatrix);

var transposedInversePerspectiveMatrix=MatrixMath.transpose4x4(
inversePerspectiveMatrix);

var perspective=MatrixMath.multiplyVectorByMatrix(
rightHandSide, 
transposedInversePerspectiveMatrix);}else 

{

perspective[0] = perspective[1] = perspective[2] = 0;
perspective[3] = 1;}



for(var i=0; i < 3; i++) {
translation[i] = matrix[3][i];}




var row=[];
for(i = 0; i < 3; i++) {
row[i] = [
matrix[i][0], 
matrix[i][1], 
matrix[i][2]];}




scale[0] = MatrixMath.v3Length(row[0]);
row[0] = MatrixMath.v3Normalize(row[0], scale[0]);


skew[0] = MatrixMath.v3Dot(row[0], row[1]);
row[1] = MatrixMath.v3Combine(row[1], row[0], 1, -skew[0]);


skew[0] = MatrixMath.v3Dot(row[0], row[1]);
row[1] = MatrixMath.v3Combine(row[1], row[0], 1, -skew[0]);


scale[1] = MatrixMath.v3Length(row[1]);
row[1] = MatrixMath.v3Normalize(row[1], scale[1]);
skew[0] /= scale[1];


skew[1] = MatrixMath.v3Dot(row[0], row[2]);
row[2] = MatrixMath.v3Combine(row[2], row[0], 1, -skew[1]);
skew[2] = MatrixMath.v3Dot(row[1], row[2]);
row[2] = MatrixMath.v3Combine(row[2], row[1], 1, -skew[2]);


scale[2] = MatrixMath.v3Length(row[2]);
row[2] = MatrixMath.v3Normalize(row[2], scale[2]);
skew[1] /= scale[2];
skew[2] /= scale[2];




var pdum3=MatrixMath.v3Cross(row[1], row[2]);
if(MatrixMath.v3Dot(row[0], pdum3) < 0){
for(i = 0; i < 3; i++) {
scale[i] *= -1;
row[i][0] *= -1;
row[i][1] *= -1;
row[i][2] *= -1;}}




quaternion[0] = 
0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2], 0));
quaternion[1] = 
0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2], 0));
quaternion[2] = 
0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2], 0));
quaternion[3] = 
0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2], 0));

if(row[2][1] > row[1][2]){
quaternion[0] = -quaternion[0];}

if(row[0][2] > row[2][0]){
quaternion[1] = -quaternion[1];}

if(row[1][0] > row[0][1]){
quaternion[2] = -quaternion[2];}



var rotationDegrees;
if(
quaternion[0] < 0.001 && quaternion[0] >= 0 && 
quaternion[1] < 0.001 && quaternion[1] >= 0)
{

rotationDegrees = [0, 0, MatrixMath.roundTo3Places(
Math.atan2(row[0][1], row[0][0]) * 180 / Math.PI)];}else 

{
rotationDegrees = MatrixMath.quaternionToDegreesXYZ(quaternion, matrix, row);}



return {
rotationDegrees:rotationDegrees, 
perspective:perspective, 
quaternion:quaternion, 
scale:scale, 
skew:skew, 
translation:translation, 

rotate:rotationDegrees[2], 
scaleX:scale[0], 
scaleY:scale[1], 
translateX:translation[0], 
translateY:translation[1]};}};





module.exports = MatrixMath;});
__d('deepFreezeAndThrowOnMutationInDev',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






























function deepFreezeAndThrowOnMutationInDev(object){
if(__DEV__){
if(typeof object !== 'object' || 
object === null || 
Object.isFrozen(object) || 
Object.isSealed(object)){
return;}


for(var key in object) {
if(object.hasOwnProperty(key)){
object.__defineGetter__(key, identity.bind(null, object[key]));
object.__defineSetter__(key, throwOnImmutableMutation.bind(null, key));
deepFreezeAndThrowOnMutationInDev(object[key]);}}


Object.freeze(object);
Object.seal(object);}}



function throwOnImmutableMutation(key, value){
throw Error(
'You attempted to set the key `' + key + '` with the value `' + 
JSON.stringify(value) + '` on an object that is meant to be immutable ' + 
'and has been frozen.');}



function identity(value){
return value;}


module.exports = deepFreezeAndThrowOnMutationInDev;});
__d('ReactNativeEventEmitter',["EventPluginHub","ReactEventEmitterMixin","ReactNativeTagHandles","NodeHandle","EventConstants","merge","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventPluginHub=require('EventPluginHub');
var ReactEventEmitterMixin=require('ReactEventEmitterMixin');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var NodeHandle=require('NodeHandle');
var EventConstants=require('EventConstants');

var merge=require('merge');
var warning=require('warning');

var topLevelTypes=EventConstants.topLevelTypes;







var EMPTY_NATIVE_EVENT={};








var touchSubsequence=function(touches, indices){
var ret=[];
for(var i=0; i < indices.length; i++) {
ret.push(touches[indices[i]]);}

return ret;};













var removeTouchesAtIndices=function(
touches, 
indices)
{
var rippedOut=[];


var temp=touches;
for(var i=0; i < indices.length; i++) {
var index=indices[i];
rippedOut.push(touches[index]);
temp[index] = null;}

var fillAt=0;
for(var j=0; j < temp.length; j++) {
var cur=temp[j];
if(cur !== null){
temp[fillAt++] = cur;}}


temp.length = fillAt;
return rippedOut;};











var ReactNativeEventEmitter=merge(ReactEventEmitterMixin, {

registrationNames:EventPluginHub.registrationNameModules, 

putListener:EventPluginHub.putListener, 

getListener:EventPluginHub.getListener, 

deleteListener:EventPluginHub.deleteListener, 

deleteAllListeners:EventPluginHub.deleteAllListeners, 











_receiveRootNodeIDEvent:function(
rootNodeID, 
topLevelType, 
nativeEventParam)
{
var nativeEvent=nativeEventParam || EMPTY_NATIVE_EVENT;
ReactNativeEventEmitter.handleTopLevel(
topLevelType, 
rootNodeID, 
rootNodeID, 
nativeEvent);}, 










receiveEvent:function(
tag, 
topLevelType, 
nativeEventParam)
{
var rootNodeID=ReactNativeTagHandles.tagToRootNodeID[tag];
ReactNativeEventEmitter._receiveRootNodeIDEvent(
rootNodeID, 
topLevelType, 
nativeEventParam);}, 



























receiveTouches:function(
eventTopLevelType, 
touches, 
changedIndices)
{
var changedTouches=
eventTopLevelType === topLevelTypes.topTouchEnd || 
eventTopLevelType === topLevelTypes.topTouchCancel?
removeTouchesAtIndices(touches, changedIndices):
touchSubsequence(touches, changedIndices);

for(var jj=0; jj < changedTouches.length; jj++) {
var touch=changedTouches[jj];


touch.changedTouches = changedTouches;
touch.touches = touches;
var nativeEvent=touch;
var rootNodeID=null;
var target=nativeEvent.target;
if(target !== null && target !== undefined){
if(target < ReactNativeTagHandles.tagsStartAt){
if(__DEV__){
warning(
false, 
'A view is reporting that a touch occured on tag zero.');}}else 


{
rootNodeID = NodeHandle.getRootNodeID(target);}}


ReactNativeEventEmitter._receiveRootNodeIDEvent(
rootNodeID, 
eventTopLevelType, 
nativeEvent);}}});





module.exports = ReactNativeEventEmitter;});
__d('ReactEventEmitterMixin',["EventPluginHub"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventPluginHub=require('EventPluginHub');

function runEventQueueInBatch(events){
EventPluginHub.enqueueEvents(events);
EventPluginHub.processEventQueue();}


var ReactEventEmitterMixin={










handleTopLevel:function(
topLevelType, 
topLevelTarget, 
topLevelTargetID, 
nativeEvent){
var events=EventPluginHub.extractEvents(
topLevelType, 
topLevelTarget, 
topLevelTargetID, 
nativeEvent);


runEventQueueInBatch(events);}};



module.exports = ReactEventEmitterMixin;});
__d('ReactNativeStyleAttributes',["ImageStylePropTypes","TextStylePropTypes","ViewStylePropTypes","keyMirror","matricesDiffer","sizesDiffer"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};













var ImageStylePropTypes=require('ImageStylePropTypes');
var TextStylePropTypes=require('TextStylePropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');

var keyMirror=require('keyMirror');
var matricesDiffer=require('matricesDiffer');
var sizesDiffer=require('sizesDiffer');

var ReactNativeStyleAttributes=_extends({}, 
keyMirror(ViewStylePropTypes), 
keyMirror(TextStylePropTypes), 
keyMirror(ImageStylePropTypes));


ReactNativeStyleAttributes.transformMatrix = {diff:matricesDiffer};
ReactNativeStyleAttributes.shadowOffset = {diff:sizesDiffer};


ReactNativeStyleAttributes.decomposedMatrix = 'decomposedMatrix';

module.exports = ReactNativeStyleAttributes;});
__d('ImageStylePropTypes',["ImageResizeMode","LayoutPropTypes","ReactPropTypes","TransformPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};












var ImageResizeMode=require('ImageResizeMode');
var LayoutPropTypes=require('LayoutPropTypes');
var ReactPropTypes=require('ReactPropTypes');
var TransformPropTypes=require('TransformPropTypes');

var ImageStylePropTypes=_extends({}, 
LayoutPropTypes, 
TransformPropTypes, {
resizeMode:ReactPropTypes.oneOf(Object.keys(ImageResizeMode)), 
backgroundColor:ReactPropTypes.string, 
borderColor:ReactPropTypes.string, 
borderWidth:ReactPropTypes.number, 
borderRadius:ReactPropTypes.number, 



tintColor:ReactPropTypes.string, 
opacity:ReactPropTypes.number});


module.exports = ImageStylePropTypes;});
__d('ImageResizeMode',["keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var keyMirror=require('keyMirror');





var ImageResizeMode=keyMirror({




contain:null, 




cover:null, 





stretch:null});


module.exports = ImageResizeMode;});
__d('LayoutPropTypes',["ReactPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');






var LayoutPropTypes={
width:ReactPropTypes.number, 
height:ReactPropTypes.number, 
top:ReactPropTypes.number, 
left:ReactPropTypes.number, 
right:ReactPropTypes.number, 
bottom:ReactPropTypes.number, 
margin:ReactPropTypes.number, 
marginVertical:ReactPropTypes.number, 
marginHorizontal:ReactPropTypes.number, 
marginTop:ReactPropTypes.number, 
marginBottom:ReactPropTypes.number, 
marginLeft:ReactPropTypes.number, 
marginRight:ReactPropTypes.number, 
padding:ReactPropTypes.number, 
paddingVertical:ReactPropTypes.number, 
paddingHorizontal:ReactPropTypes.number, 
paddingTop:ReactPropTypes.number, 
paddingBottom:ReactPropTypes.number, 
paddingLeft:ReactPropTypes.number, 
paddingRight:ReactPropTypes.number, 
borderWidth:ReactPropTypes.number, 
borderTopWidth:ReactPropTypes.number, 
borderRightWidth:ReactPropTypes.number, 
borderBottomWidth:ReactPropTypes.number, 
borderLeftWidth:ReactPropTypes.number, 

position:ReactPropTypes.oneOf([
'absolute', 
'relative']), 



flexDirection:ReactPropTypes.oneOf([
'row', 
'column']), 



flexWrap:ReactPropTypes.oneOf([
'wrap', 
'nowrap']), 




justifyContent:ReactPropTypes.oneOf([
'flex-start', 
'flex-end', 
'center', 
'space-between', 
'space-around']), 




alignItems:ReactPropTypes.oneOf([
'flex-start', 
'flex-end', 
'center', 
'stretch']), 




alignSelf:ReactPropTypes.oneOf([
'auto', 
'flex-start', 
'flex-end', 
'center', 
'stretch']), 



flex:ReactPropTypes.number};


module.exports = LayoutPropTypes;});
__d('ReactPropTypes',["ReactElement","ReactFragment","ReactPropTypeLocationNames","emptyFunction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');

var emptyFunction=require('emptyFunction');
















































var ANONYMOUS='<<anonymous>>';

var elementTypeChecker=createElementTypeChecker();
var nodeTypeChecker=createNodeChecker();

var ReactPropTypes={
array:createPrimitiveTypeChecker('array'), 
bool:createPrimitiveTypeChecker('boolean'), 
func:createPrimitiveTypeChecker('function'), 
number:createPrimitiveTypeChecker('number'), 
object:createPrimitiveTypeChecker('object'), 
string:createPrimitiveTypeChecker('string'), 

any:createAnyTypeChecker(), 
arrayOf:createArrayOfTypeChecker, 
element:elementTypeChecker, 
instanceOf:createInstanceTypeChecker, 
node:nodeTypeChecker, 
objectOf:createObjectOfTypeChecker, 
oneOf:createEnumTypeChecker, 
oneOfType:createUnionTypeChecker, 
shape:createShapeTypeChecker};


function createChainableTypeChecker(validate){
function checkType(isRequired, props, propName, componentName, location){
componentName = componentName || ANONYMOUS;
if(props[propName] == null){
var locationName=ReactPropTypeLocationNames[location];
if(isRequired){
return new Error(
'Required ' + locationName + ' `' + propName + '` was not specified in ' + ('`' + 
componentName + '`.'));}


return null;}else 
{
return validate(props, propName, componentName, location);}}



var chainedCheckType=checkType.bind(null, false);
chainedCheckType.isRequired = checkType.bind(null, true);

return chainedCheckType;}


function createPrimitiveTypeChecker(expectedType){
function validate(props, propName, componentName, location){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== expectedType){
var locationName=ReactPropTypeLocationNames[location];



var preciseType=getPreciseType(propValue);

return new Error(
'Invalid ' + locationName + ' `' + propName + '` of type `' + preciseType + '` ' + ('supplied to `' + 
componentName + '`, expected `' + expectedType + '`.'));}


return null;}

return createChainableTypeChecker(validate);}


function createAnyTypeChecker(){
return createChainableTypeChecker(emptyFunction.thatReturns(null));}


function createArrayOfTypeChecker(typeChecker){
function validate(props, propName, componentName, location){
var propValue=props[propName];
if(!Array.isArray(propValue)){
var locationName=ReactPropTypeLocationNames[location];
var propType=getPropType(propValue);
return new Error(
'Invalid ' + locationName + ' `' + propName + '` of type ' + ('`' + 
propType + '` supplied to `' + componentName + '`, expected an array.'));}


for(var i=0; i < propValue.length; i++) {
var error=typeChecker(propValue, i, componentName, location);
if(error instanceof Error){
return error;}}


return null;}

return createChainableTypeChecker(validate);}


function createElementTypeChecker(){
function validate(props, propName, componentName, location){
if(!ReactElement.isValidElement(props[propName])){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propName + '` supplied to ' + ('`' + 
componentName + '`, expected a ReactElement.'));}


return null;}

return createChainableTypeChecker(validate);}


function createInstanceTypeChecker(expectedClass){
function validate(props, propName, componentName, location){
if(!(props[propName] instanceof expectedClass)){
var locationName=ReactPropTypeLocationNames[location];
var expectedClassName=expectedClass.name || ANONYMOUS;
return new Error(
'Invalid ' + locationName + ' `' + propName + '` supplied to ' + ('`' + 
componentName + '`, expected instance of `' + expectedClassName + '`.'));}


return null;}

return createChainableTypeChecker(validate);}


function createEnumTypeChecker(expectedValues){
function validate(props, propName, componentName, location){
var propValue=props[propName];
for(var i=0; i < expectedValues.length; i++) {
if(propValue === expectedValues[i]){
return null;}}



var locationName=ReactPropTypeLocationNames[location];
var valuesString=JSON.stringify(expectedValues);
return new Error(
'Invalid ' + locationName + ' `' + propName + '` of value `' + propValue + '` ' + ('supplied to `' + 
componentName + '`, expected one of ' + valuesString + '.'));}


return createChainableTypeChecker(validate);}


function createObjectOfTypeChecker(typeChecker){
function validate(props, propName, componentName, location){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== 'object'){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propName + '` of type ' + ('`' + 
propType + '` supplied to `' + componentName + '`, expected an object.'));}


for(var key in propValue) {
if(propValue.hasOwnProperty(key)){
var error=typeChecker(propValue, key, componentName, location);
if(error instanceof Error){
return error;}}}



return null;}

return createChainableTypeChecker(validate);}


function createUnionTypeChecker(arrayOfTypeCheckers){
function validate(props, propName, componentName, location){
for(var i=0; i < arrayOfTypeCheckers.length; i++) {
var checker=arrayOfTypeCheckers[i];
if(checker(props, propName, componentName, location) == null){
return null;}}



var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propName + '` supplied to ' + ('`' + 
componentName + '`.'));}


return createChainableTypeChecker(validate);}


function createNodeChecker(){
function validate(props, propName, componentName, location){
if(!isNode(props[propName])){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propName + '` supplied to ' + ('`' + 
componentName + '`, expected a ReactNode.'));}


return null;}

return createChainableTypeChecker(validate);}


function createShapeTypeChecker(shapeTypes){
function validate(props, propName, componentName, location){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== 'object'){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propName + '` of type `' + propType + '` ' + ('supplied to `' + 
componentName + '`, expected `object`.'));}


for(var key in shapeTypes) {
var checker=shapeTypes[key];
if(!checker){
continue;}

var error=checker(propValue, key, componentName, location);
if(error){
return error;}}


return null;}

return createChainableTypeChecker(validate);}


function isNode(propValue){
switch(typeof propValue){
case 'number':
case 'string':
case 'undefined':
return true;
case 'boolean':
return !propValue;
case 'object':
if(Array.isArray(propValue)){
return propValue.every(isNode);}

if(propValue === null || ReactElement.isValidElement(propValue)){
return true;}

propValue = ReactFragment.extractIfFragment(propValue);
for(var k in propValue) {
if(!isNode(propValue[k])){
return false;}}


return true;
default:
return false;}}




function getPropType(propValue){
var propType=typeof propValue;
if(Array.isArray(propValue)){
return 'array';}

if(propValue instanceof RegExp){



return 'object';}

return propType;}




function getPreciseType(propValue){
var propType=getPropType(propValue);
if(propType === 'object'){
if(propValue instanceof Date){
return 'date';}else 
if(propValue instanceof RegExp){
return 'regexp';}}


return propType;}


module.exports = ReactPropTypes;});
__d('TransformPropTypes',["ReactPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');

var TransformPropTypes={
transform:ReactPropTypes.arrayOf(
ReactPropTypes.oneOfType([
ReactPropTypes.shape({rotate:ReactPropTypes.string}), 
ReactPropTypes.shape({scaleX:ReactPropTypes.number}), 
ReactPropTypes.shape({scaleY:ReactPropTypes.number}), 
ReactPropTypes.shape({translateX:ReactPropTypes.number}), 
ReactPropTypes.shape({translateY:ReactPropTypes.number})])), 


transformMatrix:ReactPropTypes.arrayOf(ReactPropTypes.number), 


rotation:ReactPropTypes.number, 
scaleX:ReactPropTypes.number, 
scaleY:ReactPropTypes.number, 
translateX:ReactPropTypes.number, 
translateY:ReactPropTypes.number};


module.exports = TransformPropTypes;});
__d('TextStylePropTypes',["ReactPropTypes","ViewStylePropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');


var TextStylePropTypes=Object.assign(Object.create(ViewStylePropTypes), {
fontFamily:ReactPropTypes.string, 
fontSize:ReactPropTypes.number, 
fontWeight:ReactPropTypes.oneOf(
['normal', 'bold', 
'100', '200', '300', '400', '500', '600', '700', '800', '900']), 

fontStyle:ReactPropTypes.oneOf(['normal', 'italic']), 
lineHeight:ReactPropTypes.number, 
color:ReactPropTypes.string, 
containerBackgroundColor:ReactPropTypes.string, 
textAlign:ReactPropTypes.oneOf(
['auto', 'left', 'right', 'center']), 

writingDirection:ReactPropTypes.oneOf(
['auto', 'ltr', 'rtl']), 

letterSpacing:ReactPropTypes.number});



var unsupportedProps=Object.keys({
padding:null, 
paddingTop:null, 
paddingLeft:null, 
paddingRight:null, 
paddingBottom:null, 
paddingVertical:null, 
paddingHorizontal:null});


for(var ii=0; ii < unsupportedProps.length; ii++) {
delete TextStylePropTypes[unsupportedProps[ii]];}


module.exports = TextStylePropTypes;});
__d('ViewStylePropTypes',["LayoutPropTypes","ReactPropTypes","TransformPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};












var LayoutPropTypes=require('LayoutPropTypes');
var ReactPropTypes=require('ReactPropTypes');
var TransformPropTypes=require('TransformPropTypes');




var ViewStylePropTypes=_extends({}, 
LayoutPropTypes, 
TransformPropTypes, {
backgroundColor:ReactPropTypes.string, 
borderColor:ReactPropTypes.string, 
borderTopColor:ReactPropTypes.string, 
borderRightColor:ReactPropTypes.string, 
borderBottomColor:ReactPropTypes.string, 
borderLeftColor:ReactPropTypes.string, 
borderRadius:ReactPropTypes.number, 
borderTopLeftRadius:ReactPropTypes.number, 
borderTopRightRadius:ReactPropTypes.number, 
borderBottomLeftRadius:ReactPropTypes.number, 
borderBottomRightRadius:ReactPropTypes.number, 
opacity:ReactPropTypes.number, 
overflow:ReactPropTypes.oneOf(['visible', 'hidden']), 
shadowColor:ReactPropTypes.string, 
shadowOffset:ReactPropTypes.shape(
{width:ReactPropTypes.number, height:ReactPropTypes.number}), 

shadowOpacity:ReactPropTypes.number, 
shadowRadius:ReactPropTypes.number});


module.exports = ViewStylePropTypes;});
__d('matricesDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















var matricesDiffer=function(one, two){
if(one === two){
return false;}

return !one || !two || 
one[12] !== two[12] || 
one[13] !== two[13] || 
one[14] !== two[14] || 
one[5] !== two[5] || 
one[10] !== two[10] || 
one[1] !== two[1] || 
one[2] !== two[2] || 
one[3] !== two[3] || 
one[4] !== two[4] || 
one[6] !== two[6] || 
one[7] !== two[7] || 
one[8] !== two[8] || 
one[9] !== two[9] || 
one[11] !== two[11] || 
one[15] !== two[15];};


module.exports = matricesDiffer;});
__d('sizesDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






var dummySize={width:undefined, height:undefined};

var sizesDiffer=function(one, two){
one = one || dummySize;
two = two || dummySize;
return one !== two && (
one.width !== two.width || 
one.height !== two.height);};



module.exports = sizesDiffer;});
__d('ReactMultiChild',["ReactComponentEnvironment","ReactMultiChildUpdateTypes","ReactReconciler","ReactChildReconciler"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactMultiChildUpdateTypes=require('ReactMultiChildUpdateTypes');

var ReactReconciler=require('ReactReconciler');
var ReactChildReconciler=require('ReactChildReconciler');








var updateDepth=0;









var updateQueue=[];







var markupQueue=[];









function enqueueMarkup(parentID, markup, toIndex){

updateQueue.push({
parentID:parentID, 
parentNode:null, 
type:ReactMultiChildUpdateTypes.INSERT_MARKUP, 
markupIndex:markupQueue.push(markup) - 1, 
textContent:null, 
fromIndex:null, 
toIndex:toIndex});}











function enqueueMove(parentID, fromIndex, toIndex){

updateQueue.push({
parentID:parentID, 
parentNode:null, 
type:ReactMultiChildUpdateTypes.MOVE_EXISTING, 
markupIndex:null, 
textContent:null, 
fromIndex:fromIndex, 
toIndex:toIndex});}










function enqueueRemove(parentID, fromIndex){

updateQueue.push({
parentID:parentID, 
parentNode:null, 
type:ReactMultiChildUpdateTypes.REMOVE_NODE, 
markupIndex:null, 
textContent:null, 
fromIndex:fromIndex, 
toIndex:null});}










function enqueueTextContent(parentID, textContent){

updateQueue.push({
parentID:parentID, 
parentNode:null, 
type:ReactMultiChildUpdateTypes.TEXT_CONTENT, 
markupIndex:null, 
textContent:textContent, 
fromIndex:null, 
toIndex:null});}








function processQueue(){
if(updateQueue.length){
ReactComponentEnvironment.processChildrenUpdates(
updateQueue, 
markupQueue);

clearQueue();}}








function clearQueue(){
updateQueue.length = 0;
markupQueue.length = 0;}








var ReactMultiChild={








Mixin:{









mountChildren:function(nestedChildren, transaction, context){
var children=ReactChildReconciler.instantiateChildren(
nestedChildren, transaction, context);

this._renderedChildren = children;
var mountImages=[];
var index=0;
for(var name in children) {
if(children.hasOwnProperty(name)){
var child=children[name];

var rootID=this._rootNodeID + name;
var mountImage=ReactReconciler.mountComponent(
child, 
rootID, 
transaction, 
context);

child._mountIndex = index;
mountImages.push(mountImage);
index++;}}


return mountImages;}, 








updateTextContent:function(nextContent){
updateDepth++;
var errorThrown=true;
try{
var prevChildren=this._renderedChildren;

ReactChildReconciler.unmountChildren(prevChildren);

for(var name in prevChildren) {
if(prevChildren.hasOwnProperty(name)){
this._unmountChildByName(prevChildren[name], name);}}



this.setTextContent(nextContent);
errorThrown = false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}}, 












updateChildren:function(nextNestedChildren, transaction, context){
updateDepth++;
var errorThrown=true;
try{
this._updateChildren(nextNestedChildren, transaction, context);
errorThrown = false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}}, 















_updateChildren:function(nextNestedChildren, transaction, context){
var prevChildren=this._renderedChildren;
var nextChildren=ReactChildReconciler.updateChildren(
prevChildren, nextNestedChildren, transaction, context);

this._renderedChildren = nextChildren;
if(!nextChildren && !prevChildren){
return;}

var name;


var lastIndex=0;
var nextIndex=0;
for(name in nextChildren) {
if(!nextChildren.hasOwnProperty(name)){
continue;}

var prevChild=prevChildren && prevChildren[name];
var nextChild=nextChildren[name];
if(prevChild === nextChild){
this.moveChild(prevChild, nextIndex, lastIndex);
lastIndex = Math.max(prevChild._mountIndex, lastIndex);
prevChild._mountIndex = nextIndex;}else 
{
if(prevChild){

lastIndex = Math.max(prevChild._mountIndex, lastIndex);
this._unmountChildByName(prevChild, name);}


this._mountChildByNameAtIndex(
nextChild, name, nextIndex, transaction, context);}


nextIndex++;}


for(name in prevChildren) {
if(prevChildren.hasOwnProperty(name) && 
!(nextChildren && nextChildren.hasOwnProperty(name))){
this._unmountChildByName(prevChildren[name], name);}}}, 










unmountChildren:function(){
var renderedChildren=this._renderedChildren;
ReactChildReconciler.unmountChildren(renderedChildren);
this._renderedChildren = null;}, 










moveChild:function(child, toIndex, lastIndex){



if(child._mountIndex < lastIndex){
enqueueMove(this._rootNodeID, child._mountIndex, toIndex);}}, 










createChild:function(child, mountImage){
enqueueMarkup(this._rootNodeID, mountImage, child._mountIndex);}, 








removeChild:function(child){
enqueueRemove(this._rootNodeID, child._mountIndex);}, 








setTextContent:function(textContent){
enqueueTextContent(this._rootNodeID, textContent);}, 













_mountChildByNameAtIndex:function(
child, 
name, 
index, 
transaction, 
context){

var rootID=this._rootNodeID + name;
var mountImage=ReactReconciler.mountComponent(
child, 
rootID, 
transaction, 
context);

child._mountIndex = index;
this.createChild(child, mountImage);}, 











_unmountChildByName:function(child, name){
this.removeChild(child);
child._mountIndex = null;}}};






module.exports = ReactMultiChild;});
__d('ReactChildReconciler',["ReactReconciler","flattenChildren","instantiateReactComponent","shouldUpdateReactComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactReconciler=require('ReactReconciler');

var flattenChildren=require('flattenChildren');
var instantiateReactComponent=require('instantiateReactComponent');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');






var ReactChildReconciler={









instantiateChildren:function(nestedChildNodes, transaction, context){
var children=flattenChildren(nestedChildNodes);
for(var name in children) {
if(children.hasOwnProperty(name)){
var child=children[name];


var childInstance=instantiateReactComponent(child, null);
children[name] = childInstance;}}


return children;}, 












updateChildren:function(
prevChildren, 
nextNestedChildNodes, 
transaction, 
context){





var nextChildren=flattenChildren(nextNestedChildNodes);
if(!nextChildren && !prevChildren){
return null;}

var name;
for(name in nextChildren) {
if(!nextChildren.hasOwnProperty(name)){
continue;}

var prevChild=prevChildren && prevChildren[name];
var prevElement=prevChild && prevChild._currentElement;
var nextElement=nextChildren[name];
if(shouldUpdateReactComponent(prevElement, nextElement)){
ReactReconciler.receiveComponent(
prevChild, nextElement, transaction, context);

nextChildren[name] = prevChild;}else 
{
if(prevChild){
ReactReconciler.unmountComponent(prevChild, name);}


var nextChildInstance=instantiateReactComponent(
nextElement, 
null);

nextChildren[name] = nextChildInstance;}}



for(name in prevChildren) {
if(prevChildren.hasOwnProperty(name) && 
!(nextChildren && nextChildren.hasOwnProperty(name))){
ReactReconciler.unmountComponent(prevChildren[name]);}}


return nextChildren;}, 









unmountChildren:function(renderedChildren){
for(var name in renderedChildren) {
var renderedChild=renderedChildren[name];
ReactReconciler.unmountComponent(renderedChild);}}};





module.exports = ReactChildReconciler;});
__d('flattenChildren',["traverseAllChildren","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var traverseAllChildren=require('traverseAllChildren');
var warning=require('warning');






function flattenSingleChildIntoContext(traverseContext, child, name){

var result=traverseContext;
var keyUnique=!result.hasOwnProperty(name);
if(__DEV__){
warning(
keyUnique, 
'flattenChildren(...): Encountered two children with the same key, ' + 
'`%s`. Child keys must be unique; when two children share a key, only ' + 
'the first child will be used.', 
name);}


if(keyUnique && child != null){
result[name] = child;}}








function flattenChildren(children){
if(children == null){
return children;}

var result={};
traverseAllChildren(children, flattenSingleChildIntoContext, result);
return result;}


module.exports = flattenChildren;});
__d('styleDiffer',["deepDiffer"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var deepDiffer=require('deepDiffer');

function styleDiffer(a, b){
return !styleEqual(a, b);}


function styleEqual(a, b){
if(!a){
return !b;}

if(!b){
return !a;}

if(typeof a !== typeof b){
return false;}

if(typeof a === 'number'){
return a === b;}


if(Array.isArray(a)){
if(!Array.isArray(b) || a.length !== b.length){
return false;}

for(var i=0; i < a.length; ++i) {
if(!styleEqual(a[i], b[i])){
return false;}}


return true;}


for(var key in a) {
if(deepDiffer(a[key], b[key])){
return false;}}



for(var key in b) {
if(!a.hasOwnProperty(key)){
return false;}}



return true;}


module.exports = styleDiffer;});
__d('deepDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';















var deepDiffer=function(one, two){
if(one === two){

return false;}

if(typeof one === 'function' && typeof two === 'function'){

return false;}

if(typeof one !== 'object' || one === null){

return one !== two;}

if(typeof two !== 'object' || two === null){


return true;}

if(one.constructor !== two.constructor){
return true;}

if(Array.isArray(one)){

var len=one.length;
if(two.length !== len){
return true;}

for(var ii=0; ii < len; ii++) {
if(deepDiffer(one[ii], two[ii])){
return true;}}}else 


{
for(var key in one) {
if(deepDiffer(one[key], two[key])){
return true;}}


for(var twoKey in two) {


if(one[twoKey] === undefined && two[twoKey] !== undefined){
return true;}}}



return false;};


module.exports = deepDiffer;});
__d('diffRawProperties',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';























function diffRawProperties(
updatePayload, 
prevProps, 
nextProps, 
validAttributes)
{
var validAttributeConfig;
var nextProp;
var prevProp;
var isScalar;
var shouldUpdate;

if(nextProps){
for(var propKey in nextProps) {
validAttributeConfig = validAttributes[propKey];
if(!validAttributeConfig){
continue;}

prevProp = prevProps && prevProps[propKey];
nextProp = nextProps[propKey];



if(typeof prevProp === 'function'){
prevProp = true;}

if(typeof nextProp === 'function'){
nextProp = true;}


if(prevProp !== nextProp){




isScalar = typeof nextProp !== 'object' || nextProp === null;
shouldUpdate = isScalar || 
!prevProp || 
validAttributeConfig.diff && 
validAttributeConfig.diff(prevProp, nextProp);

if(shouldUpdate){
updatePayload = updatePayload || {};
updatePayload[propKey] = nextProp;}}}}








if(prevProps){
for(var propKey in prevProps) {
validAttributeConfig = validAttributes[propKey];
if(!validAttributeConfig){
continue;}

if(updatePayload && updatePayload[propKey] !== undefined){
continue;}

prevProp = prevProps[propKey];
nextProp = nextProps && nextProps[propKey];



if(typeof prevProp === 'function'){
prevProp = true;}

if(typeof nextProp === 'function'){
nextProp = true;}


if(prevProp !== nextProp){
if(nextProp === undefined){
nextProp = null;}





isScalar = typeof nextProp !== 'object' || nextProp === null;
shouldUpdate = isScalar && prevProp !== nextProp || 
validAttributeConfig.diff && 
validAttributeConfig.diff(prevProp, nextProp);
if(shouldUpdate){
updatePayload = updatePayload || {};
updatePayload[propKey] = nextProp;}}}}




return updatePayload;}


module.exports = diffRawProperties;});
__d('RCTEventEmitter',["ReactNativeEventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeEventEmitter=require('ReactNativeEventEmitter');


module.exports = ReactNativeEventEmitter;});
__d('RCTLog',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var invariant=require('invariant');

var levelsMap={
log:'log', 
info:'info', 
warn:'warn', 
error:'error', 
mustfix:'error'};var 


RCTLog=(function(){function RCTLog(){_classCallCheck(this, RCTLog);}_createClass(RCTLog, null, [{key:'logIfNoNativeHook', value:

function logIfNoNativeHook(){
var args=Array.prototype.slice.call(arguments);
var level=args.shift();
var logFn=levelsMap[level];
invariant(
logFn, 
'Level "' + level + '" not one of ' + Object.keys(levelsMap));

if(typeof global.nativeLoggingHook === 'undefined'){

console[logFn].apply(console, args);}

return true;}}]);return RCTLog;})();



module.exports = RCTLog;});
__d('RCTJSTimers',["JSTimersExecution"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var JSTimersExecution=require('JSTimersExecution');

var RCTJSTimers=JSTimersExecution;

module.exports = RCTJSTimers;});
__d('deprecated',["Object.assign","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var assign=require('Object.assign');
var warning=require('warning');












function deprecated(namespace, oldName, newName, ctx, fn){
var warned=false;
if(__DEV__){
var newFn=function(){
warning(
warned, 
'%s.%s will be deprecated in a future version. ' + 
'Use %s.%s instead.', 
namespace, 
oldName, 
namespace, 
newName);

warned = true;
return fn.apply(ctx, arguments);};

newFn.displayName = '' + namespace + '_' + oldName;


return assign(newFn, fn);}


return fn;}


module.exports = deprecated;});
__d('onlyChild',["ReactElement","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var ReactElement=require('ReactElement');

var invariant=require('invariant');












function onlyChild(children){
invariant(
ReactElement.isValidElement(children), 
'onlyChild must be passed a children with exactly one child.');

return children;}


module.exports = onlyChild;});
__d('ActivityIndicatorIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","View","requireNativeComponent","verifyPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';function _objectWithoutProperties(obj, keys){var target={};for(var i in obj) {if(keys.indexOf(i) >= 0)continue;if(!Object.prototype.hasOwnProperty.call(obj, i))continue;target[i] = obj[i];}return target;}












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');
var verifyPropTypes=require('verifyPropTypes');

var GRAY='#999999';








var ActivityIndicatorIOS=React.createClass({displayName:'ActivityIndicatorIOS', 
mixins:[NativeMethodsMixin], 

propTypes:{



animating:PropTypes.bool, 



color:PropTypes.string, 



hidesWhenStopped:PropTypes.bool, 



size:PropTypes.oneOf([
'small', 
'large']), 






onLayout:PropTypes.func}, 


getDefaultProps:function(){
return {
animating:true, 
color:GRAY, 
hidesWhenStopped:true, 
size:'small'};}, 



render:function(){var _props=
this.props;var onLayout=_props.onLayout;var style=_props.style;var props=_objectWithoutProperties(_props, ['onLayout', 'style']);
var sizeStyle=this.props.size === 'large'?styles.sizeLarge:styles.sizeSmall;
return (
React.createElement(View, {
onLayout:onLayout, 
style:[styles.container, sizeStyle, style]}, 
React.createElement(RCTActivityIndicatorView, props)));}});





var styles=StyleSheet.create({
container:{
alignItems:'center', 
justifyContent:'center'}, 

sizeSmall:{
height:20}, 

sizeLarge:{
height:36}});



var RCTActivityIndicatorView=requireNativeComponent(
'RCTActivityIndicatorView', 
null);

if(__DEV__){
var nativeOnlyProps={activityIndicatorViewStyle:true};
verifyPropTypes(
ActivityIndicatorIOS, 
RCTActivityIndicatorView.viewConfig, 
nativeOnlyProps);}



module.exports = ActivityIndicatorIOS;});
__d('StyleSheet',["StyleSheetRegistry","StyleSheetValidation"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var StyleSheetRegistry=require('StyleSheetRegistry');
var StyleSheetValidation=require('StyleSheetValidation');var 













































StyleSheet=(function(){function StyleSheet(){_classCallCheck(this, StyleSheet);}_createClass(StyleSheet, null, [{key:'create', value:
function create(obj){
var result={};
for(var key in obj) {
StyleSheetValidation.validateStyle(key, obj);
result[key] = StyleSheetRegistry.registerStyle(obj[key]);}

return result;}}]);return StyleSheet;})();



module.exports = StyleSheet;});
__d('StyleSheetValidation',["ImageStylePropTypes","ReactPropTypeLocations","TextStylePropTypes","ViewStylePropTypes","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var ImageStylePropTypes=require('ImageStylePropTypes');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var TextStylePropTypes=require('TextStylePropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');

var invariant=require('invariant');var 

StyleSheetValidation=(function(){function StyleSheetValidation(){_classCallCheck(this, StyleSheetValidation);}_createClass(StyleSheetValidation, null, [{key:'validateStyleProp', value:
function validateStyleProp(prop, style, caller){
if(!__DEV__){
return;}

if(allStylePropTypes[prop] === undefined){
var message1='"' + prop + '" is not a valid style property.';
var message2='\nValid style props: ' + 
JSON.stringify(Object.keys(allStylePropTypes), null, '  ');
styleError(message1, style, caller, message2);}

var error=allStylePropTypes[prop](
style, 
prop, 
caller, 
ReactPropTypeLocations.prop);

if(error){
styleError(error.message, style, caller);}}}, {key:'validateStyle', value:



function validateStyle(name, styles){
if(!__DEV__){
return;}

for(var prop in styles[name]) {
StyleSheetValidation.validateStyleProp(prop, styles[name], 'StyleSheet ' + name);}}}, {key:'addValidStylePropTypes', value:



function addValidStylePropTypes(stylePropTypes){
for(var key in stylePropTypes) {
invariant(
allStylePropTypes[key] === undefined || 
allStylePropTypes[key] === stylePropTypes[key], 
'Attemped to redefine existing style prop type "' + key + '".');

allStylePropTypes[key] = stylePropTypes[key];}}}]);return StyleSheetValidation;})();




var styleError=function(message1, style, caller, message2){
invariant(
false, 
message1 + '\n' + (caller || '<<unknown>>') + ': ' + 
JSON.stringify(style, null, '  ') + (message2 || ''));};



var allStylePropTypes={};

StyleSheetValidation.addValidStylePropTypes(ImageStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(TextStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(ViewStylePropTypes);

module.exports = StyleSheetValidation;});
__d('View',["NativeMethodsMixin","ReactPropTypes","NativeModules","React","ReactNativeStyleAttributes","ReactNativeViewAttributes","StyleSheetPropType","ViewStylePropTypes","createReactNativeComponentClass"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var RCTUIManager=require('NativeModules').UIManager;
var React=require('React');
var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheetPropType=require('StyleSheetPropType');
var ViewStylePropTypes=require('ViewStylePropTypes');

var createReactNativeComponentClass=require('createReactNativeComponentClass');

var stylePropType=StyleSheetPropType(ViewStylePropTypes);

var AccessibilityTraits=[
'none', 
'button', 
'link', 
'header', 
'search', 
'image', 
'selected', 
'plays', 
'key', 
'text', 
'summary', 
'disabled', 
'frequentUpdates', 
'startsMedia', 
'adjustable', 
'allowsDirectInteraction', 
'pageTurn'];






















var View=React.createClass({displayName:'View', 
mixins:[NativeMethodsMixin], 





viewConfig:{
uiViewClassName:'RCTView', 
validAttributes:ReactNativeViewAttributes.RCTView}, 


propTypes:{




accessible:PropTypes.bool, 






accessibilityLabel:PropTypes.string, 





accessibilityTraits:PropTypes.oneOfType([
PropTypes.oneOf(AccessibilityTraits), 
PropTypes.arrayOf(PropTypes.oneOf(AccessibilityTraits))]), 






onAcccessibilityTap:PropTypes.func, 





onMagicTap:PropTypes.func, 




testID:PropTypes.string, 






onMoveShouldSetResponder:PropTypes.func, 
onResponderGrant:PropTypes.func, 
onResponderMove:PropTypes.func, 
onResponderReject:PropTypes.func, 
onResponderRelease:PropTypes.func, 
onResponderTerminate:PropTypes.func, 
onResponderTerminationRequest:PropTypes.func, 
onStartShouldSetResponder:PropTypes.func, 
onStartShouldSetResponderCapture:PropTypes.func, 






onLayout:PropTypes.func, 































pointerEvents:PropTypes.oneOf([
'box-none', 
'none', 
'box-only', 
'auto']), 

style:stylePropType, 









removeClippedSubviews:PropTypes.bool, 













renderToHardwareTextureAndroid:PropTypes.bool}, 


render:function(){
return React.createElement(RCTView, this.props);}});



var RCTView=createReactNativeComponentClass({
validAttributes:ReactNativeViewAttributes.RCTView, 
uiViewClassName:'RCTView'});

RCTView.propTypes = View.propTypes;
if(__DEV__){
var viewConfig=RCTUIManager.viewConfigs && RCTUIManager.viewConfigs.RCTView || {};
for(var prop in viewConfig.nativeProps) {
var viewAny=View;
if(!viewAny.propTypes[prop] && !ReactNativeStyleAttributes[prop]){
throw new Error(
'View is missing propType for native prop `' + prop + '`');}}}





var ViewToExport=RCTView;
if(__DEV__){
ViewToExport = View;}


module.exports = ViewToExport;});
__d('ReactNativeViewAttributes',["merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var merge=require('merge');

var ReactNativeViewAttributes={};

ReactNativeViewAttributes.UIView = {
pointerEvents:true, 
accessible:true, 
accessibilityLabel:true, 
accessibilityTraits:true, 
testID:true, 
onLayout:true, 
onAccessibilityTap:true, 
onMagicTap:true};


ReactNativeViewAttributes.RCTView = merge(
ReactNativeViewAttributes.UIView, {






removeClippedSubviews:true});


module.exports = ReactNativeViewAttributes;});
__d('StyleSheetPropType',["createStrictShapeTypeChecker","flattenStyle"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var flattenStyle=require('flattenStyle');

function StyleSheetPropType(
shape)
{
var shapePropType=createStrictShapeTypeChecker(shape);
return function(props, propName, componentName, location){
var newProps=props;
if(props[propName]){

newProps = {};
newProps[propName] = flattenStyle(props[propName]);}

return shapePropType(newProps, propName, componentName, location);};}



module.exports = StyleSheetPropType;});
__d('createStrictShapeTypeChecker',["ReactPropTypeLocationNames","invariant","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');

var invariant=require('invariant');
var merge=require('merge');

function createStrictShapeTypeChecker(
shapeTypes)
{
function checkType(isRequired, props, propName, componentName, location){
if(!props[propName]){
if(isRequired){
invariant(
false, 
'Required object `' + propName + '` was not specified in ' + ('`' + 
componentName + '`.'));}


return;}

var propValue=props[propName];
var propType=typeof propValue;
var locationName=
location && ReactPropTypeLocationNames[location] || '(unknown)';
if(propType !== 'object'){
invariant(
false, 
'Invalid ' + locationName + ' `' + propName + '` of type `' + propType + '` ' + ('supplied to `' + 
componentName + '`, expected `object`.'));}




var allKeys=merge(props[propName], shapeTypes);
for(var key in allKeys) {
var checker=shapeTypes[key];
if(!checker){
invariant(
false, 
'Invalid props.' + propName + ' key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + 
JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + 
JSON.stringify(Object.keys(shapeTypes), null, '  '));}


var error=checker(propValue, key, componentName, location);
if(error){
invariant(
false, 
error.message + '\nBad object: ' + 
JSON.stringify(props[propName], null, '  '));}}}




function chainedCheckType(
props, 
propName, 
componentName, 
location)
{
return checkType(false, props, propName, componentName, location);}

chainedCheckType.isRequired = checkType.bind(null, true);
return chainedCheckType;}


module.exports = createStrictShapeTypeChecker;});
__d('requireNativeComponent',["NativeModules","UnimplementedView","createReactNativeComponentClass","deepDiffer","insetsDiffer","pointsDiffer","matricesDiffer","sizesDiffer","verifyPropTypes","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};












var RCTUIManager=require('NativeModules').UIManager;
var UnimplementedView=require('UnimplementedView');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var deepDiffer=require('deepDiffer');
var insetsDiffer=require('insetsDiffer');
var pointsDiffer=require('pointsDiffer');
var matricesDiffer=require('matricesDiffer');
var sizesDiffer=require('sizesDiffer');
var verifyPropTypes=require('verifyPropTypes');
var warning=require('warning');
















function requireNativeComponent(
viewName, 
wrapperComponent)
{
var viewConfig=RCTUIManager[viewName];
if(!viewConfig || !viewConfig.NativeProps){
warning(false, 'Native component for "%s" does not exist', viewName);
return UnimplementedView;}

var nativeProps=_extends({}, 
RCTUIManager.RCTView.NativeProps, 
viewConfig.NativeProps);

viewConfig.uiViewClassName = viewName;
viewConfig.validAttributes = {};
for(var key in nativeProps) {

var differ=TypeToDifferMap[nativeProps[key]] || deepDiffer;
viewConfig.validAttributes[key] = {diff:differ};}

if(__DEV__){
wrapperComponent && verifyPropTypes(wrapperComponent, viewConfig);}

return createReactNativeComponentClass(viewConfig);}


var TypeToDifferMap={

CATransform3D:matricesDiffer, 
CGPoint:pointsDiffer, 
CGSize:sizesDiffer, 
UIEdgeInsets:insetsDiffer};




module.exports = requireNativeComponent;});
__d('UnimplementedView',["React","StyleSheet","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';








var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var UnimplementedView=React.createClass({displayName:'UnimplementedView', 
setNativeProps:function(){}, 




render:function(){
return (
React.createElement(View, {style:[styles.unimplementedView, this.props.style]}, 
this.props.children));}});





var styles=StyleSheet.create({
unimplementedView:{
borderWidth:1, 
borderColor:'red', 
alignSelf:'flex-start'}});



module.exports = UnimplementedView;});
__d('insetsDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var dummyInsets={
top:undefined, 
left:undefined, 
right:undefined, 
bottom:undefined};


var insetsDiffer=function(
one, 
two)
{
one = one || dummyInsets;
two = two || dummyInsets;
return one !== two && (
one.top !== two.top || 
one.left !== two.left || 
one.right !== two.right || 
one.bottom !== two.bottom);};



module.exports = insetsDiffer;});
__d('pointsDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

















var dummyPoint={x:undefined, y:undefined};

var pointsDiffer=function(one, two){
one = one || dummyPoint;
two = two || dummyPoint;
return one !== two && (
one.x !== two.x || 
one.y !== two.y);};



module.exports = pointsDiffer;});
__d('verifyPropTypes',["ReactNativeStyleAttributes","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var View=require('View');

function verifyPropTypes(
component, 
viewConfig, 
nativePropsToIgnore)
{
if(!viewConfig){
return;}

var componentName=component.name || component.displayName;
if(!component.propTypes){
throw new Error(
'`' + componentName + '` has no propTypes defined`');}



var nativeProps=viewConfig.NativeProps;
for(var prop in nativeProps) {
if(!component.propTypes[prop] && 
!View.propTypes[prop] && 
!ReactNativeStyleAttributes[prop] && (
!nativePropsToIgnore || !nativePropsToIgnore[prop])){
throw new Error(
'`' + componentName + '` has no propType for native prop `' + 
viewConfig.uiViewClassName + '.' + prop + '` of native type `' + 
nativeProps[prop] + '`');}}}





module.exports = verifyPropTypes;});
__d('DatePickerIOS',["NativeMethodsMixin","ReactPropTypes","React","NativeModules","StyleSheet","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var RCTDatePickerIOSConsts=require('NativeModules').UIManager.RCTDatePicker.Constants;
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var DATEPICKER='datepicker';














var DatePickerIOS=React.createClass({displayName:'DatePickerIOS', 
mixins:[NativeMethodsMixin], 

propTypes:{



date:PropTypes.instanceOf(Date).isRequired, 








onDateChange:PropTypes.func.isRequired, 






maximumDate:PropTypes.instanceOf(Date), 






minimumDate:PropTypes.instanceOf(Date), 




mode:PropTypes.oneOf(['date', 'time', 'datetime']), 




minuteInterval:PropTypes.oneOf([1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30]), 








timeZoneOffsetInMinutes:PropTypes.number}, 


getDefaultProps:function(){
return {
mode:'datetime'};}, 



_onChange:function(event){
var nativeTimeStamp=event.nativeEvent.timestamp;
this.props.onDateChange && this.props.onDateChange(
new Date(nativeTimeStamp));

this.props.onChange && this.props.onChange(event);





var propsTimeStamp=this.props.date.getTime();
if(nativeTimeStamp !== propsTimeStamp){
this.refs[DATEPICKER].setNativeProps({
date:propsTimeStamp});}}, 




render:function(){
var props=this.props;
return (
React.createElement(View, {style:props.style}, 
React.createElement(RCTDatePickerIOS, {
ref:DATEPICKER, 
style:styles.datePickerIOS, 
date:props.date.getTime(), 
maximumDate:
props.maximumDate?props.maximumDate.getTime():undefined, 

minimumDate:
props.minimumDate?props.minimumDate.getTime():undefined, 

mode:props.mode, 
minuteInterval:props.minuteInterval, 
timeZoneOffsetInMinutes:props.timeZoneOffsetInMinutes, 
onChange:this._onChange})));}});






var styles=StyleSheet.create({
datePickerIOS:{
height:RCTDatePickerIOSConsts.ComponentHeight, 
width:RCTDatePickerIOSConsts.ComponentWidth}});



var RCTDatePickerIOS=requireNativeComponent('RCTDatePicker', DatePickerIOS);

module.exports = DatePickerIOS;});
__d('Image',["EdgeInsetsPropType","ImageResizeMode","ImageStylePropTypes","NativeMethodsMixin","NativeModules","ReactPropTypes","React","ReactNativeViewAttributes","StyleSheet","StyleSheetPropType","flattenStyle","invariant","merge","requireNativeComponent","resolveAssetSource","verifyPropTypes","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var ImageResizeMode=require('ImageResizeMode');
var ImageStylePropTypes=require('ImageStylePropTypes');
var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');

var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var merge=require('merge');
var requireNativeComponent=require('requireNativeComponent');
var resolveAssetSource=require('resolveAssetSource');
var verifyPropTypes=require('verifyPropTypes');
var warning=require('warning');


























var Image=React.createClass({displayName:'Image', 
propTypes:{





source:PropTypes.shape({
uri:PropTypes.string}), 





defaultSource:PropTypes.shape({
uri:PropTypes.string}), 




accessible:PropTypes.bool, 



accessibilityLabel:PropTypes.string, 







capInsets:EdgeInsetsPropType, 




resizeMode:PropTypes.oneOf(['cover', 'contain', 'stretch']), 
style:StyleSheetPropType(ImageStylePropTypes), 




testID:PropTypes.string, 





onLayout:PropTypes.func}, 


statics:{
resizeMode:ImageResizeMode}, 


mixins:[NativeMethodsMixin], 





viewConfig:{
uiViewClassName:'UIView', 
validAttributes:ReactNativeViewAttributes.UIView}, 


render:function(){
for(var prop in nativeOnlyProps) {
if(this.props[prop] !== undefined){
console.warn('Prop `' + prop + ' = ' + this.props[prop] + '` should ' + 
'not be set directly on Image.');}}


var source=resolveAssetSource(this.props.source) || {};var 

width=source.width;var height=source.height;
var style=flattenStyle([{width:width, height:height}, styles.base, this.props.style]);
invariant(style, 'style must be initialized');

var isNetwork=source.uri && source.uri.match(/^https?:/);
invariant(
!(isNetwork && source.isStatic), 
'static image uris cannot start with "http": "' + source.uri + '"');

var isStored=!source.isStatic && !isNetwork;
var RawImage=isNetwork?RCTNetworkImage:RCTStaticImage;

if(this.props.style && this.props.style.tintColor){
warning(RawImage === RCTStaticImage, 'tintColor style only supported on static images.');}

var resizeMode=this.props.resizeMode || style.resizeMode || 'cover';

var nativeProps=merge(this.props, {
style:style, 
resizeMode:resizeMode, 
tintColor:style.tintColor});

if(isStored){
nativeProps.imageTag = source.uri;}else 
{
nativeProps.src = source.uri;}

if(this.props.defaultSource){
nativeProps.defaultImageSrc = this.props.defaultSource.uri;}

return React.createElement(RawImage, nativeProps);}});



var styles=StyleSheet.create({
base:{
overflow:'hidden'}});



var RCTNetworkImage=requireNativeComponent('RCTNetworkImageView', null);
var RCTStaticImage=requireNativeComponent('RCTStaticImage', null);

var nativeOnlyProps={
src:true, 
defaultImageSrc:true, 
imageTag:true, 
resizeMode:true};

if(__DEV__){
verifyPropTypes(Image, RCTStaticImage.viewConfig, nativeOnlyProps);
verifyPropTypes(Image, RCTNetworkImage.viewConfig, nativeOnlyProps);}


module.exports = Image;});
__d('EdgeInsetsPropType',["ReactPropTypes","createStrictShapeTypeChecker"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');

var EdgeInsetsPropType=createStrictShapeTypeChecker({
top:PropTypes.number, 
left:PropTypes.number, 
bottom:PropTypes.number, 
right:PropTypes.number});


module.exports = EdgeInsetsPropType;});
__d('resolveAssetSource',["AssetRegistry","PixelRatio","Platform","NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var AssetRegistry=require('AssetRegistry');
var PixelRatio=require('PixelRatio');
var Platform=require('Platform');
var SourceCode=require('NativeModules').SourceCode;

var _serverURL;

function getDevServerURL(){
if(!__DEV__){

return null;}

if(_serverURL === undefined){
var scriptURL=SourceCode.scriptURL;
var match=scriptURL && scriptURL.match(/^https?:\/\/.*?\//);
if(match){

_serverURL = match[0];}else 
{

_serverURL = null;}}



return _serverURL;}





function getPathInArchive(asset){
if(Platform.OS === 'android'){
var assetDir=getBasePath(asset);


return (assetDir + '/' + asset.name).
toLowerCase().
replace(/\//g, '_').
replace(/([^a-z0-9_])/g, '').
replace(/^assets_/, '');}else 
{

return getScaledAssetPath(asset);}}







function getPathOnDevserver(devServerUrl, asset){
return devServerUrl + getScaledAssetPath(asset) + '?hash=' + asset.hash;}





function getBasePath(asset){


var path=asset.httpServerLocation;
if(path[0] === '/'){
path = path.substr(1);}

return path;}





function getScaledAssetPath(asset){
var scale=pickScale(asset.scales, PixelRatio.get());
var scaleSuffix=scale === 1?'':'@' + scale + 'x';
var assetDir=getBasePath(asset);
return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;}


function pickScale(scales, deviceScale){

for(var i=0; i < scales.length; i++) {
if(scales[i] >= deviceScale){
return scales[i];}}






return scales[scales.length - 1] || 1;}


function resolveAssetSource(source){
if(typeof source === 'object'){
return source;}


var asset=AssetRegistry.getAssetByID(source);
if(asset){
return assetToImageSource(asset);}


return null;}


function assetToImageSource(asset){
var devServerURL=getDevServerURL();
if(devServerURL){
return {
width:asset.width, 
height:asset.height, 
uri:getPathOnDevserver(devServerURL, asset), 
isStatic:false};}else 

{
return {
width:asset.width, 
height:asset.height, 
uri:getPathInArchive(asset), 
isStatic:true};}}




module.exports = resolveAssetSource;
module.exports.pickScale = pickScale;});
__d('AssetRegistry',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






var assets=[];

function registerAsset(asset){


return assets.push(asset);}


function getAssetByID(assetId){
return assets[assetId - 1];}


module.exports = {registerAsset:registerAsset, getAssetByID:getAssetByID};});
__d('PixelRatio',["Dimensions"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var Dimensions=require('Dimensions');var 






























PixelRatio=(function(){function PixelRatio(){_classCallCheck(this, PixelRatio);}_createClass(PixelRatio, null, [{key:'get', value:












function get(){
return Dimensions.get('window').scale;}}, {key:'getFontScale', value:












function getFontScale(){
return Dimensions.get('window').fontScale || PixelRatio.get();}}, {key:'getPixelSizeForLayoutSize', value:







function getPixelSizeForLayoutSize(layoutSize){
return Math.round(layoutSize * PixelRatio.get());}}, {key:'startDetecting', value:



function startDetecting(){}}]);return PixelRatio;})();


module.exports = PixelRatio;});
__d('Dimensions',["NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var NativeModules=require('NativeModules');

var invariant=require('invariant');

var dimensions=NativeModules.UIManager.Dimensions;




if(dimensions && dimensions.windowPhysicalPixels){

dimensions = JSON.parse(JSON.stringify(dimensions));

var windowPhysicalPixels=dimensions.windowPhysicalPixels;
dimensions.window = {
width:windowPhysicalPixels.width / windowPhysicalPixels.scale, 
height:windowPhysicalPixels.height / windowPhysicalPixels.scale, 
scale:windowPhysicalPixels.scale, 
fontScale:windowPhysicalPixels.fontScale};



delete dimensions.windowPhysicalPixels;}var 


Dimensions=(function(){function Dimensions(){_classCallCheck(this, Dimensions);}_createClass(Dimensions, null, [{key:'set', value:





function set(dims){
Object.assign(dimensions, dims);
return true;}}, {key:'get', value:















function get(dim){
invariant(dimensions[dim], 'No dimension set for key ' + dim);
return dimensions[dim];}}]);return Dimensions;})();



module.exports = Dimensions;});
__d('ListView',["ListViewDataSource","React","NativeModules","ScrollView","ScrollResponder","StaticRenderer","react-timer-mixin/TimerMixin","logError","merge","isEmpty"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};



























var ListViewDataSource=require('ListViewDataSource');
var React=require('React');
var RCTUIManager=require('NativeModules').UIManager;
var ScrollView=require('ScrollView');
var ScrollResponder=require('ScrollResponder');
var StaticRenderer=require('StaticRenderer');
var TimerMixin=require('react-timer-mixin/TimerMixin');

var logError=require('logError');
var merge=require('merge');
var isEmpty=require('isEmpty');

var PropTypes=React.PropTypes;

var DEFAULT_PAGE_SIZE=1;
var DEFAULT_INITIAL_ROWS=10;
var DEFAULT_SCROLL_RENDER_AHEAD=1000;
var DEFAULT_END_REACHED_THRESHOLD=1000;
var DEFAULT_SCROLL_CALLBACK_THROTTLE=50;
var SCROLLVIEW_REF='listviewscroll';


















































var ListView=React.createClass({displayName:'ListView', 
mixins:[ScrollResponder.Mixin, TimerMixin], 

statics:{
DataSource:ListViewDataSource}, 









propTypes:_extends({}, 
ScrollView.propTypes, {

dataSource:PropTypes.instanceOf(ListViewDataSource).isRequired, 







renderSeparator:PropTypes.func, 










renderRow:PropTypes.func.isRequired, 





initialListSize:PropTypes.number, 





onEndReached:PropTypes.func, 



onEndReachedThreshold:PropTypes.number, 



pageSize:PropTypes.number, 








renderFooter:PropTypes.func, 
renderHeader:PropTypes.func, 









renderSectionHeader:PropTypes.func, 




scrollRenderAheadDistance:React.PropTypes.number, 









onChangeVisibleRows:React.PropTypes.func, 





removeClippedSubviews:React.PropTypes.bool}), 





getMetrics:function(){
return {
contentHeight:this.scrollProperties.contentHeight, 
totalRows:this.props.dataSource.getRowCount(), 
renderedRows:this.state.curRenderedRowsCount, 
visibleRows:Object.keys(this._visibleRows).length};}, 







getScrollResponder:function(){
return this.refs[SCROLLVIEW_REF];}, 


setNativeProps:function(props){
this.refs[SCROLLVIEW_REF].setNativeProps(props);}, 






getDefaultProps:function(){
return {
initialListSize:DEFAULT_INITIAL_ROWS, 
pageSize:DEFAULT_PAGE_SIZE, 
scrollRenderAheadDistance:DEFAULT_SCROLL_RENDER_AHEAD, 
onEndReachedThreshold:DEFAULT_END_REACHED_THRESHOLD};}, 



getInitialState:function(){
return {
curRenderedRowsCount:this.props.initialListSize, 
prevRenderedRowsCount:0, 
highlightedRow:{}};}, 



componentWillMount:function(){

this.scrollProperties = {
visibleHeight:null, 
contentHeight:null, 
offsetY:0};

this._childFrames = [];
this._visibleRows = {};}, 


componentDidMount:function(){var _this=this;


this.requestAnimationFrame(function(){
_this._measureAndUpdateScrollProps();});}, 



componentWillReceiveProps:function(nextProps){
if(this.props.dataSource !== nextProps.dataSource){
this.setState({prevRenderedRowsCount:0});}}, 



onRowHighlighted:function(sectionID, rowID){
this.setState({highlightedRow:{sectionID:sectionID, rowID:rowID}});}, 


render:function(){
var bodyComponents=[];

var dataSource=this.props.dataSource;
var allRowIDs=dataSource.rowIdentities;
var rowCount=0;
var sectionHeaderIndices=[];

var header=this.props.renderHeader && this.props.renderHeader();
var footer=this.props.renderFooter && this.props.renderFooter();
var totalIndex=header?1:0;

for(var sectionIdx=0; sectionIdx < allRowIDs.length; sectionIdx++) {
var sectionID=dataSource.sectionIdentities[sectionIdx];
var rowIDs=allRowIDs[sectionIdx];
if(rowIDs.length === 0){
continue;}


if(this.props.renderSectionHeader){
var shouldUpdateHeader=rowCount >= this.state.prevRenderedRowsCount && 
dataSource.sectionHeaderShouldUpdate(sectionIdx);
bodyComponents.push(
React.createElement(StaticRenderer, {
key:'s_' + sectionID, 
shouldUpdate:!!shouldUpdateHeader, 
render:this.props.renderSectionHeader.bind(
null, 
dataSource.getSectionHeaderData(sectionIdx), 
sectionID)}));



sectionHeaderIndices.push(totalIndex++);}


for(var rowIdx=0; rowIdx < rowIDs.length; rowIdx++) {
var rowID=rowIDs[rowIdx];
var comboID=sectionID + rowID;
var shouldUpdateRow=rowCount >= this.state.prevRenderedRowsCount && 
dataSource.rowShouldUpdate(sectionIdx, rowIdx);
var row=
React.createElement(StaticRenderer, {
key:'r_' + comboID, 
shouldUpdate:!!shouldUpdateRow, 
render:this.props.renderRow.bind(
null, 
dataSource.getRowData(sectionIdx, rowIdx), 
sectionID, 
rowID, 
this.onRowHighlighted)});


bodyComponents.push(row);
totalIndex++;

if(this.props.renderSeparator && (
rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)){
var adjacentRowHighlighted=
this.state.highlightedRow.sectionID === sectionID && (
this.state.highlightedRow.rowID === rowID || 
this.state.highlightedRow.rowID === rowIDs[rowIdx + 1]);

var separator=this.props.renderSeparator(
sectionID, 
rowID, 
adjacentRowHighlighted);

bodyComponents.push(separator);
totalIndex++;}

if(++rowCount === this.state.curRenderedRowsCount){
break;}}


if(rowCount >= this.state.curRenderedRowsCount){
break;}}



var props=merge(
this.props, {
onScroll:this._onScroll, 
stickyHeaderIndices:sectionHeaderIndices});


if(!props.scrollEventThrottle){
props.scrollEventThrottle = DEFAULT_SCROLL_CALLBACK_THROTTLE;}


return (
React.createElement(ScrollView, _extends({}, props, {
ref:SCROLLVIEW_REF}), 
header, 
bodyComponents, 
footer));}, 








_measureAndUpdateScrollProps:function(){
RCTUIManager.measureLayout(
this.refs[SCROLLVIEW_REF].getInnerViewNode(), 
React.findNodeHandle(this.refs[SCROLLVIEW_REF]), 
logError, 
this._setScrollContentHeight);

RCTUIManager.measureLayoutRelativeToParent(
React.findNodeHandle(this.refs[SCROLLVIEW_REF]), 
logError, 
this._setScrollVisibleHeight);}, 



_setScrollContentHeight:function(left, top, width, height){
this.scrollProperties.contentHeight = height;}, 


_setScrollVisibleHeight:function(left, top, width, height){
this.scrollProperties.visibleHeight = height;
this._updateVisibleRows();
this._renderMoreRowsIfNeeded();}, 


_renderMoreRowsIfNeeded:function(){
if(this.scrollProperties.contentHeight === null || 
this.scrollProperties.visibleHeight === null || 
this.state.curRenderedRowsCount === this.props.dataSource.getRowCount()){
return;}


var distanceFromEnd=this._getDistanceFromEnd(this.scrollProperties);
if(distanceFromEnd < this.props.scrollRenderAheadDistance){
this._pageInNewRows();}}, 



_pageInNewRows:function(){var _this2=this;
var rowsToRender=Math.min(
this.state.curRenderedRowsCount + this.props.pageSize, 
this.props.dataSource.getRowCount());

this.setState(
{
prevRenderedRowsCount:this.state.curRenderedRowsCount, 
curRenderedRowsCount:rowsToRender}, 

function(){
_this2._measureAndUpdateScrollProps();
_this2.setState({
prevRenderedRowsCount:_this2.state.curRenderedRowsCount});});}, 





_getDistanceFromEnd:function(scrollProperties){
return scrollProperties.contentHeight - 
scrollProperties.visibleHeight - 
scrollProperties.offsetY;}, 


_updateVisibleRows:function(e){var _this3=this;
if(!this.props.onChangeVisibleRows){
return;}

var updatedFrames=e && e.nativeEvent.updatedChildFrames;
if(updatedFrames){
updatedFrames.forEach(function(newFrame){
_this3._childFrames[newFrame.index] = merge(newFrame);});}


var dataSource=this.props.dataSource;
var visibleTop=this.scrollProperties.offsetY;
var visibleBottom=visibleTop + this.scrollProperties.visibleHeight;
var allRowIDs=dataSource.rowIdentities;

var header=this.props.renderHeader && this.props.renderHeader();
var totalIndex=header?1:0;
var visibilityChanged=false;
var changedRows={};
for(var sectionIdx=0; sectionIdx < allRowIDs.length; sectionIdx++) {
var rowIDs=allRowIDs[sectionIdx];
if(rowIDs.length === 0){
continue;}

var sectionID=dataSource.sectionIdentities[sectionIdx];
if(this.props.renderSectionHeader){
totalIndex++;}

var visibleSection=this._visibleRows[sectionID];
if(!visibleSection){
visibleSection = {};}

for(var rowIdx=0; rowIdx < rowIDs.length; rowIdx++) {
var rowID=rowIDs[rowIdx];
var frame=this._childFrames[totalIndex];
totalIndex++;
if(!frame){
break;}

var rowVisible=visibleSection[rowID];
var top=frame.y;
var bottom=top + frame.height;
if(top > visibleBottom || bottom < visibleTop){
if(rowVisible){
visibilityChanged = true;
delete visibleSection[rowID];
if(!changedRows[sectionID]){
changedRows[sectionID] = {};}

changedRows[sectionID][rowID] = false;}}else 

if(!rowVisible){
visibilityChanged = true;
visibleSection[rowID] = true;
if(!changedRows[sectionID]){
changedRows[sectionID] = {};}

changedRows[sectionID][rowID] = true;}}


if(!isEmpty(visibleSection)){
this._visibleRows[sectionID] = visibleSection;}else 
if(this._visibleRows[sectionID]){
delete this._visibleRows[sectionID];}}


visibilityChanged && this.props.onChangeVisibleRows(this._visibleRows, changedRows);}, 


_onScroll:function(e){
this.scrollProperties.visibleHeight = e.nativeEvent.layoutMeasurement.height;
this.scrollProperties.contentHeight = e.nativeEvent.contentSize.height;
this.scrollProperties.offsetY = e.nativeEvent.contentOffset.y;
this._updateVisibleRows(e);
var nearEnd=this._getDistanceFromEnd(this.scrollProperties) < this.props.onEndReachedThreshold;
if(nearEnd && 
this.props.onEndReached && 
this.scrollProperties.contentHeight !== this._sentEndForContentHeight && 
this.state.curRenderedRowsCount === this.props.dataSource.getRowCount()){
this._sentEndForContentHeight = this.scrollProperties.contentHeight;
this.props.onEndReached(e);}else 
{
this._renderMoreRowsIfNeeded();}


this.props.onScroll && this.props.onScroll(e);}});



module.exports = ListView;});
__d('ListViewDataSource',["invariant","isEmpty","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}





























var invariant=require('invariant');
var isEmpty=require('isEmpty');
var warning=require('warning');

function defaultGetRowData(
dataBlob, 
sectionID, 
rowID)
{
return dataBlob[sectionID][rowID];}


function defaultGetSectionHeaderData(
dataBlob, 
sectionID)
{
return dataBlob[sectionID];}var 













































ListViewDataSource=(function(){


























function ListViewDataSource(params){_classCallCheck(this, ListViewDataSource);
invariant(
params && typeof params.rowHasChanged === 'function', 
'Must provide a rowHasChanged function.');

this._rowHasChanged = params.rowHasChanged;
this._getRowData = params.getRowData || defaultGetRowData;
this._sectionHeaderHasChanged = params.sectionHeaderHasChanged;
this._getSectionHeaderData = 
params.getSectionHeaderData || defaultGetSectionHeaderData;

this._dataBlob = null;
this._dirtyRows = [];
this._dirtySections = [];
this._cachedRowCount = 0;



this.rowIdentities = [];
this.sectionIdentities = [];}_createClass(ListViewDataSource, [{key:'cloneWithRows', value:


















function cloneWithRows(
dataBlob, 
rowIdentities)
{
var rowIds=rowIdentities?[rowIdentities]:null;
if(!this._sectionHeaderHasChanged){
this._sectionHeaderHasChanged = function(){return false;};}

return this.cloneWithRowsAndSections({s1:dataBlob}, ['s1'], rowIds);}}, {key:'cloneWithRowsAndSections', value:













function cloneWithRowsAndSections(
dataBlob, 
sectionIdentities, 
rowIdentities)
{
invariant(
typeof this._sectionHeaderHasChanged === 'function', 
'Must provide a sectionHeaderHasChanged function with section data.');

var newSource=new ListViewDataSource({
getRowData:this._getRowData, 
getSectionHeaderData:this._getSectionHeaderData, 
rowHasChanged:this._rowHasChanged, 
sectionHeaderHasChanged:this._sectionHeaderHasChanged});

newSource._dataBlob = dataBlob;
if(sectionIdentities){
newSource.sectionIdentities = sectionIdentities;}else 
{
newSource.sectionIdentities = Object.keys(dataBlob);}

if(rowIdentities){
newSource.rowIdentities = rowIdentities;}else 
{
newSource.rowIdentities = [];
newSource.sectionIdentities.forEach(function(sectionID){
newSource.rowIdentities.push(Object.keys(dataBlob[sectionID]));});}


newSource._cachedRowCount = countRows(newSource.rowIdentities);

newSource._calculateDirtyArrays(
this._dataBlob, 
this.sectionIdentities, 
this.rowIdentities);


return newSource;}}, {key:'getRowCount', value:


function getRowCount(){
return this._cachedRowCount;}}, {key:'rowShouldUpdate', value:





function rowShouldUpdate(sectionIndex, rowIndex){
var needsUpdate=this._dirtyRows[sectionIndex][rowIndex];
warning(needsUpdate !== undefined, 
'missing dirtyBit for section, row: ' + sectionIndex + ', ' + rowIndex);
return needsUpdate;}}, {key:'getRowData', value:





function getRowData(sectionIndex, rowIndex){
var sectionID=this.sectionIdentities[sectionIndex];
var rowID=this.rowIdentities[sectionIndex][rowIndex];
warning(
sectionID !== undefined && rowID !== undefined, 
'rendering invalid section, row: ' + sectionIndex + ', ' + rowIndex);

return this._getRowData(this._dataBlob, sectionID, rowID);}}, {key:'getRowIDForFlatIndex', value:






function getRowIDForFlatIndex(index){
var accessIndex=index;
for(var ii=0; ii < this.sectionIdentities.length; ii++) {
if(accessIndex >= this.rowIdentities[ii].length){
accessIndex -= this.rowIdentities[ii].length;}else 
{
return this.rowIdentities[ii][accessIndex];}}


return null;}}, {key:'getSectionIDForFlatIndex', value:






function getSectionIDForFlatIndex(index){
var accessIndex=index;
for(var ii=0; ii < this.sectionIdentities.length; ii++) {
if(accessIndex >= this.rowIdentities[ii].length){
accessIndex -= this.rowIdentities[ii].length;}else 
{
return this.sectionIdentities[ii];}}


return null;}}, {key:'getSectionLengths', value:





function getSectionLengths(){
var results=[];
for(var ii=0; ii < this.sectionIdentities.length; ii++) {
results.push(this.rowIdentities[ii].length);}

return results;}}, {key:'sectionHeaderShouldUpdate', value:





function sectionHeaderShouldUpdate(sectionIndex){
var needsUpdate=this._dirtySections[sectionIndex];
warning(needsUpdate !== undefined, 
'missing dirtyBit for section: ' + sectionIndex);
return needsUpdate;}}, {key:'getSectionHeaderData', value:





function getSectionHeaderData(sectionIndex){
if(!this._getSectionHeaderData){
return null;}

var sectionID=this.sectionIdentities[sectionIndex];
warning(sectionID !== undefined, 
'renderSection called on invalid section: ' + sectionIndex);
return this._getSectionHeaderData(this._dataBlob, sectionID);}}, {key:'_calculateDirtyArrays', value:





















function _calculateDirtyArrays(
prevDataBlob, 
prevSectionIDs, 
prevRowIDs)
{

var prevSectionsHash=keyedDictionaryFromArray(prevSectionIDs);
var prevRowsHash={};
for(var ii=0; ii < prevRowIDs.length; ii++) {
var sectionID=prevSectionIDs[ii];
warning(
!prevRowsHash[sectionID], 
'SectionID appears more than once: ' + sectionID);

prevRowsHash[sectionID] = keyedDictionaryFromArray(prevRowIDs[ii]);}



this._dirtySections = [];
this._dirtyRows = [];

var dirty;
for(var sIndex=0; sIndex < this.sectionIdentities.length; sIndex++) {
var sectionID=this.sectionIdentities[sIndex];

dirty = !prevSectionsHash[sectionID];
var sectionHeaderHasChanged=this._sectionHeaderHasChanged;
if(!dirty && sectionHeaderHasChanged){
dirty = sectionHeaderHasChanged(
this._getSectionHeaderData(prevDataBlob, sectionID), 
this._getSectionHeaderData(this._dataBlob, sectionID));}


this._dirtySections.push(!!dirty);

this._dirtyRows[sIndex] = [];
for(var rIndex=0; rIndex < this.rowIdentities[sIndex].length; rIndex++) {
var rowID=this.rowIdentities[sIndex][rIndex];

dirty = 
!prevSectionsHash[sectionID] || 
!prevRowsHash[sectionID][rowID] || 
this._rowHasChanged(
this._getRowData(prevDataBlob, sectionID, rowID), 
this._getRowData(this._dataBlob, sectionID, rowID));

this._dirtyRows[sIndex].push(!!dirty);}}}}]);return ListViewDataSource;})();





function countRows(allRowIDs){
var totalRows=0;
for(var sectionIdx=0; sectionIdx < allRowIDs.length; sectionIdx++) {
var rowIDs=allRowIDs[sectionIdx];
totalRows += rowIDs.length;}

return totalRows;}


function keyedDictionaryFromArray(arr){
if(isEmpty(arr)){
return {};}

var result={};
for(var ii=0; ii < arr.length; ii++) {
var key=arr[ii];
warning(!result[key], 'Value appears more than once in array: ' + key);
result[key] = true;}

return result;}



module.exports = ListViewDataSource;});
__d('isEmpty',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 



















isEmpty(obj){
if(Array.isArray(obj)){
return obj.length === 0;}else 
if(typeof obj === 'object'){
for(var i in obj) {
return false;}

return true;}else 
{
return !obj;}}



module.exports = isEmpty;});
__d('ScrollView',["EdgeInsetsPropType","Platform","PointPropType","NativeModules","React","ReactNativeViewAttributes","NativeModules","ScrollResponder","StyleSheet","StyleSheetPropType","View","ViewStylePropTypes","createReactNativeComponentClass","deepDiffer","flattenStyle","insetsDiffer","invariant","pointsDiffer","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var Platform=require('Platform');
var PointPropType=require('PointPropType');
var RCTScrollView=require('NativeModules').UIManager.RCTScrollView;
var RCTScrollViewConsts=RCTScrollView.Constants;
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var RCTUIManager=require('NativeModules').UIManager;
var ScrollResponder=require('ScrollResponder');
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');
var View=require('View');
var ViewStylePropTypes=require('ViewStylePropTypes');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var deepDiffer=require('deepDiffer');
var flattenStyle=require('flattenStyle');
var insetsDiffer=require('insetsDiffer');
var invariant=require('invariant');
var pointsDiffer=require('pointsDiffer');
var requireNativeComponent=require('requireNativeComponent');

var PropTypes=React.PropTypes;

var SCROLLVIEW='ScrollView';
var INNERVIEW='InnerScrollView';









var ScrollView=React.createClass({displayName:'ScrollView', 
propTypes:{
automaticallyAdjustContentInsets:PropTypes.bool, 
contentInset:EdgeInsetsPropType, 
contentOffset:PointPropType, 
onScroll:PropTypes.func, 
onScrollAnimationEnd:PropTypes.func, 
scrollEnabled:PropTypes.bool, 
scrollIndicatorInsets:EdgeInsetsPropType, 
showsHorizontalScrollIndicator:PropTypes.bool, 
showsVerticalScrollIndicator:PropTypes.bool, 
style:StyleSheetPropType(ViewStylePropTypes), 
scrollEventThrottle:PropTypes.number, 







bounces:PropTypes.bool, 





bouncesZoom:PropTypes.bool, 





alwaysBounceHorizontal:PropTypes.bool, 





alwaysBounceVertical:PropTypes.bool, 






centerContent:PropTypes.bool, 















contentContainerStyle:StyleSheetPropType(ViewStylePropTypes), 






decelerationRate:PropTypes.number, 




horizontal:PropTypes.bool, 




directionalLockEnabled:PropTypes.bool, 




canCancelContentTouches:PropTypes.bool, 








keyboardDismissMode:PropTypes.oneOf([
'none', 
'interactive', 
'on-drag']), 







keyboardShouldPersistTaps:PropTypes.bool, 



maximumZoomScale:PropTypes.number, 



minimumZoomScale:PropTypes.number, 





pagingEnabled:PropTypes.bool, 




scrollsToTop:PropTypes.bool, 







stickyHeaderIndices:PropTypes.arrayOf(PropTypes.number), 






removeClippedSubviews:PropTypes.bool, 



zoomScale:PropTypes.number}, 


mixins:[ScrollResponder.Mixin], 

getInitialState:function(){
return this.scrollResponderMixinGetInitialState();}, 


setNativeProps:function(props){
this.refs[SCROLLVIEW].setNativeProps(props);}, 


getInnerViewNode:function(){
return React.findNodeHandle(this.refs[INNERVIEW]);}, 


scrollTo:function(destY, destX){
if(Platform.OS === 'android'){
RCTUIManager.dispatchViewManagerCommand(
React.findNodeHandle(this), 
RCTUIManager.RCTScrollView.Commands.scrollTo, 
[destX || 0, destY || 0]);}else 

{
RCTUIManager.scrollTo(
React.findNodeHandle(this), 
destX || 0, 
destY || 0);}}, 




scrollWithoutAnimationTo:function(destY, destX){
RCTUIManager.scrollWithoutAnimationTo(
React.findNodeHandle(this), 
destX || 0, 
destY || 0);}, 



render:function(){
var contentContainerStyle=[
this.props.horizontal && styles.contentContainerHorizontal, 
this.props.contentContainerStyle];

if(__DEV__ && this.props.style){
var style=flattenStyle(this.props.style);
var childLayoutProps=['alignItems', 'justifyContent'].
filter(function(prop){return style && style[prop] !== undefined;});
invariant(
childLayoutProps.length === 0, 
'ScrollView child layout (' + JSON.stringify(childLayoutProps) + 
') must by applied through the contentContainerStyle prop.');}


if(__DEV__){
if(this.props.onScroll && !this.props.scrollEventThrottle){
var onScroll=this.props.onScroll;
this.props.onScroll = function(){
console.log(
'You specified `onScroll` on a <ScrollView> but not ' + 
'`scrollEventThrottle`. You will only receive one event. ' + 
'Using `16` you get all the events but be aware that it may ' + 
'cause frame drops, use a bigger number if you don\'t need as ' + 
'much precision.');

onScroll.apply(this, arguments);};}}




var contentContainer=
React.createElement(View, {
ref:INNERVIEW, 
style:contentContainerStyle, 
removeClippedSubviews:this.props.removeClippedSubviews}, 
this.props.children);


var alwaysBounceHorizontal=
this.props.alwaysBounceHorizontal !== undefined?
this.props.alwaysBounceHorizontal:
this.props.horizontal;

var alwaysBounceVertical=
this.props.alwaysBounceVertical !== undefined?
this.props.alwaysBounceVertical:
!this.props.horizontal;

var props=_extends({}, 
this.props, {
alwaysBounceHorizontal:alwaysBounceHorizontal, 
alwaysBounceVertical:alwaysBounceVertical, 
style:[styles.base, this.props.style], 
onTouchStart:this.scrollResponderHandleTouchStart, 
onTouchMove:this.scrollResponderHandleTouchMove, 
onTouchEnd:this.scrollResponderHandleTouchEnd, 
onScrollBeginDrag:this.scrollResponderHandleScrollBeginDrag, 
onScrollEndDrag:this.scrollResponderHandleScrollEndDrag, 
onMomentumScrollBegin:this.scrollResponderHandleMomentumScrollBegin, 
onMomentumScrollEnd:this.scrollResponderHandleMomentumScrollEnd, 
onStartShouldSetResponder:this.scrollResponderHandleStartShouldSetResponder, 
onStartShouldSetResponderCapture:this.scrollResponderHandleStartShouldSetResponderCapture, 
onScrollShouldSetResponder:this.scrollResponderHandleScrollShouldSetResponder, 
onScroll:this.scrollResponderHandleScroll, 
onResponderGrant:this.scrollResponderHandleResponderGrant, 
onResponderTerminationRequest:this.scrollResponderHandleTerminationRequest, 
onResponderTerminate:this.scrollResponderHandleTerminate, 
onResponderRelease:this.scrollResponderHandleResponderRelease, 
onResponderReject:this.scrollResponderHandleResponderReject});


var ScrollViewClass;
if(Platform.OS === 'ios'){
ScrollViewClass = RCTScrollView;}else 
if(Platform.OS === 'android'){
if(this.props.horizontal){
ScrollViewClass = AndroidHorizontalScrollView;}else 
{
ScrollViewClass = AndroidScrollView;}

var keyboardDismissModeConstants={
'none':RCTScrollViewConsts.KeyboardDismissMode.None, 
'interactive':RCTScrollViewConsts.KeyboardDismissMode.Interactive, 
'on-drag':RCTScrollViewConsts.KeyboardDismissMode.OnDrag};

props.keyboardDismissMode = props.keyboardDismissMode?
keyboardDismissModeConstants[props.keyboardDismissMode]:undefined;}

invariant(
ScrollViewClass !== undefined, 
'ScrollViewClass must not be undefined');


return (
React.createElement(ScrollViewClass, _extends({}, props, {ref:SCROLLVIEW}), 
contentContainer));}});





var styles=StyleSheet.create({
base:{
flex:1}, 

contentContainerHorizontal:{
alignSelf:'flex-start', 
flexDirection:'row'}});



var validAttributes=_extends({}, 
ReactNativeViewAttributes.UIView, {
alwaysBounceHorizontal:true, 
alwaysBounceVertical:true, 
automaticallyAdjustContentInsets:true, 
bounces:true, 
centerContent:true, 
contentInset:{diff:insetsDiffer}, 
contentOffset:{diff:pointsDiffer}, 
decelerationRate:true, 
horizontal:true, 
keyboardDismissMode:true, 
keyboardShouldPersistTaps:true, 
maximumZoomScale:true, 
minimumZoomScale:true, 
pagingEnabled:true, 
removeClippedSubviews:true, 
scrollEnabled:true, 
scrollIndicatorInsets:{diff:insetsDiffer}, 
scrollsToTop:true, 
showsHorizontalScrollIndicator:true, 
showsVerticalScrollIndicator:true, 
stickyHeaderIndices:{diff:deepDiffer}, 
scrollEventThrottle:true, 
zoomScale:true});


if(Platform.OS === 'android'){
var AndroidScrollView=createReactNativeComponentClass({
validAttributes:validAttributes, 
uiViewClassName:'RCTScrollView'});

var AndroidHorizontalScrollView=createReactNativeComponentClass({
validAttributes:validAttributes, 
uiViewClassName:'AndroidHorizontalScrollView'});}else 

if(Platform.OS === 'ios'){
var RCTScrollView=requireNativeComponent('RCTScrollView', ScrollView);}


module.exports = ScrollView;});
__d('PointPropType',["ReactPropTypes","createStrictShapeTypeChecker"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');

var PointPropType=createStrictShapeTypeChecker({
x:PropTypes.number, 
y:PropTypes.number});


module.exports = PointPropType;});
__d('ScrollResponder',["NativeModules","RCTDeviceEventEmitter","React","Subscribable","TextInputState","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var React=require('React');
var Subscribable=require('Subscribable');
var TextInputState=require('TextInputState');

var RCTUIManager=NativeModules.UIManager;
var RCTUIManagerDeprecated=NativeModules.UIManager;
var RCTScrollViewConsts=RCTUIManager.RCTScrollView.Constants;

var warning=require('warning');















































































var IS_ANIMATING_TOUCH_START_THRESHOLD_MS=16;










var ScrollResponderMixin={
mixins:[Subscribable.Mixin], 
statics:RCTScrollViewConsts, 
scrollResponderMixinGetInitialState:function(){
return {
isTouching:false, 
lastMomentumScrollBeginTime:0, 
lastMomentumScrollEndTime:0, 






observedScrollSinceBecomingResponder:false, 
becameResponderWhileAnimating:false};}, 






scrollResponderHandleScrollShouldSetResponder:function(){
return this.state.isTouching;}, 



























scrollResponderHandleStartShouldSetResponder:function(){
return false;}, 













scrollResponderHandleStartShouldSetResponderCapture:function(e){

var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();
if(!this.props.keyboardShouldPersistTaps && 
currentlyFocusedTextInput != null && 
e.target !== currentlyFocusedTextInput){
return true;}

return this.scrollResponderIsAnimating();}, 












scrollResponderHandleResponderReject:function(){
warning(false, 'ScrollView doesn\'t take rejection well - scrolls anyway');}, 

















scrollResponderHandleTerminationRequest:function(){
return !this.state.observedScrollSinceBecomingResponder;}, 







scrollResponderHandleTouchEnd:function(e){
var nativeEvent=e.nativeEvent;
this.state.isTouching = nativeEvent.touches.length !== 0;
this.props.onTouchEnd && this.props.onTouchEnd(e);}, 





scrollResponderHandleResponderRelease:function(e){
this.props.onResponderRelease && this.props.onResponderRelease(e);



var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();
if(!this.props.keyboardShouldPersistTaps && 
currentlyFocusedTextInput != null && 
e.target !== currentlyFocusedTextInput && 
!this.state.observedScrollSinceBecomingResponder && 
!this.state.becameResponderWhileAnimating){
this.props.onScrollResponderKeyboardDismissed && 
this.props.onScrollResponderKeyboardDismissed(e);
TextInputState.blurTextInput(currentlyFocusedTextInput);}}, 



scrollResponderHandleScroll:function(e){
this.state.observedScrollSinceBecomingResponder = true;
this.props.onScroll && this.props.onScroll(e);}, 





scrollResponderHandleResponderGrant:function(e){
this.state.observedScrollSinceBecomingResponder = false;
this.props.onResponderGrant && this.props.onResponderGrant(e);
this.state.becameResponderWhileAnimating = this.scrollResponderIsAnimating();}, 









scrollResponderHandleScrollBeginDrag:function(e){
this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);}, 





scrollResponderHandleScrollEndDrag:function(e){
this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);}, 





scrollResponderHandleMomentumScrollBegin:function(e){
this.state.lastMomentumScrollBeginTime = Date.now();
this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);}, 





scrollResponderHandleMomentumScrollEnd:function(e){
this.state.lastMomentumScrollEndTime = Date.now();
this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);}, 













scrollResponderHandleTouchStart:function(e){
this.state.isTouching = true;
this.props.onTouchStart && this.props.onTouchStart(e);}, 













scrollResponderHandleTouchMove:function(e){
this.props.onTouchMove && this.props.onTouchMove(e);}, 







scrollResponderIsAnimating:function(){
var now=Date.now();
var timeSinceLastMomentumScrollEnd=now - this.state.lastMomentumScrollEndTime;
var isAnimating=timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || 
this.state.lastMomentumScrollEndTime < this.state.lastMomentumScrollBeginTime;
return isAnimating;}, 







scrollResponderScrollTo:function(offsetX, offsetY){
RCTUIManagerDeprecated.scrollTo(React.findNodeHandle(this), offsetX, offsetY);}, 






scrollResponderZoomTo:function(rect){
RCTUIManagerDeprecated.zoomToRect(React.findNodeHandle(this), rect);}, 












scrollResponderScrollNativeHandleToKeyboard:function(nodeHandle, additionalOffset, preventNegativeScrollOffset){
this.additionalScrollOffset = additionalOffset || 0;
this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;
RCTUIManager.measureLayout(
nodeHandle, 
React.findNodeHandle(this), 
this.scrollResponderTextInputFocusError, 
this.scrollResponderInputMeasureAndScrollToKeyboard);}, 













scrollResponderInputMeasureAndScrollToKeyboard:function(left, top, width, height){
if(this.keyboardWillOpenTo){
var scrollOffsetY=
top - this.keyboardWillOpenTo.endCoordinates.screenY + height + 
this.additionalScrollOffset;





if(this.preventNegativeScrollOffset){
scrollOffsetY = Math.max(0, scrollOffsetY);}

this.scrollResponderScrollTo(0, scrollOffsetY);}

this.additionalOffset = 0;
this.preventNegativeScrollOffset = false;}, 


scrollResponderTextInputFocusError:function(e){
console.error('Error measuring text field: ', e);}, 








componentWillMount:function(){
this.keyboardWillOpenTo = null;
this.additionalScrollOffset = 0;
this.addListenerOn(RCTDeviceEventEmitter, 'keyboardWillShow', this.scrollResponderKeyboardWillShow);
this.addListenerOn(RCTDeviceEventEmitter, 'keyboardWillHide', this.scrollResponderKeyboardWillHide);
this.addListenerOn(RCTDeviceEventEmitter, 'keyboardDidShow', this.scrollResponderKeyboardDidShow);
this.addListenerOn(RCTDeviceEventEmitter, 'keyboardDidHide', this.scrollResponderKeyboardDidHide);}, 






























scrollResponderKeyboardWillShow:function(e){
this.keyboardWillOpenTo = e;
this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);}, 


scrollResponderKeyboardWillHide:function(e){
this.keyboardWillOpenTo = null;
this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);}, 


scrollResponderKeyboardDidShow:function(){
this.keyboardWillOpenTo = null;
this.props.onKeyboardDidShow && this.props.onKeyboardDidShow();}, 


scrollResponderKeyboardDidHide:function(){
this.keyboardWillOpenTo = null;
this.props.onKeyboardDidHide && this.props.onKeyboardDidHide();}};




var ScrollResponder={
Mixin:ScrollResponderMixin};


module.exports = ScrollResponder;});
__d('Subscribable',["EventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






















var Subscribable={};

Subscribable.Mixin = {

componentWillMount:function(){
this._subscribableSubscriptions = [];}, 


componentWillUnmount:function(){
this._subscribableSubscriptions.forEach(
function(subscription){return subscription.remove();});

this._subscribableSubscriptions = null;}, 















addListenerOn:function(
eventEmitter, 
eventType, 
listener, 
context)
{
this._subscribableSubscriptions.push(
eventEmitter.addListener(eventType, listener, context));}};




module.exports = Subscribable;});
__d('StaticRenderer',["React"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var React=require('React');

var StaticRenderer=React.createClass({displayName:'StaticRenderer', 
propTypes:{
shouldUpdate:React.PropTypes.bool.isRequired, 
render:React.PropTypes.func.isRequired}, 


shouldComponentUpdate:function(nextProps){
return nextProps.shouldUpdate;}, 


render:function(){
return this.props.render();}});



module.exports = StaticRenderer;});
__d('react-timer-mixin/TimerMixin',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';










var setter=function(_setter, _clearer, array){
return function(callback, delta){
var id=_setter((function(){
_clearer.call(this, id);
callback.apply(this, arguments);}).
bind(this), delta);

if(!this[array]){
this[array] = [id];}else 
{
this[array].push(id);}

return id;};};



var clearer=function(_clearer, array){
return function(id){
if(this[array]){
var index=this[array].indexOf(id);
if(index !== -1){
this[array].splice(index, 1);}}


_clearer(id);};};



var _timeouts='TimerMixin_timeouts';
var _clearTimeout=clearer(clearTimeout, _timeouts);
var _setTimeout=setter(setTimeout, _clearTimeout, _timeouts);

var _intervals='TimerMixin_intervals';
var _clearInterval=clearer(clearInterval, _intervals);
var _setInterval=setter(setInterval, function(){}, _intervals);

var _immediates='TimerMixin_immediates';
var _clearImmediate=clearer(clearImmediate, _immediates);
var _setImmediate=setter(setImmediate, _clearImmediate, _immediates);

var _rafs='TimerMixin_rafs';
var _cancelAnimationFrame=clearer(cancelAnimationFrame, _rafs);
var _requestAnimationFrame=setter(requestAnimationFrame, _cancelAnimationFrame, _rafs);

var TimerMixin={
componentWillUnmount:function(){
this[_timeouts] && this[_timeouts].forEach(this.clearTimeout);
this[_intervals] && this[_intervals].forEach(this.clearInterval);
this[_immediates] && this[_immediates].forEach(this.clearImmediate);
this[_rafs] && this[_rafs].forEach(this.cancelAnimationFrame);}, 


setTimeout:_setTimeout, 
clearTimeout:_clearTimeout, 

setInterval:_setInterval, 
clearInterval:_clearInterval, 

setImmediate:_setImmediate, 
clearImmediate:_clearImmediate, 

requestAnimationFrame:_requestAnimationFrame, 
cancelAnimationFrame:_cancelAnimationFrame};


module.exports = TimerMixin;});
__d('MapView',["EdgeInsetsPropType","NativeMethodsMixin","Platform","React","ReactNativeViewAttributes","View","createReactNativeComponentClass","deepDiffer","insetsDiffer","merge","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var View=require('View');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var deepDiffer=require('deepDiffer');
var insetsDiffer=require('insetsDiffer');
var merge=require('merge');
var requireNativeComponent=require('requireNativeComponent');









var MapView=React.createClass({displayName:'MapView', 
mixins:[NativeMethodsMixin], 

propTypes:{




style:View.propTypes.style, 









showsUserLocation:React.PropTypes.bool, 





zoomEnabled:React.PropTypes.bool, 








rotateEnabled:React.PropTypes.bool, 








pitchEnabled:React.PropTypes.bool, 





scrollEnabled:React.PropTypes.bool, 







region:React.PropTypes.shape({



latitude:React.PropTypes.number.isRequired, 
longitude:React.PropTypes.number.isRequired, 





latitudeDelta:React.PropTypes.number.isRequired, 
longitudeDelta:React.PropTypes.number.isRequired}), 





annotations:React.PropTypes.arrayOf(React.PropTypes.shape({



latitude:React.PropTypes.number.isRequired, 
longitude:React.PropTypes.number.isRequired, 




title:React.PropTypes.string, 
subtitle:React.PropTypes.string})), 





maxDelta:React.PropTypes.number, 




minDelta:React.PropTypes.number, 





legalLabelInsets:EdgeInsetsPropType, 




onRegionChange:React.PropTypes.func, 




onRegionChangeComplete:React.PropTypes.func}, 


_onChange:function(event){
if(event.nativeEvent.continuous){
this.props.onRegionChange && 
this.props.onRegionChange(event.nativeEvent.region);}else 
{
this.props.onRegionChangeComplete && 
this.props.onRegionChangeComplete(event.nativeEvent.region);}}, 



render:function(){
return React.createElement(RCTMap, _extends({}, this.props, {onChange:this._onChange}));}});



if(Platform.OS === 'android'){
var RCTMap=createReactNativeComponentClass({
validAttributes:merge(
ReactNativeViewAttributes.UIView, {
showsUserLocation:true, 
zoomEnabled:true, 
rotateEnabled:true, 
pitchEnabled:true, 
scrollEnabled:true, 
region:{diff:deepDiffer}, 
annotations:{diff:deepDiffer}, 
maxDelta:true, 
minDelta:true, 
legalLabelInsets:{diff:insetsDiffer}}), 


uiViewClassName:'RCTMap'});}else 

{
var RCTMap=requireNativeComponent('RCTMap', MapView);}


module.exports = MapView;});
__d('Navigator',["NativeModules","BackAndroid","Dimensions","InteractionMixin","NavigatorBreadcrumbNavigationBar","NavigatorInterceptor","NavigatorNavigationBar","NavigatorSceneConfigs","NavigatorStaticContextContainer","PanResponder","Platform","React","StaticContainer.react","StyleSheet","Subscribable","react-timer-mixin/TimerMixin","View","clamp","flattenStyle","getNavigatorContext","invariant","rebound/rebound"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};




























var AnimationsDebugModule=require('NativeModules').AnimationsDebugModule;
var BackAndroid=require('BackAndroid');
var Dimensions=require('Dimensions');
var InteractionMixin=require('InteractionMixin');
var NavigatorBreadcrumbNavigationBar=require('NavigatorBreadcrumbNavigationBar');
var NavigatorInterceptor=require('NavigatorInterceptor');
var NavigatorNavigationBar=require('NavigatorNavigationBar');
var NavigatorSceneConfigs=require('NavigatorSceneConfigs');
var NavigatorStaticContextContainer=require('NavigatorStaticContextContainer');
var PanResponder=require('PanResponder');
var Platform=require('Platform');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var Subscribable=require('Subscribable');
var TimerMixin=require('react-timer-mixin/TimerMixin');
var View=require('View');

var clamp=require('clamp');
var flattenStyle=require('flattenStyle');
var getNavigatorContext=require('getNavigatorContext');
var invariant=require('invariant');
var rebound=require('rebound/rebound');

var PropTypes=React.PropTypes;




var SCREEN_WIDTH=Dimensions.get('window').width;
var SCREEN_HEIGHT=Dimensions.get('window').height;
var SCENE_DISABLED_NATIVE_PROPS={
style:{
left:SCREEN_WIDTH, 
opacity:0}};



var __uid=0;
function getuid(){
return __uid++;}



var styles=StyleSheet.create({
container:{
flex:1, 
overflow:'hidden'}, 

defaultSceneStyle:{
position:'absolute', 
left:0, 
right:0, 
bottom:0, 
top:0}, 

baseScene:{
position:'absolute', 
overflow:'hidden', 
left:0, 
right:0, 
bottom:0, 
top:0}, 

disabledScene:{
left:SCREEN_WIDTH}, 

transitioner:{
flex:1, 
backgroundColor:'transparent', 
overflow:'hidden'}});



var GESTURE_ACTIONS=[
'pop', 
'jumpBack', 
'jumpForward'];































































































var Navigator=React.createClass({displayName:'Navigator', 

propTypes:{









configureScene:PropTypes.func, 










renderScene:PropTypes.func.isRequired, 







initialRoute:PropTypes.object, 






initialRouteStack:PropTypes.arrayOf(PropTypes.object), 




onWillFocus:PropTypes.func, 





onDidFocus:PropTypes.func, 




onItemRef:PropTypes.func, 





navigationBar:PropTypes.node, 




navigator:PropTypes.object, 




sceneStyle:View.propTypes.style}, 


contextTypes:{}, 




statics:{
BreadcrumbNavigationBar:NavigatorBreadcrumbNavigationBar, 
NavigationBar:NavigatorNavigationBar, 
SceneConfigs:NavigatorSceneConfigs, 
Interceptor:NavigatorInterceptor, 
getContext:getNavigatorContext}, 


mixins:[TimerMixin, InteractionMixin, Subscribable.Mixin], 

getDefaultProps:function(){
return {
configureScene:function(){return NavigatorSceneConfigs.PushFromRight;}, 
sceneStyle:styles.defaultSceneStyle};}, 



getInitialState:function(){var _this=this;
var routeStack=this.props.initialRouteStack || [this.props.initialRoute];
invariant(
routeStack.length >= 1, 
'Navigator requires props.initialRoute or props.initialRouteStack.');

var initialRouteIndex=routeStack.length - 1;
if(this.props.initialRoute){
initialRouteIndex = routeStack.indexOf(this.props.initialRoute);
invariant(
initialRouteIndex !== -1, 
'initialRoute is not in initialRouteStack.');}


return {
sceneConfigStack:routeStack.map(
function(route){return _this.props.configureScene(route);}), 

idStack:routeStack.map(function(){return getuid();}), 
routeStack:routeStack, 


updatingRangeStart:0, 
updatingRangeLength:routeStack.length, 
presentedIndex:initialRouteIndex, 
transitionFromIndex:null, 
activeGesture:null, 
pendingGestureProgress:null, 
transitionQueue:[]};}, 



componentWillMount:function(){var _this2=this;
this.parentNavigator = getNavigatorContext(this) || this.props.navigator;
this._subRouteFocus = [];
this.navigatorContext = {

setHandlerForIndex:this.setHandlerForIndex, 
request:this.request, 


parentNavigator:this.parentNavigator, 
getCurrentRoutes:this.getCurrentRoutes, 



pop:this.requestPop, 

jumpBack:this.jumpBack, 
jumpForward:this.jumpForward, 
jumpTo:this.jumpTo, 
popToRoute:this.popToRoute, 
push:this.push, 
replace:this.replace, 
replaceAtIndex:this.replaceAtIndex, 
replacePrevious:this.replacePrevious, 
replacePreviousAndPop:this.replacePreviousAndPop, 
immediatelyResetRouteStack:this.immediatelyResetRouteStack, 
resetTo:this.resetTo, 
popToTop:this.popToTop};

this._handlers = {};
this.springSystem = new rebound.SpringSystem();
this.spring = this.springSystem.createSpring();
this.spring.setRestSpeedThreshold(0.05);
this.spring.setCurrentValue(0).setAtRest();
this.spring.addListener({
onSpringEndStateChange:function(){
if(!_this2._interactionHandle){
_this2._interactionHandle = _this2.createInteractionHandle();}}, 


onSpringUpdate:function(){
_this2._handleSpringUpdate();}, 

onSpringAtRest:function(){
_this2._completeTransition();}});


this.panGesture = PanResponder.create({
onMoveShouldSetPanResponder:this._handleMoveShouldSetPanResponder, 
onPanResponderGrant:this._handlePanResponderGrant, 
onPanResponderRelease:this._handlePanResponderRelease, 
onPanResponderMove:this._handlePanResponderMove, 
onPanResponderTerminate:this._handlePanResponderTerminate});

this._itemRefs = {};
this._interactionHandle = null;
this._emitWillFocus(this.state.routeStack[this.state.presentedIndex]);}, 


request:function(action, arg1, arg2){
if(this.parentNavigator){
return this.parentNavigator.request.apply(null, arguments);}

return this._handleRequest.apply(null, arguments);}, 


requestPop:function(popToBeforeRoute){
return this.request('pop', popToBeforeRoute);}, 


requestPopTo:function(route){
return this.request('popTo', route);}, 


_handleRequest:function(action, arg1, arg2){
var childHandler=this._handlers[this.state.presentedIndex];
if(childHandler && childHandler(action, arg1, arg2)){
return true;}

switch(action){
case 'pop':
return this._handlePop(arg1);
case 'push':
return this._handlePush(arg1);
default:
invariant(false, 'Unsupported request type ' + action);
return false;}}, 



_handlePop:function(popToBeforeRoute){
if(popToBeforeRoute){
var popToBeforeRouteIndex=this.state.routeStack.indexOf(popToBeforeRoute);
if(popToBeforeRouteIndex === -1){
return false;}

invariant(
popToBeforeRouteIndex <= this.state.presentedIndex, 
'Cannot pop past a route that is forward in the navigator');

this._popN(this.state.presentedIndex - popToBeforeRouteIndex + 1);
return true;}

if(this.state.presentedIndex === 0){
return false;}

this.pop();
return true;}, 


_handlePush:function(route){
this.push(route);
return true;}, 


setHandlerForIndex:function(index, handler){
this._handlers[index] = handler;}, 


componentDidMount:function(){
this._handleSpringUpdate();
this._emitDidFocus(this.state.routeStack[this.state.presentedIndex]);
if(this.parentNavigator){
this.parentNavigator.setHandler(this._handleRequest);}else 
if(Platform.OS === 'android'){


BackAndroid.addEventListener('hardwareBackPress', this._handleAndroidBackPress);}}, 



componentWillUnmount:function(){
if(this.parentNavigator){
this.parentNavigator.setHandler(null);}else 
if(Platform.OS === 'android'){
BackAndroid.removeEventListener('hardwareBackPress', this._handleAndroidBackPress);}}, 



_handleAndroidBackPress:function(){
var didPop=this.requestPop();
if(!didPop){
BackAndroid.exitApp();}}, 










immediatelyResetRouteStack:function(nextRouteStack){var _this3=this;
var destIndex=nextRouteStack.length - 1;
this.setState({
idStack:nextRouteStack.map(getuid), 
routeStack:nextRouteStack, 
sceneConfigStack:nextRouteStack.map(
this.props.configureScene), 

updatingRangeStart:0, 
updatingRangeLength:nextRouteStack.length, 
presentedIndex:destIndex, 
activeGesture:null, 
transitionFromIndex:null, 
transitionQueue:[]}, 
function(){
_this3._handleSpringUpdate();});}, 



_transitionTo:function(destIndex, velocity, jumpSpringTo, cb){
if(destIndex === this.state.presentedIndex){
return;}

if(this.state.transitionFromIndex !== null){
this.state.transitionQueue.push({
destIndex:destIndex, 
velocity:velocity, 
cb:cb});

return;}

this.state.transitionFromIndex = this.state.presentedIndex;
this.state.presentedIndex = destIndex;
this.state.transitionCb = cb;
this._onAnimationStart();
if(AnimationsDebugModule){
AnimationsDebugModule.startRecordingFps();}

var sceneConfig=this.state.sceneConfigStack[this.state.transitionFromIndex] || 
this.state.sceneConfigStack[this.state.presentedIndex];
invariant(
sceneConfig, 
'Cannot configure scene at index ' + this.state.transitionFromIndex);

if(jumpSpringTo != null){
this.spring.setCurrentValue(jumpSpringTo);}

this.spring.setOvershootClampingEnabled(true);
this.spring.getSpringConfig().friction = sceneConfig.springFriction;
this.spring.getSpringConfig().tension = sceneConfig.springTension;
this.spring.setVelocity(velocity || sceneConfig.defaultTransitionVelocity);
this.spring.setEndValue(1);
var willFocusRoute=this._subRouteFocus[this.state.presentedIndex] || this.state.routeStack[this.state.presentedIndex];
this._emitWillFocus(willFocusRoute);}, 






_handleSpringUpdate:function(){

if(this.state.transitionFromIndex != null){
this._transitionBetween(
this.state.transitionFromIndex, 
this.state.presentedIndex, 
this.spring.getCurrentValue());}else 

if(this.state.activeGesture != null){
var presentedToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
if(presentedToIndex > -1){
this._transitionBetween(
this.state.presentedIndex, 
presentedToIndex, 
this.spring.getCurrentValue());}}}, 








_completeTransition:function(){
if(this.spring.getCurrentValue() !== 1 && this.spring.getCurrentValue() !== 0){


if(this.state.pendingGestureProgress){
this.state.pendingGestureProgress = null;}

return;}

this._onAnimationEnd();
var presentedIndex=this.state.presentedIndex;
var didFocusRoute=this._subRouteFocus[presentedIndex] || this.state.routeStack[presentedIndex];
this._emitDidFocus(didFocusRoute);
if(AnimationsDebugModule){
AnimationsDebugModule.stopRecordingFps(Date.now());}

this.state.transitionFromIndex = null;
this.spring.setCurrentValue(0).setAtRest();
this._hideScenes();
if(this.state.transitionCb){
this.state.transitionCb();
this.state.transitionCb = null;}

if(this._interactionHandle){
this.clearInteractionHandle(this._interactionHandle);
this._interactionHandle = null;}

if(this.state.pendingGestureProgress){


var gestureToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._enableScene(gestureToIndex);
this.spring.setEndValue(this.state.pendingGestureProgress);
return;}

if(this.state.transitionQueue.length){
var queuedTransition=this.state.transitionQueue.shift();
this._enableScene(queuedTransition.destIndex);
this._transitionTo(
queuedTransition.destIndex, 
queuedTransition.velocity, 
null, 
queuedTransition.cb);}}, 




_emitDidFocus:function(route){
if(this._lastDidFocus === route){
return;}

this._lastDidFocus = route;
if(this.props.onDidFocus){
this.props.onDidFocus(route);}

if(this.parentNavigator && this.parentNavigator.onDidFocus){
this.parentNavigator.onDidFocus(route);}}, 



_emitWillFocus:function(route){
if(this._lastWillFocus === route){
return;}

this._lastWillFocus = route;
var navBar=this._navBar;
if(navBar && navBar.handleWillFocus){
navBar.handleWillFocus(route);}

if(this.props.onWillFocus){
this.props.onWillFocus(route);}

if(this.parentNavigator && this.parentNavigator.onWillFocus){
this.parentNavigator.onWillFocus(route);}}, 






_hideScenes:function(){
var gesturingToIndex=null;
if(this.state.activeGesture){
gesturingToIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);}

for(var i=0; i < this.state.routeStack.length; i++) {
if(i === this.state.presentedIndex || 
i === this.state.transitionFromIndex || 
i === gesturingToIndex){
continue;}

this._disableScene(i);}}, 






_disableScene:function(sceneIndex){
this.refs['scene_' + sceneIndex] && 
this.refs['scene_' + sceneIndex].setNativeProps(SCENE_DISABLED_NATIVE_PROPS);}, 





_enableScene:function(sceneIndex){

var sceneStyle=flattenStyle([styles.baseScene, this.props.sceneStyle]);

var enabledSceneNativeProps={
left:sceneStyle.left};

if(sceneIndex !== this.state.transitionFromIndex && 
sceneIndex !== this.state.presentedIndex){


enabledSceneNativeProps.opacity = 0;}

this.refs['scene_' + sceneIndex] && 
this.refs['scene_' + sceneIndex].setNativeProps(enabledSceneNativeProps);}, 


_onAnimationStart:function(){
var fromIndex=this.state.presentedIndex;
var toIndex=this.state.presentedIndex;
if(this.state.transitionFromIndex != null){
fromIndex = this.state.transitionFromIndex;}else 
if(this.state.activeGesture){
toIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);}

this._setRenderSceneToHarwareTextureAndroid(fromIndex, true);
this._setRenderSceneToHarwareTextureAndroid(toIndex, true);
var navBar=this._navBar;
if(navBar && navBar.onAnimationStart){
navBar.onAnimationStart(fromIndex, toIndex);}}, 



_onAnimationEnd:function(){
var max=this.state.routeStack.length - 1;
for(var index=0; index <= max; index++) {
this._setRenderSceneToHarwareTextureAndroid(index, false);}


var navBar=this._navBar;
if(navBar && navBar.onAnimationEnd){
navBar.onAnimationEnd();}}, 



_setRenderSceneToHarwareTextureAndroid:function(sceneIndex, shouldRenderToHardwareTexture){
var viewAtIndex=this.refs['scene_' + sceneIndex];
if(viewAtIndex === null || viewAtIndex === undefined){
return;}

viewAtIndex.setNativeProps({renderToHardwareTextureAndroid:shouldRenderToHardwareTexture});}, 


_handleTouchStart:function(){
this._eligibleGestures = GESTURE_ACTIONS;}, 


_handleMoveShouldSetPanResponder:function(e, gestureState){
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
this._expectingGestureGrant = this._matchGestureAction(this._eligibleGestures, sceneConfig.gestures, gestureState);
return !!this._expectingGestureGrant;}, 


_doesGestureOverswipe:function(gestureName){
var wouldOverswipeBack=this.state.presentedIndex <= 0 && (
gestureName === 'pop' || gestureName === 'jumpBack');
var wouldOverswipeForward=this.state.presentedIndex >= this.state.routeStack.length - 1 && 
gestureName === 'jumpForward';
return wouldOverswipeForward || wouldOverswipeBack;}, 


_handlePanResponderGrant:function(e, gestureState){
invariant(
this._expectingGestureGrant, 
'Responder granted unexpectedly.');

this._attachGesture(this._expectingGestureGrant);
this._onAnimationStart();
this._expectingGestureGrant = null;}, 


_deltaForGestureAction:function(gestureAction){
switch(gestureAction){
case 'pop':
case 'jumpBack':
return -1;
case 'jumpForward':
return 1;
default:
invariant(false, 'Unsupported gesture action ' + gestureAction);
return;}}, 



_handlePanResponderRelease:function(e, gestureState){var _this4=this;
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
var releaseGestureAction=this.state.activeGesture;
if(!releaseGestureAction){

return;}

var releaseGesture=sceneConfig.gestures[releaseGestureAction];
var destIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
if(this.spring.getCurrentValue() === 0){

this.spring.setCurrentValue(0).setAtRest();
this._completeTransition();
return;}

var isTravelVertical=releaseGesture.direction === 'top-to-bottom' || releaseGesture.direction === 'bottom-to-top';
var isTravelInverted=releaseGesture.direction === 'right-to-left' || releaseGesture.direction === 'bottom-to-top';
var velocity, gestureDistance;
if(isTravelVertical){
velocity = isTravelInverted?-gestureState.vy:gestureState.vy;
gestureDistance = isTravelInverted?-gestureState.dy:gestureState.dy;}else 
{
velocity = isTravelInverted?-gestureState.vx:gestureState.vx;
gestureDistance = isTravelInverted?-gestureState.dx:gestureState.dx;}

var transitionVelocity=clamp(-10, velocity, 10);
if(Math.abs(velocity) < releaseGesture.notMoving){

var hasGesturedEnoughToComplete=gestureDistance > releaseGesture.fullDistance * releaseGesture.stillCompletionRatio;
transitionVelocity = hasGesturedEnoughToComplete?releaseGesture.snapVelocity:-releaseGesture.snapVelocity;}

if(transitionVelocity < 0 || this._doesGestureOverswipe(releaseGestureAction)){


if(this.state.transitionFromIndex == null){

var transitionBackToPresentedIndex=this.state.presentedIndex;

this.state.presentedIndex = destIndex;
this._transitionTo(
transitionBackToPresentedIndex, 
-transitionVelocity, 
1 - this.spring.getCurrentValue());}}else 


{

this._transitionTo(
destIndex, 
transitionVelocity, 
null, 
function(){
if(releaseGestureAction === 'pop'){
_this4._cleanScenesPastIndex(destIndex);}});}




this._detachGesture();}, 


_handlePanResponderTerminate:function(e, gestureState){
var destIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._detachGesture();
var transitionBackToPresentedIndex=this.state.presentedIndex;

this.state.presentedIndex = destIndex;
this._transitionTo(
transitionBackToPresentedIndex, 
null, 
1 - this.spring.getCurrentValue());}, 



_attachGesture:function(gestureId){
this.state.activeGesture = gestureId;
var gesturingToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._enableScene(gesturingToIndex);}, 


_detachGesture:function(){
this.state.activeGesture = null;
this.state.pendingGestureProgress = null;
this._hideScenes();}, 


_handlePanResponderMove:function(e, gestureState){
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
if(this.state.activeGesture){
var gesture=sceneConfig.gestures[this.state.activeGesture];
return this._moveAttachedGesture(gesture, gestureState);}

var matchedGesture=this._matchGestureAction(GESTURE_ACTIONS, sceneConfig.gestures, gestureState);
if(matchedGesture){
this._attachGesture(matchedGesture);}}, 



_moveAttachedGesture:function(gesture, gestureState){
var isTravelVertical=gesture.direction === 'top-to-bottom' || gesture.direction === 'bottom-to-top';
var isTravelInverted=gesture.direction === 'right-to-left' || gesture.direction === 'bottom-to-top';
var distance=isTravelVertical?gestureState.dy:gestureState.dx;
distance = isTravelInverted?-distance:distance;
var gestureDetectMovement=gesture.gestureDetectMovement;
var nextProgress=(distance - gestureDetectMovement) / (
gesture.fullDistance - gestureDetectMovement);
if(nextProgress < 0 && gesture.isDetachable){
var gesturingToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._transitionBetween(this.state.presentedIndex, gesturingToIndex, 0);
this._detachGesture();
if(this.state.pendingGestureProgress != null){
this.spring.setCurrentValue(0);}

return;}

if(this._doesGestureOverswipe(this.state.activeGesture)){
var frictionConstant=gesture.overswipe.frictionConstant;
var frictionByDistance=gesture.overswipe.frictionByDistance;
var frictionRatio=1 / (frictionConstant + Math.abs(nextProgress) * frictionByDistance);
nextProgress *= frictionRatio;}

nextProgress = clamp(0, nextProgress, 1);
if(this.state.transitionFromIndex != null){
this.state.pendingGestureProgress = nextProgress;}else 
if(this.state.pendingGestureProgress){
this.spring.setEndValue(nextProgress);}else 
{
this.spring.setCurrentValue(nextProgress);}}, 



_matchGestureAction:function(eligibleGestures, gestures, gestureState){var _this5=this;
if(!gestures){
return null;}

var matchedGesture=null;
eligibleGestures.some(function(gestureName, gestureIndex){
var gesture=gestures[gestureName];
if(!gesture){
return;}

if(gesture.overswipe == null && _this5._doesGestureOverswipe(gestureName)){

return false;}

var isTravelVertical=gesture.direction === 'top-to-bottom' || gesture.direction === 'bottom-to-top';
var isTravelInverted=gesture.direction === 'right-to-left' || gesture.direction === 'bottom-to-top';
var currentLoc=isTravelVertical?gestureState.moveY:gestureState.moveX;
var travelDist=isTravelVertical?gestureState.dy:gestureState.dx;
var oppositeAxisTravelDist=
isTravelVertical?gestureState.dx:gestureState.dy;
var edgeHitWidth=gesture.edgeHitWidth;
if(isTravelInverted){
currentLoc = -currentLoc;
travelDist = -travelDist;
oppositeAxisTravelDist = -oppositeAxisTravelDist;
edgeHitWidth = isTravelVertical?
-(SCREEN_HEIGHT - edgeHitWidth):
-(SCREEN_WIDTH - edgeHitWidth);}

var moveStartedInRegion=gesture.edgeHitWidth == null || 
currentLoc < edgeHitWidth;
if(!moveStartedInRegion){
return false;}

var moveTravelledFarEnough=travelDist >= gesture.gestureDetectMovement;
if(!moveTravelledFarEnough){
return false;}

var directionIsCorrect=Math.abs(travelDist) > Math.abs(oppositeAxisTravelDist) * gesture.directionRatio;
if(directionIsCorrect){
matchedGesture = gestureName;
return true;}else 
{
_this5._eligibleGestures = _this5._eligibleGestures.slice().splice(gestureIndex, 1);}});


return matchedGesture;}, 


_transitionSceneStyle:function(fromIndex, toIndex, progress, index){
var viewAtIndex=this.refs['scene_' + index];
if(viewAtIndex === null || viewAtIndex === undefined){
return;}


var sceneConfigIndex=fromIndex < toIndex?toIndex:fromIndex;
var sceneConfig=this.state.sceneConfigStack[sceneConfigIndex];

if(!sceneConfig){
sceneConfig = this.state.sceneConfigStack[sceneConfigIndex - 1];}

var styleToUse={};
var useFn=index < fromIndex || index < toIndex?
sceneConfig.animationInterpolators.out:
sceneConfig.animationInterpolators.into;
var directionAdjustedProgress=fromIndex < toIndex?progress:1 - progress;
var didChange=useFn(styleToUse, directionAdjustedProgress);
if(didChange){
viewAtIndex.setNativeProps({style:styleToUse});}}, 



_transitionBetween:function(fromIndex, toIndex, progress){
this._transitionSceneStyle(fromIndex, toIndex, progress, fromIndex);
this._transitionSceneStyle(fromIndex, toIndex, progress, toIndex);
var navBar=this._navBar;
if(navBar && navBar.updateProgress){
navBar.updateProgress(progress, fromIndex, toIndex);}}, 



_handleResponderTerminationRequest:function(){
return false;}, 


_resetUpdatingRange:function(){
this.state.updatingRangeStart = 0;
this.state.updatingRangeLength = this.state.routeStack.length;}, 


_getDestIndexWithinBounds:function(n){
var currentIndex=this.state.presentedIndex;
var destIndex=currentIndex + n;
invariant(
destIndex >= 0, 
'Cannot jump before the first route.');

var maxIndex=this.state.routeStack.length - 1;
invariant(
maxIndex >= destIndex, 
'Cannot jump past the last route.');

return destIndex;}, 


_jumpN:function(n){var _this6=this;
var destIndex=this._getDestIndexWithinBounds(n);
var requestTransitionAndResetUpdatingRange=function(){
_this6._enableScene(destIndex);
_this6._transitionTo(destIndex);
_this6._resetUpdatingRange();};

this.setState({
updatingRangeStart:destIndex, 
updatingRangeLength:1}, 
requestTransitionAndResetUpdatingRange);}, 


jumpTo:function(route){
var destIndex=this.state.routeStack.indexOf(route);
invariant(
destIndex !== -1, 
'Cannot jump to route that is not in the route stack');

this._jumpN(destIndex - this.state.presentedIndex);}, 


jumpForward:function(){
this._jumpN(1);}, 


jumpBack:function(){
this._jumpN(-1);}, 


push:function(route){var _this7=this;
invariant(!!route, 'Must supply route to push');
var activeLength=this.state.presentedIndex + 1;
var activeStack=this.state.routeStack.slice(0, activeLength);
var activeIDStack=this.state.idStack.slice(0, activeLength);
var activeAnimationConfigStack=this.state.sceneConfigStack.slice(0, activeLength);
var nextStack=activeStack.concat([route]);
var destIndex=nextStack.length - 1;
var nextIDStack=activeIDStack.concat([getuid()]);
var nextAnimationConfigStack=activeAnimationConfigStack.concat([
this.props.configureScene(route)]);

var requestTransitionAndResetUpdatingRange=function(){
_this7._enableScene(destIndex);
_this7._transitionTo(destIndex);
_this7._resetUpdatingRange();};

this.setState({
idStack:nextIDStack, 
routeStack:nextStack, 
sceneConfigStack:nextAnimationConfigStack, 
updatingRangeStart:nextStack.length - 1, 
updatingRangeLength:1}, 
requestTransitionAndResetUpdatingRange);}, 


_popN:function(n){var _this8=this;
if(n === 0){
return;}

invariant(
this.state.presentedIndex - n >= 0, 
'Cannot pop below zero');

var popIndex=this.state.presentedIndex - n;
this._enableScene(popIndex);
this._transitionTo(
popIndex, 
null, 
null, 
function(){
_this8._cleanScenesPastIndex(popIndex);});}, 




pop:function(){
this._popN(1);}, 








replaceAtIndex:function(route, index, cb){var _this9=this;
invariant(!!route, 'Must supply route to replace');
if(index < 0){
index += this.state.routeStack.length;}


if(this.state.routeStack.length <= index){
return;}




var nextIDStack=this.state.idStack.slice();
var nextRouteStack=this.state.routeStack.slice();
var nextAnimationModeStack=this.state.sceneConfigStack.slice();
nextIDStack[index] = getuid();
nextRouteStack[index] = route;
nextAnimationModeStack[index] = this.props.configureScene(route);

this.setState({
idStack:nextIDStack, 
routeStack:nextRouteStack, 
sceneConfigStack:nextAnimationModeStack, 
updatingRangeStart:index, 
updatingRangeLength:1}, 
function(){
_this9._resetUpdatingRange();
if(index === _this9.state.presentedIndex){
_this9._emitWillFocus(route);
_this9._emitDidFocus(route);}

cb && cb();});}, 






replace:function(route){
this.replaceAtIndex(route, this.state.presentedIndex);}, 





replacePrevious:function(route){
this.replaceAtIndex(route, this.state.presentedIndex - 1);}, 


popToTop:function(){
this.popToRoute(this.state.routeStack[0]);}, 


popToRoute:function(route){
var indexOfRoute=this.state.routeStack.indexOf(route);
invariant(
indexOfRoute !== -1, 
'Calling popToRoute for a route that doesn\'t exist!');

var numToPop=this.state.presentedIndex - indexOfRoute;
this._popN(numToPop);}, 


replacePreviousAndPop:function(route){
if(this.state.routeStack.length < 2){
return;}

this.replacePrevious(route);
this.pop();}, 


resetTo:function(route){var _this10=this;
invariant(!!route, 'Must supply route to push');
this.replaceAtIndex(route, 0, function(){


if(_this10.state.presentedIndex > 0){
_this10._popN(_this10.state.presentedIndex);}});}, 




getCurrentRoutes:function(){
return this.state.routeStack;}, 


_handleItemRef:function(itemId, route, ref){
this._itemRefs[itemId] = ref;
var itemIndex=this.state.idStack.indexOf(itemId);
if(itemIndex === -1){
return;}

this.props.onItemRef && this.props.onItemRef(ref, itemIndex, route);}, 


_cleanScenesPastIndex:function(index){var _this11=this;
var newStackLength=index + 1;

if(newStackLength < this.state.routeStack.length){
var updatingRangeStart=newStackLength;
var updatingRangeLength=this.state.routeStack.length - newStackLength + 1;
this.state.idStack.slice(newStackLength).map(function(removingId){
_this11._itemRefs[removingId] = null;});

this.setState({
updatingRangeStart:updatingRangeStart, 
updatingRangeLength:updatingRangeLength, 
sceneConfigStack:this.state.sceneConfigStack.slice(0, newStackLength), 
idStack:this.state.idStack.slice(0, newStackLength), 
routeStack:this.state.routeStack.slice(0, newStackLength)}, 
this._resetUpdatingRange);}}, 



_renderOptimizedScenes:function(){







var shouldRenderScenes=this.state.updatingRangeLength !== 0;
if(shouldRenderScenes){
return (
React.createElement(StaticContainer, {shouldUpdate:true}, 
React.createElement(View, _extends({
style:styles.transitioner}, 
this.panGesture.panHandlers, {
onTouchStart:this._handleTouchStart, 
onResponderTerminationRequest:
this._handleResponderTerminationRequest}), 

this.state.routeStack.map(this._renderOptimizedScene))));}









return (
React.createElement(StaticContainer, {shouldUpdate:false}));}, 



_renderOptimizedScene:function(route, i){var _this12=this;
var shouldRenderScene=
i >= this.state.updatingRangeStart && 
i <= this.state.updatingRangeStart + this.state.updatingRangeLength;
var sceneNavigatorContext=_extends({}, 
this.navigatorContext, {
route:route, 
setHandler:function(handler){
_this12.navigatorContext.setHandlerForIndex(i, handler);}, 

onWillFocus:function(childRoute){
_this12._subRouteFocus[i] = childRoute;
if(_this12.state.presentedIndex === i){
_this12._emitWillFocus(childRoute);}}, 


onDidFocus:function(childRoute){
_this12._subRouteFocus[i] = childRoute;
if(_this12.state.presentedIndex === i){
_this12._emitDidFocus(childRoute);}}});



var scene=shouldRenderScene?
this._renderScene(route, i, sceneNavigatorContext):null;
return (
React.createElement(NavigatorStaticContextContainer, {
navigatorContext:sceneNavigatorContext, 
key:'nav' + i, 
shouldUpdate:shouldRenderScene}, 
scene));}, 




_renderScene:function(route, i, sceneNavigatorContext){var _this13=this;
var child=this.props.renderScene(
route, 
sceneNavigatorContext);

var disabledSceneStyle=null;
if(i !== this.state.presentedIndex){
disabledSceneStyle = styles.disabledScene;}

var originalRef=child.ref;
if(originalRef != null && typeof originalRef !== 'function'){
console.warn(
'String refs are not supported for navigator scenes. Use a callback ' + 
'ref instead. Ignoring ref: ' + originalRef);

originalRef = null;}

return (
React.createElement(View, {
key:this.state.idStack[i], 
ref:'scene_' + i, 
onStartShouldSetResponderCapture:function(){
return !!_this13.state.transitionFromIndex || !!_this13.state.activeGesture;}, 

style:[styles.baseScene, this.props.sceneStyle, disabledSceneStyle]}, 
React.cloneElement(child, {
ref:function(component){
_this13._handleItemRef(_this13.state.idStack[i], route, component);
if(originalRef){
originalRef(component);}}})));}, 







_renderNavigationBar:function(){var _this14=this;
if(!this.props.navigationBar){
return null;}

return React.cloneElement(this.props.navigationBar, {
ref:function(navBar){_this14._navBar = navBar;}, 
navigator:this.navigatorContext, 
navState:this.state});}, 



render:function(){
return (
React.createElement(View, {style:[styles.container, this.props.style]}, 
this._renderOptimizedScenes(), 
this._renderNavigationBar()));}});





module.exports = Navigator;});
__d('BackAndroid',["warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';







var warning=require('warning');

function platformWarn(){
warning(false, 'BackAndroid is not supported on this platform.');}


var BackAndroid={
exitApp:platformWarn, 
addEventListener:platformWarn, 
removeEventListener:platformWarn};


module.exports = BackAndroid;});
__d('InteractionMixin',["InteractionManager"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';







var InteractionManager=require('InteractionManager');






var InteractionMixin={
componentWillUnmount:function(){
while(this._interactionMixinHandles.length) {
InteractionManager.clearInteractionHandle(
this._interactionMixinHandles.pop());}}, 




_interactionMixinHandles:[], 

createInteractionHandle:function(){
var handle=InteractionManager.createInteractionHandle();
this._interactionMixinHandles.push(handle);
return handle;}, 


clearInteractionHandle:function(clearHandle){
InteractionManager.clearInteractionHandle(clearHandle);
this._interactionMixinHandles = this._interactionMixinHandles.filter(
function(handle){return handle !== clearHandle;});}, 








runAfterInteractions:function(callback){
InteractionManager.runAfterInteractions(callback);}};



module.exports = InteractionMixin;});
__d('NavigatorBreadcrumbNavigationBar',["NavigatorBreadcrumbNavigationBarStyles","NavigatorNavigationBarStyles","React","StaticContainer.react","StyleSheet","View","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var NavigatorBreadcrumbNavigationBarStyles=require('NavigatorBreadcrumbNavigationBarStyles');
var NavigatorNavigationBarStyles=require('NavigatorNavigationBarStyles');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');

var invariant=require('invariant');

var Interpolators=NavigatorBreadcrumbNavigationBarStyles.Interpolators;
var PropTypes=React.PropTypes;




var CRUMB_PROPS=Interpolators.map(function(){return {style:{}};});
var ICON_PROPS=Interpolators.map(function(){return {style:{}};});
var SEPARATOR_PROPS=Interpolators.map(function(){return {style:{}};});
var TITLE_PROPS=Interpolators.map(function(){return {style:{}};});
var RIGHT_BUTTON_PROPS=Interpolators.map(function(){return {style:{}};});


var navStatePresentedIndex=function(navState){
if(navState.presentedIndex !== undefined){
return navState.presentedIndex;}


return navState.observedTopOfStack;};










var initStyle=function(index, presentedIndex){
return index === presentedIndex?NavigatorBreadcrumbNavigationBarStyles.Center[index]:
index < presentedIndex?NavigatorBreadcrumbNavigationBarStyles.Left[index]:
NavigatorBreadcrumbNavigationBarStyles.Right[index];};


var NavigatorBreadcrumbNavigationBar=React.createClass({displayName:'NavigatorBreadcrumbNavigationBar', 
propTypes:{
navigator:PropTypes.shape({
push:PropTypes.func, 
pop:PropTypes.func, 
replace:PropTypes.func, 
popToRoute:PropTypes.func, 
popToTop:PropTypes.func}), 

routeMapper:PropTypes.shape({
rightContentForRoute:PropTypes.func, 
titleContentForRoute:PropTypes.func, 
iconForRoute:PropTypes.func}), 

navState:React.PropTypes.shape({
routeStack:React.PropTypes.arrayOf(React.PropTypes.object), 
idStack:React.PropTypes.arrayOf(React.PropTypes.number), 
presentedIndex:React.PropTypes.number}), 

style:View.propTypes.style}, 


statics:{
Styles:NavigatorBreadcrumbNavigationBarStyles}, 


_updateIndexProgress:function(progress, index, fromIndex, toIndex){
var amount=toIndex > fromIndex?progress:1 - progress;
var oldDistToCenter=index - fromIndex;
var newDistToCenter=index - toIndex;
var interpolate;
invariant(
Interpolators[index], 
'Cannot find breadcrumb interpolators for ' + index);

if(oldDistToCenter > 0 && newDistToCenter === 0 || 
newDistToCenter > 0 && oldDistToCenter === 0){
interpolate = Interpolators[index].RightToCenter;}else 
if(oldDistToCenter < 0 && newDistToCenter === 0 || 
newDistToCenter < 0 && oldDistToCenter === 0){
interpolate = Interpolators[index].CenterToLeft;}else 
if(oldDistToCenter === newDistToCenter){
interpolate = Interpolators[index].RightToCenter;}else 
{
interpolate = Interpolators[index].RightToLeft;}


if(interpolate.Crumb(CRUMB_PROPS[index].style, amount)){
this.refs['crumb_' + index].setNativeProps(CRUMB_PROPS[index]);}

if(interpolate.Icon(ICON_PROPS[index].style, amount)){
this.refs['icon_' + index].setNativeProps(ICON_PROPS[index]);}

if(interpolate.Separator(SEPARATOR_PROPS[index].style, amount)){
this.refs['separator_' + index].setNativeProps(SEPARATOR_PROPS[index]);}

if(interpolate.Title(TITLE_PROPS[index].style, amount)){
this.refs['title_' + index].setNativeProps(TITLE_PROPS[index]);}

var right=this.refs['right_' + index];
if(right && 
interpolate.RightItem(RIGHT_BUTTON_PROPS[index].style, amount)){
right.setNativeProps(RIGHT_BUTTON_PROPS[index]);}}, 



updateProgress:function(progress, fromIndex, toIndex){
var max=Math.max(fromIndex, toIndex);
var min=Math.min(fromIndex, toIndex);
for(var index=min; index <= max; index++) {
this._updateIndexProgress(progress, index, fromIndex, toIndex);}}, 



onAnimationStart:function(fromIndex, toIndex){
var max=Math.max(fromIndex, toIndex);
var min=Math.min(fromIndex, toIndex);
for(var index=min; index <= max; index++) {
this._setRenderViewsToHardwareTextureAndroid(index, true);}}, 



onAnimationEnd:function(){
var max=this.props.navState.routeStack.length - 1;
for(var index=0; index <= max; index++) {
this._setRenderViewsToHardwareTextureAndroid(index, false);}}, 



_setRenderViewsToHardwareTextureAndroid:function(index, renderToHardwareTexture){
var props={
renderToHardwareTextureAndroid:renderToHardwareTexture};


this.refs['crumb_' + index].setNativeProps(props);
this.refs['icon_' + index].setNativeProps(props);
this.refs['separator_' + index].setNativeProps(props);
this.refs['title_' + index].setNativeProps(props);
var right=this.refs['right_' + index];
if(right){
right.setNativeProps(props);}}, 



render:function(){
var navState=this.props.navState;
var icons=navState && navState.routeStack.map(this._renderOrReturnBreadcrumb);
var titles=navState.routeStack.map(this._renderOrReturnTitle);
var buttons=navState.routeStack.map(this._renderOrReturnRightButton);
return (
React.createElement(View, {style:[styles.breadCrumbContainer, this.props.style]}, 
titles, 
icons, 
buttons));}, 




_renderOrReturnBreadcrumb:function(route, index){
var uid=this.props.navState.idStack[index];
var navBarRouteMapper=this.props.routeMapper;
var navOps=this.props.navigator;
var alreadyRendered=this.refs['crumbContainer' + uid];
if(alreadyRendered){

return (
React.createElement(StaticContainer, {
ref:'crumbContainer' + uid, 
key:'crumbContainer' + uid, 
shouldUpdate:false}));}



var firstStyles=initStyle(index, navStatePresentedIndex(this.props.navState));
return (
React.createElement(StaticContainer, {
ref:'crumbContainer' + uid, 
key:'crumbContainer' + uid, 
shouldUpdate:false}, 
React.createElement(View, {ref:'crumb_' + index, style:firstStyles.Crumb}, 
React.createElement(View, {ref:'icon_' + index, style:firstStyles.Icon}, 
navBarRouteMapper.iconForRoute(route, navOps)), 

React.createElement(View, {ref:'separator_' + index, style:firstStyles.Separator}, 
navBarRouteMapper.separatorForRoute(route, navOps)))));}, 






_renderOrReturnTitle:function(route, index){
var navState=this.props.navState;
var uid=navState.idStack[index];
var alreadyRendered=this.refs['titleContainer' + uid];
if(alreadyRendered){

return (
React.createElement(StaticContainer, {
ref:'titleContainer' + uid, 
key:'titleContainer' + uid, 
shouldUpdate:false}));}



var navBarRouteMapper=this.props.routeMapper;
var titleContent=navBarRouteMapper.titleContentForRoute(
navState.routeStack[index], 
this.props.navigator);

var firstStyles=initStyle(index, navStatePresentedIndex(this.props.navState));
return (
React.createElement(StaticContainer, {
ref:'titleContainer' + uid, 
key:'titleContainer' + uid, 
shouldUpdate:false}, 
React.createElement(View, {ref:'title_' + index, style:firstStyles.Title}, 
titleContent)));}, 





_renderOrReturnRightButton:function(route, index){
var navState=this.props.navState;
var navBarRouteMapper=this.props.routeMapper;
var uid=navState.idStack[index];
var alreadyRendered=this.refs['rightContainer' + uid];
if(alreadyRendered){

return (
React.createElement(StaticContainer, {
ref:'rightContainer' + uid, 
key:'rightContainer' + uid, 
shouldUpdate:false}));}



var rightContent=navBarRouteMapper.rightContentForRoute(
navState.routeStack[index], 
this.props.navigator);

if(!rightContent){
return null;}

var firstStyles=initStyle(index, navStatePresentedIndex(this.props.navState));
return (
React.createElement(StaticContainer, {
ref:'rightContainer' + uid, 
key:'rightContainer' + uid, 
shouldUpdate:false}, 
React.createElement(View, {ref:'right_' + index, style:firstStyles.RightItem}, 
rightContent)));}});






var styles=StyleSheet.create({
breadCrumbContainer:{
overflow:'hidden', 
position:'absolute', 
height:NavigatorNavigationBarStyles.General.TotalNavHeight, 
top:0, 
left:0, 
right:0}});



module.exports = NavigatorBreadcrumbNavigationBar;});
__d('NavigatorBreadcrumbNavigationBarStyles',["Dimensions","NavigatorNavigationBarStyles","buildStyleInterpolator","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var Dimensions=require('Dimensions');
var NavigatorNavigationBarStyles=require('NavigatorNavigationBarStyles');

var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');

var SCREEN_WIDTH=Dimensions.get('window').width;
var STATUS_BAR_HEIGHT=NavigatorNavigationBarStyles.General.StatusBarHeight;
var NAV_BAR_HEIGHT=NavigatorNavigationBarStyles.General.NavBarHeight;

var SPACING=4;
var ICON_WIDTH=40;
var SEPARATOR_WIDTH=9;
var CRUMB_WIDTH=ICON_WIDTH + SEPARATOR_WIDTH;

var OPACITY_RATIO=100;
var ICON_INACTIVE_OPACITY=0.6;
var MAX_BREADCRUMBS=10;

var CRUMB_BASE={
position:'absolute', 
flexDirection:'row', 
top:STATUS_BAR_HEIGHT, 
width:CRUMB_WIDTH, 
height:NAV_BAR_HEIGHT, 
backgroundColor:'transparent'};


var ICON_BASE={
width:ICON_WIDTH, 
height:NAV_BAR_HEIGHT};


var SEPARATOR_BASE={
width:SEPARATOR_WIDTH, 
height:NAV_BAR_HEIGHT};


var TITLE_BASE={
position:'absolute', 
top:STATUS_BAR_HEIGHT, 
height:NAV_BAR_HEIGHT, 
backgroundColor:'transparent'};



var FIRST_TITLE_BASE=merge(TITLE_BASE, {
left:0, 
right:0, 
alignItems:'center', 
height:NAV_BAR_HEIGHT});


var RIGHT_BUTTON_BASE={
position:'absolute', 
top:STATUS_BAR_HEIGHT, 
right:SPACING, 
overflow:'hidden', 
opacity:1, 
height:NAV_BAR_HEIGHT, 
backgroundColor:'transparent'};






var LEFT=[];
var CENTER=[];
var RIGHT=[];
for(var i=0; i < MAX_BREADCRUMBS; i++) {
var crumbLeft=CRUMB_WIDTH * i + SPACING;
LEFT[i] = {
Crumb:merge(CRUMB_BASE, {left:crumbLeft}), 
Icon:merge(ICON_BASE, {opacity:ICON_INACTIVE_OPACITY}), 
Separator:merge(SEPARATOR_BASE, {opacity:1}), 
Title:merge(TITLE_BASE, {left:crumbLeft, opacity:0}), 
RightItem:merge(RIGHT_BUTTON_BASE, {opacity:0})};

CENTER[i] = {
Crumb:merge(CRUMB_BASE, {left:crumbLeft}), 
Icon:merge(ICON_BASE, {opacity:1}), 
Separator:merge(SEPARATOR_BASE, {opacity:0}), 
Title:merge(TITLE_BASE, {
left:crumbLeft + ICON_WIDTH, 
opacity:1}), 

RightItem:merge(RIGHT_BUTTON_BASE, {opacity:1})};

var crumbRight=SCREEN_WIDTH - 100;
RIGHT[i] = {
Crumb:merge(CRUMB_BASE, {left:crumbRight}), 
Icon:merge(ICON_BASE, {opacity:0}), 
Separator:merge(SEPARATOR_BASE, {opacity:0}), 
Title:merge(TITLE_BASE, {
left:crumbRight + ICON_WIDTH, 
opacity:0}), 

RightItem:merge(RIGHT_BUTTON_BASE, {opacity:0})};}




CENTER[0] = {
Crumb:merge(CRUMB_BASE, {left:SCREEN_WIDTH / 4}), 
Icon:merge(ICON_BASE, {opacity:0}), 
Separator:merge(SEPARATOR_BASE, {opacity:0}), 
Title:merge(FIRST_TITLE_BASE, {opacity:1}), 
RightItem:CENTER[0].RightItem};

LEFT[0].Title = merge(FIRST_TITLE_BASE, {left:-SCREEN_WIDTH / 4, opacity:0});
RIGHT[0].Title = merge(FIRST_TITLE_BASE, {opacity:0});


var buildIndexSceneInterpolator=function(startStyles, endStyles){
return {
Crumb:buildStyleInterpolator({
left:{
type:'linear', 
from:startStyles.Crumb.left, 
to:endStyles.Crumb.left, 
min:0, 
max:1, 
extrapolate:true}}), 


Icon:buildStyleInterpolator({
opacity:{
type:'linear', 
from:startStyles.Icon.opacity, 
to:endStyles.Icon.opacity, 
min:0, 
max:1}}), 


Separator:buildStyleInterpolator({
opacity:{
type:'linear', 
from:startStyles.Separator.opacity, 
to:endStyles.Separator.opacity, 
min:0, 
max:1}}), 


Title:buildStyleInterpolator({
opacity:{
type:'linear', 
from:startStyles.Title.opacity, 
to:endStyles.Title.opacity, 
min:0, 
max:1}, 

left:{
type:'linear', 
from:startStyles.Title.left, 
to:endStyles.Title.left, 
min:0, 
max:1, 
extrapolate:true}}), 


RightItem:buildStyleInterpolator({
opacity:{
type:'linear', 
from:startStyles.RightItem.opacity, 
to:endStyles.RightItem.opacity, 
min:0, 
max:1, 
round:OPACITY_RATIO}})};};





var Interpolators=CENTER.map(function(_, ii){
return {

RightToCenter:buildIndexSceneInterpolator(RIGHT[ii], CENTER[ii]), 

CenterToLeft:buildIndexSceneInterpolator(CENTER[ii], LEFT[ii]), 

RightToLeft:buildIndexSceneInterpolator(RIGHT[ii], LEFT[ii])};});







module.exports = {
Interpolators:Interpolators, 
Left:LEFT, 
Center:CENTER, 
Right:RIGHT, 
IconWidth:ICON_WIDTH, 
IconHeight:NAV_BAR_HEIGHT, 
SeparatorWidth:SEPARATOR_WIDTH, 
SeparatorHeight:NAV_BAR_HEIGHT};});
__d('NavigatorNavigationBarStyles',["Dimensions","buildStyleInterpolator","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var Dimensions=require('Dimensions');

var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');

var SCREEN_WIDTH=Dimensions.get('window').width;
var NAV_BAR_HEIGHT=44;
var STATUS_BAR_HEIGHT=20;
var NAV_HEIGHT=NAV_BAR_HEIGHT + STATUS_BAR_HEIGHT;

var BASE_STYLES={
Title:{
position:'absolute', 
top:STATUS_BAR_HEIGHT, 
left:0, 
alignItems:'center', 
width:SCREEN_WIDTH, 
height:NAV_BAR_HEIGHT, 
backgroundColor:'transparent'}, 

LeftButton:{
position:'absolute', 
top:STATUS_BAR_HEIGHT, 
left:0, 
overflow:'hidden', 
opacity:1, 
width:SCREEN_WIDTH / 3, 
height:NAV_BAR_HEIGHT, 
backgroundColor:'transparent'}, 

RightButton:{
position:'absolute', 
top:STATUS_BAR_HEIGHT, 
left:2 * SCREEN_WIDTH / 3, 
overflow:'hidden', 
opacity:1, 
alignItems:'flex-end', 
width:SCREEN_WIDTH / 3, 
height:NAV_BAR_HEIGHT, 
backgroundColor:'transparent'}};










var Stages={
Left:{
Title:merge(BASE_STYLES.Title, {left:-SCREEN_WIDTH / 2, opacity:0}), 
LeftButton:merge(BASE_STYLES.LeftButton, {left:-SCREEN_WIDTH / 3, opacity:1}), 
RightButton:merge(BASE_STYLES.RightButton, {left:SCREEN_WIDTH / 3, opacity:0})}, 

Center:{
Title:merge(BASE_STYLES.Title, {left:0, opacity:1}), 
LeftButton:merge(BASE_STYLES.LeftButton, {left:0, opacity:1}), 
RightButton:merge(BASE_STYLES.RightButton, {left:2 * SCREEN_WIDTH / 3 - 0, opacity:1})}, 

Right:{
Title:merge(BASE_STYLES.Title, {left:SCREEN_WIDTH / 2, opacity:0}), 
LeftButton:merge(BASE_STYLES.LeftButton, {left:0, opacity:0}), 
RightButton:merge(BASE_STYLES.RightButton, {left:SCREEN_WIDTH, opacity:0})}};




var opacityRatio=100;

function buildSceneInterpolators(startStyles, endStyles){
return {
Title:buildStyleInterpolator({
opacity:{
type:'linear', 
from:startStyles.Title.opacity, 
to:endStyles.Title.opacity, 
min:0, 
max:1}, 

left:{
type:'linear', 
from:startStyles.Title.left, 
to:endStyles.Title.left, 
min:0, 
max:1, 
extrapolate:true}}), 


LeftButton:buildStyleInterpolator({
opacity:{
type:'linear', 
from:startStyles.LeftButton.opacity, 
to:endStyles.LeftButton.opacity, 
min:0, 
max:1, 
round:opacityRatio}, 

left:{
type:'linear', 
from:startStyles.LeftButton.left, 
to:endStyles.LeftButton.left, 
min:0, 
max:1}}), 


RightButton:buildStyleInterpolator({
opacity:{
type:'linear', 
from:startStyles.RightButton.opacity, 
to:endStyles.RightButton.opacity, 
min:0, 
max:1, 
round:opacityRatio}, 

left:{
type:'linear', 
from:startStyles.RightButton.left, 
to:endStyles.RightButton.left, 
min:0, 
max:1, 
extrapolate:true}})};}





var Interpolators={

RightToCenter:buildSceneInterpolators(Stages.Right, Stages.Center), 

CenterToLeft:buildSceneInterpolators(Stages.Center, Stages.Left), 

RightToLeft:buildSceneInterpolators(Stages.Right, Stages.Left)};



module.exports = {
General:{
NavBarHeight:NAV_BAR_HEIGHT, 
StatusBarHeight:STATUS_BAR_HEIGHT, 
TotalNavHeight:NAV_HEIGHT}, 

Interpolators:Interpolators, 
Stages:Stages};});
__d('buildStyleInterpolator',["keyOf"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










keyOf=require('keyOf');

var X_DIM=keyOf({x:null});
var Y_DIM=keyOf({y:null});
var Z_DIM=keyOf({z:null});
var W_DIM=keyOf({w:null});

var TRANSFORM_ROTATE_NAME=keyOf({transformRotateRadians:null});

var ShouldAllocateReusableOperationVars={
transformRotateRadians:true, 
transformScale:true, 
transformTranslate:true};


var InitialOperationField={
transformRotateRadians:[0, 0, 0, 1], 
transformTranslate:[0, 0, 0], 
transformScale:[1, 1, 1]};



























































var ARGUMENT_NAMES_RE=/([^\s,]+)/g;



















var inline=function(func, replaceWithArgs){
var fnStr=func.toString();
var parameterNames=fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).
match(ARGUMENT_NAMES_RE) || 
[];
var replaceRegexStr=parameterNames.map(function(paramName){
return '\\b' + paramName + '\\b';}).
join('|');
var replaceRegex=new RegExp(replaceRegexStr, 'g');
var fnBody=fnStr.substring(fnStr.indexOf('{') + 1, fnStr.lastIndexOf('}') - 1);
var newFnBody=fnBody.replace(replaceRegex, function(parameterName){
var indexInParameterNames=parameterNames.indexOf(parameterName);
var replacementName=replaceWithArgs[indexInParameterNames];
return replacementName;});

return newFnBody.split('\n');};






var MatrixOps={
unroll:function(matVar, m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15){
m0 = matVar[0];
m1 = matVar[1];
m2 = matVar[2];
m3 = matVar[3];
m4 = matVar[4];
m5 = matVar[5];
m6 = matVar[6];
m7 = matVar[7];
m8 = matVar[8];
m9 = matVar[9];
m10 = matVar[10];
m11 = matVar[11];
m12 = matVar[12];
m13 = matVar[13];
m14 = matVar[14];
m15 = matVar[15];}, 


matrixDiffers:function(retVar, matVar, m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15){
retVar = retVar || 
m0 !== matVar[0] || 
m1 !== matVar[1] || 
m2 !== matVar[2] || 
m3 !== matVar[3] || 
m4 !== matVar[4] || 
m5 !== matVar[5] || 
m6 !== matVar[6] || 
m7 !== matVar[7] || 
m8 !== matVar[8] || 
m9 !== matVar[9] || 
m10 !== matVar[10] || 
m11 !== matVar[11] || 
m12 !== matVar[12] || 
m13 !== matVar[13] || 
m14 !== matVar[14] || 
m15 !== matVar[15];}, 


transformScale:function(matVar, opVar){

var x=opVar[0];
var y=opVar[1];
var z=opVar[2];
matVar[0] = matVar[0] * x;
matVar[1] = matVar[1] * x;
matVar[2] = matVar[2] * x;
matVar[3] = matVar[3] * x;
matVar[4] = matVar[4] * y;
matVar[5] = matVar[5] * y;
matVar[6] = matVar[6] * y;
matVar[7] = matVar[7] * y;
matVar[8] = matVar[8] * z;
matVar[9] = matVar[9] * z;
matVar[10] = matVar[10] * z;
matVar[11] = matVar[11] * z;
matVar[12] = matVar[12];
matVar[13] = matVar[13];
matVar[14] = matVar[14];
matVar[15] = matVar[15];}, 






transformTranslate:function(matVar, opVar){

var x=opVar[0];
var y=opVar[1];
var z=opVar[2];
matVar[12] = matVar[0] * x + matVar[4] * y + matVar[8] * z + matVar[12];
matVar[13] = matVar[1] * x + matVar[5] * y + matVar[9] * z + matVar[13];
matVar[14] = matVar[2] * x + matVar[6] * y + matVar[10] * z + matVar[14];
matVar[15] = matVar[3] * x + matVar[7] * y + matVar[11] * z + matVar[15];}, 






transformRotateRadians:function(matVar, q){

var xQuat=q[0], yQuat=q[1], zQuat=q[2], wQuat=q[3];
var x2Quat=xQuat + xQuat;
var y2Quat=yQuat + yQuat;
var z2Quat=zQuat + zQuat;
var xxQuat=xQuat * x2Quat;
var xyQuat=xQuat * y2Quat;
var xzQuat=xQuat * z2Quat;
var yyQuat=yQuat * y2Quat;
var yzQuat=yQuat * z2Quat;
var zzQuat=zQuat * z2Quat;
var wxQuat=wQuat * x2Quat;
var wyQuat=wQuat * y2Quat;
var wzQuat=wQuat * z2Quat;

var quatMat0=1 - (yyQuat + zzQuat);
var quatMat1=xyQuat + wzQuat;
var quatMat2=xzQuat - wyQuat;
var quatMat4=xyQuat - wzQuat;
var quatMat5=1 - (xxQuat + zzQuat);
var quatMat6=yzQuat + wxQuat;
var quatMat8=xzQuat + wyQuat;
var quatMat9=yzQuat - wxQuat;
var quatMat10=1 - (xxQuat + yyQuat);



var a00=matVar[0];
var a01=matVar[1];
var a02=matVar[2];
var a03=matVar[3];
var a10=matVar[4];
var a11=matVar[5];
var a12=matVar[6];
var a13=matVar[7];
var a20=matVar[8];
var a21=matVar[9];
var a22=matVar[10];
var a23=matVar[11];

var b0=quatMat0, b1=quatMat1, b2=quatMat2;
matVar[0] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[1] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[2] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[3] = b0 * a03 + b1 * a13 + b2 * a23;
b0 = quatMat4;b1 = quatMat5;b2 = quatMat6;
matVar[4] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[5] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[6] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[7] = b0 * a03 + b1 * a13 + b2 * a23;
b0 = quatMat8;b1 = quatMat9;b2 = quatMat10;
matVar[8] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[9] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[10] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[11] = b0 * a03 + b1 * a13 + b2 * a23;}};





var MatrixOpsInitial={
transformScale:function(matVar, opVar){

matVar[0] = opVar[0];
matVar[1] = 0;
matVar[2] = 0;
matVar[3] = 0;
matVar[4] = 0;
matVar[5] = opVar[1];
matVar[6] = 0;
matVar[7] = 0;
matVar[8] = 0;
matVar[9] = 0;
matVar[10] = opVar[2];
matVar[11] = 0;
matVar[12] = 0;
matVar[13] = 0;
matVar[14] = 0;
matVar[15] = 1;}, 


transformTranslate:function(matVar, opVar){

matVar[0] = 1;
matVar[1] = 0;
matVar[2] = 0;
matVar[3] = 0;
matVar[4] = 0;
matVar[5] = 1;
matVar[6] = 0;
matVar[7] = 0;
matVar[8] = 0;
matVar[9] = 0;
matVar[10] = 1;
matVar[11] = 0;
matVar[12] = opVar[0];
matVar[13] = opVar[1];
matVar[14] = opVar[2];
matVar[15] = 1;}, 







transformRotateRadians:function(matVar, q){


var xQuat=q[0], yQuat=q[1], zQuat=q[2], wQuat=q[3];
var x2Quat=xQuat + xQuat;
var y2Quat=yQuat + yQuat;
var z2Quat=zQuat + zQuat;
var xxQuat=xQuat * x2Quat;
var xyQuat=xQuat * y2Quat;
var xzQuat=xQuat * z2Quat;
var yyQuat=yQuat * y2Quat;
var yzQuat=yQuat * z2Quat;
var zzQuat=zQuat * z2Quat;
var wxQuat=wQuat * x2Quat;
var wyQuat=wQuat * y2Quat;
var wzQuat=wQuat * z2Quat;

var quatMat0=1 - (yyQuat + zzQuat);
var quatMat1=xyQuat + wzQuat;
var quatMat2=xzQuat - wyQuat;
var quatMat4=xyQuat - wzQuat;
var quatMat5=1 - (xxQuat + zzQuat);
var quatMat6=yzQuat + wxQuat;
var quatMat8=xzQuat + wyQuat;
var quatMat9=yzQuat - wxQuat;
var quatMat10=1 - (xxQuat + yyQuat);



var b0=quatMat0, b1=quatMat1, b2=quatMat2;
matVar[0] = b0;
matVar[1] = b1;
matVar[2] = b2;
matVar[3] = 0;
b0 = quatMat4;b1 = quatMat5;b2 = quatMat6;
matVar[4] = b0;
matVar[5] = b1;
matVar[6] = b2;
matVar[7] = 0;
b0 = quatMat8;b1 = quatMat9;b2 = quatMat10;
matVar[8] = b0;
matVar[9] = b1;
matVar[10] = b2;
matVar[11] = 0;
matVar[12] = 0;
matVar[13] = 0;
matVar[14] = 0;
matVar[15] = 1;}};




var setNextValAndDetectChange=function(name, tmpVarName){
return (
'  if (!didChange) {\n' + 
'    var prevVal = result.' + name + ';\n' + 
'    result.' + name + ' = ' + tmpVarName + ';\n' + 
'    didChange = didChange  || (' + tmpVarName + ' !== prevVal);\n' + 
'  } else {\n' + 
'    result.' + name + ' = ' + tmpVarName + ';\n' + 
'  }\n');};



var computeNextValLinear=function(anim, from, to, tmpVarName){
var hasRoundRatio=('round' in anim);
var roundRatio=anim.round;
var fn='  ratio = (value - ' + anim.min + ') / ' + (anim.max - anim.min) + ';\n';
if(!anim.extrapolate){
fn += '  ratio = ratio > 1 ? 1 : (ratio < 0 ? 0 : ratio);\n';}


var roundOpen=hasRoundRatio?'Math.round(' + roundRatio + ' * ':'';
var roundClose=hasRoundRatio?') / ' + roundRatio:'';
fn += 
'  ' + tmpVarName + ' = ' + 
roundOpen + 
'(' + from + ' * (1 - ratio) + ' + to + ' * ratio)' + 
roundClose + ';\n';
return fn;};


var computeNextValLinearScalar=function(anim){
return computeNextValLinear(anim, anim.from, anim.to, 'nextScalarVal');};


var computeNextValConstant=function(anim){
var constantExpression=JSON.stringify(anim.value);
return '  nextScalarVal = ' + constantExpression + ';\n';};


var computeNextValStep=function(anim){
return (
'  nextScalarVal = value >= ' + (
anim.threshold + ' ? ' + anim.to + ' : ' + anim.from) + ';\n');};



var computeNextValIdentity=function(anim){
return '  nextScalarVal = value;\n';};


var operationVar=function(name){
return name + 'ReuseOp';};


var createReusableOperationVars=function(anims){
var ret='';
for(var name in anims) {
if(ShouldAllocateReusableOperationVars[name]){
ret += 'var ' + operationVar(name) + ' = [];\n';}}


return ret;};


var newlines=function(statements){
return '\n' + statements.join('\n') + '\n';};








var computeNextMatrixOperationField=function(anim, name, dimension, index){
var fieldAccess=operationVar(name) + '[' + index + ']';
if(anim.from[dimension] !== undefined && anim.to[dimension] !== undefined){
return '  ' + anim.from[dimension] !== anim.to[dimension]?
computeNextValLinear(anim, anim.from[dimension], anim.to[dimension], fieldAccess):
fieldAccess + ' = ' + anim.from[dimension] + ';';}else 
{
return '  ' + fieldAccess + ' = ' + InitialOperationField[name][index] + ';';}};



var unrolledVars=[];
for(var varIndex=0; varIndex < 16; varIndex++) {
unrolledVars.push('m' + varIndex);}

var setNextMatrixAndDetectChange=function(orderedMatrixOperations){
var fn=[
'  var transformMatrix = result.transformMatrix !== undefined ? ' + 
'result.transformMatrix : (result.transformMatrix = []);'];

fn.push.apply(
fn, 
inline(MatrixOps.unroll, ['transformMatrix'].concat(unrolledVars)));

for(var i=0; i < orderedMatrixOperations.length; i++) {
var opName=orderedMatrixOperations[i];
if(i === 0){
fn.push.apply(
fn, 
inline(MatrixOpsInitial[opName], ['transformMatrix', operationVar(opName)]));}else 

{
fn.push.apply(
fn, 
inline(MatrixOps[opName], ['transformMatrix', operationVar(opName)]));}}



fn.push.apply(
fn, 
inline(MatrixOps.matrixDiffers, ['didChange', 'transformMatrix'].concat(unrolledVars)));

return fn;};


var InterpolateMatrix={
transformTranslate:true, 
transformRotateRadians:true, 
transformScale:true};


var createFunctionString=function(anims){


var orderedMatrixOperations=[];



var fn='return (function() {\n';
fn += createReusableOperationVars(anims);
fn += 'return function(result, value) {\n';
fn += '  var didChange = false;\n';
fn += '  var nextScalarVal;\n';
fn += '  var ratio;\n';

for(var name in anims) {
var anim=anims[name];
if(anim.type === 'linear'){
if(InterpolateMatrix[name]){
orderedMatrixOperations.push(name);
var setOperations=[
computeNextMatrixOperationField(anim, name, X_DIM, 0), 
computeNextMatrixOperationField(anim, name, Y_DIM, 1), 
computeNextMatrixOperationField(anim, name, Z_DIM, 2)];

if(name === TRANSFORM_ROTATE_NAME){
setOperations.push(computeNextMatrixOperationField(anim, name, W_DIM, 3));}

fn += newlines(setOperations);}else 
{
fn += computeNextValLinearScalar(anim, 'nextScalarVal');
fn += setNextValAndDetectChange(name, 'nextScalarVal');}}else 

if(anim.type === 'constant'){
fn += computeNextValConstant(anim);
fn += setNextValAndDetectChange(name, 'nextScalarVal');}else 
if(anim.type === 'step'){
fn += computeNextValStep(anim);
fn += setNextValAndDetectChange(name, 'nextScalarVal');}else 
if(anim.type === 'identity'){
fn += computeNextValIdentity(anim);
fn += setNextValAndDetectChange(name, 'nextScalarVal');}}


if(orderedMatrixOperations.length){
fn += newlines(setNextMatrixAndDetectChange(orderedMatrixOperations));}

fn += '  return didChange;\n';
fn += '};\n';
fn += '})()';
return fn;};







var buildStyleInterpolator=function(anims){
return Function(createFunctionString(anims))();};



module.exports = buildStyleInterpolator;});
__d('StaticContainer.react',["React","onlyChild"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 

















React=require('React');

var onlyChild=require('onlyChild');
















var StaticContainer=React.createClass({displayName:'StaticContainer', 

shouldComponentUpdate:function(nextProps){
return nextProps.shouldUpdate;}, 


render:function(){
return onlyChild(this.props.children);}});




module.exports = StaticContainer;});
__d('NavigatorInterceptor',["React","getNavigatorContext"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};



























var React=require('React');

var getNavigatorContext=require('getNavigatorContext');

var NavigatorInterceptor=React.createClass({displayName:'NavigatorInterceptor', 

contextTypes:{
navigator:React.PropTypes.object}, 


componentWillMount:function(){
this.navigator = getNavigatorContext(this);}, 


componentDidMount:function(){
this.navigator.setHandler(this._navigatorHandleRequest);}, 


childContextTypes:{
navigator:React.PropTypes.object}, 


getChildContext:function(){var _this=this;
return {
navigator:_extends({}, 
this.navigator, {
setHandler:function(handler){
_this._childNavigationHandler = handler;}})};}, 





componentWillUnmount:function(){
this.navigator.setHandler(null);}, 


_navigatorHandleRequest:function(action, arg1, arg2){
if(this._interceptorHandle(action, arg1, arg2)){
return true;}

if(this._childNavigationHandler && this._childNavigationHandler(action, arg1, arg2)){
return true;}}, 



_interceptorHandle:function(action, arg1, arg2){
if(this.props.onRequest && this.props.onRequest(action, arg1, arg2)){
return true;}

switch(action){
case 'pop':
return this.props.onPopRequest && this.props.onPopRequest(arg1, arg2);
case 'popTo':
return this.props.onPopToRequest && this.props.onPopToRequest(arg1, arg2);
case 'push':
return this.props.onPushRequest && this.props.onPushRequest(arg1, arg2);
default:
return false;}}, 



render:function(){
return this.props.children;}});




module.exports = NavigatorInterceptor;});
__d('getNavigatorContext',["ReactInstanceMap"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




























var ReactInstanceMap=require('ReactInstanceMap');

function getNavigatorContext(el){

return ReactInstanceMap.get(el)._context.navigator;}


module.exports = getNavigatorContext;});
__d('NavigatorNavigationBar',["React","NavigatorNavigationBarStyles","StaticContainer.react","StyleSheet","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var React=require('React');
var NavigatorNavigationBarStyles=require('NavigatorNavigationBarStyles');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');

var COMPONENT_NAMES=['Title', 'LeftButton', 'RightButton'];

var navStatePresentedIndex=function(navState){
if(navState.presentedIndex !== undefined){
return navState.presentedIndex;}


return navState.observedTopOfStack;};


var NavigatorNavigationBar=React.createClass({displayName:'NavigatorNavigationBar', 

propTypes:{
navigator:React.PropTypes.object, 
routeMapper:React.PropTypes.shape({
Title:React.PropTypes.func.isRequired, 
LeftButton:React.PropTypes.func.isRequired, 
RightButton:React.PropTypes.func.isRequired}), 

navState:React.PropTypes.shape({
routeStack:React.PropTypes.arrayOf(React.PropTypes.object), 
idStack:React.PropTypes.arrayOf(React.PropTypes.number), 
presentedIndex:React.PropTypes.number}), 

style:View.propTypes.style}, 


statics:{
Styles:NavigatorNavigationBarStyles}, 


_getReusableProps:function(
componentName, 
index)
{
if(!this._reusableProps){
this._reusableProps = {};}

var propStack=this._reusableProps[componentName];
if(!propStack){
propStack = this._reusableProps[componentName] = [];}

var props=propStack[index];
if(!props){
props = propStack[index] = {style:{}};}

return props;}, 


_updateIndexProgress:function(
progress, 
index, 
fromIndex, 
toIndex)
{
var amount=toIndex > fromIndex?progress:1 - progress;
var oldDistToCenter=index - fromIndex;
var newDistToCenter=index - toIndex;
var interpolate;
if(oldDistToCenter > 0 && newDistToCenter === 0 || 
newDistToCenter > 0 && oldDistToCenter === 0){
interpolate = NavigatorNavigationBarStyles.Interpolators.RightToCenter;}else 
if(oldDistToCenter < 0 && newDistToCenter === 0 || 
newDistToCenter < 0 && oldDistToCenter === 0){
interpolate = NavigatorNavigationBarStyles.Interpolators.CenterToLeft;}else 
if(oldDistToCenter === newDistToCenter){
interpolate = NavigatorNavigationBarStyles.Interpolators.RightToCenter;}else 
{
interpolate = NavigatorNavigationBarStyles.Interpolators.RightToLeft;}


COMPONENT_NAMES.forEach(function(componentName){
var component=this.refs[componentName + index];
var props=this._getReusableProps(componentName, index);
if(component && interpolate[componentName](props.style, amount)){
component.setNativeProps(props);}}, 

this);}, 


updateProgress:function(
progress, 
fromIndex, 
toIndex)
{
var max=Math.max(fromIndex, toIndex);
var min=Math.min(fromIndex, toIndex);
for(var index=min; index <= max; index++) {
this._updateIndexProgress(progress, index, fromIndex, toIndex);}}, 



render:function(){
var navState=this.props.navState;
var components=COMPONENT_NAMES.map(function(componentName){
return navState.routeStack.map(
this._renderOrReturnComponent.bind(this, componentName));}, 

this);

return (
React.createElement(View, {style:[styles.navBarContainer, this.props.style]}, 
components));}, 




_renderOrReturnComponent:function(
componentName, 
route, 
index)
{
var navState=this.props.navState;
var uid=navState.idStack[index];
var containerRef=componentName + 'Container' + uid;
var alreadyRendered=this.refs[containerRef];
if(alreadyRendered){

return (
React.createElement(StaticContainer, {
ref:containerRef, 
key:containerRef, 
shouldUpdate:false}));}




var content=this.props.routeMapper[componentName](
navState.routeStack[index], 
this.props.navigator, 
index, 
this.props.navState);

if(!content){
return null;}


var initialStage=index === navStatePresentedIndex(this.props.navState)?
NavigatorNavigationBarStyles.Stages.Center:NavigatorNavigationBarStyles.Stages.Left;
return (
React.createElement(StaticContainer, {
ref:containerRef, 
key:containerRef, 
shouldUpdate:false}, 
React.createElement(View, {ref:componentName + index, style:initialStage[componentName]}, 
content)));}});








var styles=StyleSheet.create({
navBarContainer:{
position:'absolute', 
height:NavigatorNavigationBarStyles.General.TotalNavHeight, 
top:0, 
left:0, 
right:0, 
backgroundColor:'transparent'}});



module.exports = NavigatorNavigationBar;});
__d('NavigatorSceneConfigs',["Dimensions","PixelRatio","buildStyleInterpolator"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};



























var Dimensions=require('Dimensions');
var PixelRatio=require('PixelRatio');

var buildStyleInterpolator=require('buildStyleInterpolator');

var SCREEN_WIDTH=Dimensions.get('window').width;
var SCREEN_HEIGHT=Dimensions.get('window').height;

var FadeToTheLeft={


transformTranslate:{
from:{x:0, y:0, z:0}, 
to:{x:-Math.round(Dimensions.get('window').width * 0.3), y:0, z:0}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 












transformScale:{
from:{x:1, y:1, z:1}, 
to:{x:0.95, y:0.95, z:1}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true}, 

opacity:{
from:1, 
to:0.3, 
min:0, 
max:1, 
type:'linear', 
extrapolate:false, 
round:100}, 

translateX:{
from:0, 
to:-Math.round(Dimensions.get('window').width * 0.3), 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 

scaleX:{
from:1, 
to:0.95, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true}, 

scaleY:{
from:1, 
to:0.95, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true}};



var FadeToTheRight=_extends({}, 
FadeToTheLeft, {
transformTranslate:{
from:{x:0, y:0, z:0}, 
to:{x:Math.round(SCREEN_WIDTH * 0.3), y:0, z:0}}, 

translateX:{
from:0, 
to:Math.round(SCREEN_WIDTH * 0.3)}});



var FadeIn={
opacity:{
from:0, 
to:1, 
min:0.5, 
max:1, 
type:'linear', 
extrapolate:false, 
round:100}};



var FadeOut={
opacity:{
from:1, 
to:0, 
min:0, 
max:0.5, 
type:'linear', 
extrapolate:false, 
round:100}};



var ToTheLeft={
transformTranslate:{
from:{x:0, y:0, z:0}, 
to:{x:-Dimensions.get('window').width, y:0, z:0}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 

opacity:{
value:1, 
type:'constant'}, 


translateX:{
from:0, 
to:-Dimensions.get('window').width, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}};



var FromTheRight={
opacity:{
value:1, 
type:'constant'}, 


transformTranslate:{
from:{x:Dimensions.get('window').width, y:0, z:0}, 
to:{x:0, y:0, z:0}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 


translateX:{
from:Dimensions.get('window').width, 
to:0, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 


scaleX:{
value:1, 
type:'constant'}, 

scaleY:{
value:1, 
type:'constant'}};



var FromTheLeft=_extends({}, 
FromTheRight, {
transformTranslate:{
from:{x:-SCREEN_WIDTH, y:0, z:0}, 
to:{x:0, y:0, z:0}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 

translateX:{
from:-SCREEN_WIDTH, 
to:0, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}});



var ToTheBack={


transformTranslate:{
from:{x:0, y:0, z:0}, 
to:{x:0, y:0, z:0}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 

transformScale:{
from:{x:1, y:1, z:1}, 
to:{x:0.95, y:0.95, z:1}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true}, 

opacity:{
from:1, 
to:0.3, 
min:0, 
max:1, 
type:'linear', 
extrapolate:false, 
round:100}, 

scaleX:{
from:1, 
to:0.95, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true}, 

scaleY:{
from:1, 
to:0.95, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true}};



var FromTheFront={
opacity:{
value:1, 
type:'constant'}, 


transformTranslate:{
from:{x:0, y:Dimensions.get('window').height, z:0}, 
to:{x:0, y:0, z:0}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 

translateY:{
from:Dimensions.get('window').height, 
to:0, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 

scaleX:{
value:1, 
type:'constant'}, 

scaleY:{
value:1, 
type:'constant'}};



var ToTheBackAndroid={
opacity:{
value:1, 
type:'constant'}};



var FromTheFrontAndroid={
opacity:{
from:0, 
to:1, 
min:0, 
max:1, 
type:'linear', 
extrapolate:false, 
round:100}, 

transformTranslate:{
from:{x:0, y:50, z:0}, 
to:{x:0, y:0, z:0}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 

translateY:{
from:50, 
to:0, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}};



var BaseOverswipeConfig={
frictionConstant:1, 
frictionByDistance:1.5};


var BaseLeftToRightGesture={


isDetachable:false, 


gestureDetectMovement:2, 


notMoving:0.3, 


directionRatio:0.66, 


snapVelocity:2, 


edgeHitWidth:30, 


stillCompletionRatio:3 / 5, 

fullDistance:SCREEN_WIDTH, 

direction:'left-to-right'};



var BaseRightToLeftGesture=_extends({}, 
BaseLeftToRightGesture, {
direction:'right-to-left'});


var BaseConfig={

gestures:{
pop:BaseLeftToRightGesture}, 



springFriction:26, 
springTension:200, 


defaultTransitionVelocity:1.5, 


animationInterpolators:{
into:buildStyleInterpolator(FromTheRight), 
out:buildStyleInterpolator(FadeToTheLeft)}};



var NavigatorSceneConfigs={
PushFromRight:_extends({}, 
BaseConfig), 


FloatFromRight:_extends({}, 
BaseConfig), 


FloatFromLeft:_extends({}, 
BaseConfig, {
animationInterpolators:{
into:buildStyleInterpolator(FromTheLeft), 
out:buildStyleInterpolator(FadeToTheRight)}}), 


FloatFromBottom:_extends({}, 
BaseConfig, {
gestures:{
pop:_extends({}, 
BaseLeftToRightGesture, {
edgeHitWidth:150, 
direction:'top-to-bottom', 
fullDistance:SCREEN_HEIGHT})}, 


animationInterpolators:{
into:buildStyleInterpolator(FromTheFront), 
out:buildStyleInterpolator(ToTheBack)}}), 


FloatFromBottomAndroid:_extends({}, 
BaseConfig, {
gestures:null, 
animationInterpolators:{
into:buildStyleInterpolator(FromTheFrontAndroid), 
out:buildStyleInterpolator(ToTheBackAndroid)}}), 


FadeAndroid:_extends({}, 
BaseConfig, {
gestures:null, 
animationInterpolators:{
into:buildStyleInterpolator(FadeIn), 
out:buildStyleInterpolator(FadeOut)}}), 


HorizontalSwipeJump:_extends({}, 
BaseConfig, {
gestures:{
jumpBack:_extends({}, 
BaseLeftToRightGesture, {
overswipe:BaseOverswipeConfig, 
edgeHitWidth:null, 
isDetachable:true}), 

jumpForward:_extends({}, 
BaseRightToLeftGesture, {
overswipe:BaseOverswipeConfig, 
edgeHitWidth:null, 
isDetachable:true})}, 


animationInterpolators:{
into:buildStyleInterpolator(FromTheRight), 
out:buildStyleInterpolator(ToTheLeft)}})};




module.exports = NavigatorSceneConfigs;});
__d('NavigatorStaticContextContainer',["React","StaticContainer.react"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var React=require('React');
var StaticContainer=require('StaticContainer.react');

var PropTypes=React.PropTypes;

var NavigatorStaticContextContainer=React.createClass({displayName:'NavigatorStaticContextContainer', 

childContextTypes:{
navigator:PropTypes.object}, 


getChildContext:function(){
return {
navigator:this.props.navigatorContext};}, 



render:function(){
return (
React.createElement(StaticContainer, this.props));}});




module.exports = NavigatorStaticContextContainer;});
__d('PanResponder',["TouchHistoryMath"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var TouchHistoryMath=require("TouchHistoryMath");

var currentCentroidXOfTouchesChangedAfter=
TouchHistoryMath.currentCentroidXOfTouchesChangedAfter;
var currentCentroidYOfTouchesChangedAfter=
TouchHistoryMath.currentCentroidYOfTouchesChangedAfter;
var previousCentroidXOfTouchesChangedAfter=
TouchHistoryMath.previousCentroidXOfTouchesChangedAfter;
var previousCentroidYOfTouchesChangedAfter=
TouchHistoryMath.previousCentroidYOfTouchesChangedAfter;
var currentCentroidX=TouchHistoryMath.currentCentroidX;
var currentCentroidY=TouchHistoryMath.currentCentroidY;










































































var PanResponder={
































































_initializeGestureState:function(gestureState){
gestureState.moveX = 0;
gestureState.moveY = 0;
gestureState.x0 = 0;
gestureState.y0 = 0;
gestureState.dx = 0;
gestureState.dy = 0;
gestureState.vx = 0;
gestureState.vy = 0;
gestureState.numberActiveTouches = 0;

gestureState._accountsForMovesUpTo = 0;}, 


























_updateGestureStateOnMove:function(gestureState, touchHistory){
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
gestureState.moveX = currentCentroidXOfTouchesChangedAfter(
touchHistory, 
gestureState._accountsForMovesUpTo);

gestureState.moveY = currentCentroidYOfTouchesChangedAfter(
touchHistory, 
gestureState._accountsForMovesUpTo);

var movedAfter=gestureState._accountsForMovesUpTo;
var prevX=previousCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);
var x=currentCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);
var prevY=previousCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);
var y=currentCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);
var nextDX=gestureState.dx + (x - prevX);
var nextDY=gestureState.dy + (y - prevY);


var dt=
touchHistory.mostRecentTimeStamp - gestureState._accountsForMovesUpTo;
gestureState.vx = (nextDX - gestureState.dx) / dt;
gestureState.vy = (nextDY - gestureState.dy) / dt;

gestureState.dx = nextDX;
gestureState.dy = nextDY;
gestureState._accountsForMovesUpTo = touchHistory.mostRecentTimeStamp;}, 

































create:function(config){
var gestureState={

stateID:Math.random()};

PanResponder._initializeGestureState(gestureState);
var panHandlers={
onStartShouldSetResponder:function(e){
return config.onStartShouldSetPanResponder === undefined?false:
config.onStartShouldSetPanResponder(e, gestureState);}, 

onMoveShouldSetResponder:function(e){
return config.onMoveShouldSetPanResponder === undefined?false:
config.onMoveShouldSetPanResponder(e, gestureState);}, 

onStartShouldSetResponderCapture:function(e){


if(e.nativeEvent.touches.length === 1){
PanResponder._initializeGestureState(gestureState);}

gestureState.numberActiveTouches = e.touchHistory.numberActiveTouches;
return config.onStartShouldSetPanResponderCapture !== undefined?
config.onStartShouldSetPanResponderCapture(e, gestureState):false;}, 


onMoveShouldSetResponderCapture:function(e){
var touchHistory=e.touchHistory;



if(gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp){
return false;}

PanResponder._updateGestureStateOnMove(gestureState, touchHistory);
return config.onMoveShouldSetResponderCapture?
config.onMoveShouldSetPanResponderCapture(e, gestureState):false;}, 


onResponderGrant:function(e){
gestureState.x0 = currentCentroidX(e.touchHistory);
gestureState.y0 = currentCentroidY(e.touchHistory);
gestureState.dx = 0;
gestureState.dy = 0;
config.onPanResponderGrant && config.onPanResponderGrant(e, gestureState);}, 


onResponderReject:function(e){
config.onPanResponderReject && config.onPanResponderReject(e, gestureState);}, 


onResponderRelease:function(e){
config.onPanResponderRelease && config.onPanResponderRelease(e, gestureState);
PanResponder._initializeGestureState(gestureState);}, 


onResponderStart:function(e){
var touchHistory=e.touchHistory;
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
config.onPanResponderStart && config.onPanResponderStart(e, gestureState);}, 


onResponderMove:function(e){
var touchHistory=e.touchHistory;


if(gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp){
return;}



PanResponder._updateGestureStateOnMove(gestureState, touchHistory);
config.onPanResponderMove && config.onPanResponderMove(e, gestureState);}, 


onResponderEnd:function(e){
var touchHistory=e.touchHistory;
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
config.onPanResponderEnd && config.onPanResponderEnd(e, gestureState);}, 


onResponderTerminate:function(e){
config.onPanResponderTerminate && 
config.onPanResponderTerminate(e, gestureState);
PanResponder._initializeGestureState(gestureState);}, 


onResponderTerminationRequest:function(e){
return config.onPanResponderTerminationRequest === undefined?true:
config.onPanResponderTerminationRequest(e, gestureState);}};


return {panHandlers:panHandlers};}};



module.exports = PanResponder;});
__d('TouchHistoryMath',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var TouchHistoryMath={
















centroidDimension:function(touchHistory, touchesChangedAfter, isXAxis, ofCurrent){
var touchBank=touchHistory.touchBank;
var total=0;
var count=0;

var oneTouchData=touchHistory.numberActiveTouches === 1?
touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch]:null;

if(oneTouchData !== null){
if(oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter){
total += ofCurrent && isXAxis?oneTouchData.currentPageX:
ofCurrent && !isXAxis?oneTouchData.currentPageY:
!ofCurrent && isXAxis?oneTouchData.previousPageX:
oneTouchData.previousPageY;
count = 1;}}else 

{
for(var i=0; i < touchBank.length; i++) {
var touchTrack=touchBank[i];
if(touchTrack !== null && 
touchTrack !== undefined && 
touchTrack.touchActive && 
touchTrack.currentTimeStamp >= touchesChangedAfter){
var toAdd;
if(ofCurrent && isXAxis){
toAdd = touchTrack.currentPageX;}else 
if(ofCurrent && !isXAxis){
toAdd = touchTrack.currentPageY;}else 
if(!ofCurrent && isXAxis){
toAdd = touchTrack.previousPageX;}else 
{
toAdd = touchTrack.previousPageY;}

total += toAdd;
count++;}}}



return count > 0?total / count:TouchHistoryMath.noCentroid;}, 


currentCentroidXOfTouchesChangedAfter:function(touchHistory, touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory, 
touchesChangedAfter, 
true, 
true);}, 



currentCentroidYOfTouchesChangedAfter:function(touchHistory, touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory, 
touchesChangedAfter, 
false, 
true);}, 



previousCentroidXOfTouchesChangedAfter:function(touchHistory, touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory, 
touchesChangedAfter, 
true, 
false);}, 



previousCentroidYOfTouchesChangedAfter:function(touchHistory, touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory, 
touchesChangedAfter, 
false, 
false);}, 



currentCentroidX:function(touchHistory){
return TouchHistoryMath.centroidDimension(
touchHistory, 
0, 
true, 
true);}, 



currentCentroidY:function(touchHistory){
return TouchHistoryMath.centroidDimension(
touchHistory, 
0, 
false, 
true);}, 



noCentroid:-1};


module.exports = TouchHistoryMath;});
__d('clamp',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 























clamp(min, value, max){
if(value < min){
return min;}

if(value > max){
return max;}

return value;}


module.exports = clamp;});
__d('rebound/rebound',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (


























































































































function(){
var rebound={};
var util=rebound.util = {};
var concat=Array.prototype.concat;
var slice=Array.prototype.slice;


util.bind = function bind(func, context){
var args=slice.call(arguments, 2);
return function(){
func.apply(context, concat.call(args, slice.call(arguments)));};};




util.extend = function extend(target, source){
for(var key in source) {
if(source.hasOwnProperty(key)){
target[key] = source[key];}}};









var SpringSystem=rebound.SpringSystem = function SpringSystem(looper){
this._springRegistry = {};
this._activeSprings = [];
this.listeners = [];
this._idleSpringIndices = [];
this.looper = looper || new AnimationLooper();
this.looper.springSystem = this;};


util.extend(SpringSystem.prototype, {

_springRegistry:null, 

_isIdle:true, 

_lastTimeMillis:-1, 

_activeSprings:null, 

listeners:null, 

_idleSpringIndices:null, 






setLooper:function(looper){
this.looper = looper;
looper.springSystem = this;}, 






createSpring:function(tension, friction){
var springConfig;
if(tension === undefined || friction === undefined){
springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;}else 
{
springConfig = 
SpringConfig.fromOrigamiTensionAndFriction(tension, friction);}

return this.createSpringWithConfig(springConfig);}, 





createSpringWithBouncinessAndSpeed:function(bounciness, speed){
var springConfig;
if(bounciness === undefined || speed === undefined){
springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;}else 
{
springConfig = 
SpringConfig.fromBouncinessAndSpeed(bounciness, speed);}

return this.createSpringWithConfig(springConfig);}, 



createSpringWithConfig:function(springConfig){
var spring=new Spring(this);
this.registerSpring(spring);
spring.setSpringConfig(springConfig);
return spring;}, 






getIsIdle:function(){
return this._isIdle;}, 





getSpringById:function(id){
return this._springRegistry[id];}, 




getAllSprings:function(){
var vals=[];
for(var id in this._springRegistry) {
if(this._springRegistry.hasOwnProperty(id)){
vals.push(this._springRegistry[id]);}}


return vals;}, 






registerSpring:function(spring){
this._springRegistry[spring.getId()] = spring;}, 






deregisterSpring:function(spring){
removeFirst(this._activeSprings, spring);
delete this._springRegistry[spring.getId()];}, 


advance:function(time, deltaTime){
while(this._idleSpringIndices.length > 0) this._idleSpringIndices.pop();
for(var i=0, len=this._activeSprings.length; i < len; i++) {
var spring=this._activeSprings[i];
if(spring.systemShouldAdvance()){
spring.advance(time / 1000, deltaTime / 1000);}else 
{
this._idleSpringIndices.push(this._activeSprings.indexOf(spring));}}


while(this._idleSpringIndices.length > 0) {
var idx=this._idleSpringIndices.pop();
idx >= 0 && this._activeSprings.splice(idx, 1);}}, 
















loop:function(currentTimeMillis){
var listener;
if(this._lastTimeMillis === -1){
this._lastTimeMillis = currentTimeMillis - 1;}

var ellapsedMillis=currentTimeMillis - this._lastTimeMillis;
this._lastTimeMillis = currentTimeMillis;

var i=0, len=this.listeners.length;
for(i = 0; i < len; i++) {
listener = this.listeners[i];
listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);}


this.advance(currentTimeMillis, ellapsedMillis);
if(this._activeSprings.length === 0){
this._isIdle = true;
this._lastTimeMillis = -1;}


for(i = 0; i < len; i++) {
listener = this.listeners[i];
listener.onAfterIntegrate && listener.onAfterIntegrate(this);}


if(!this._isIdle){
this.looper.run();}}, 






activateSpring:function(springId){
var spring=this._springRegistry[springId];
if(this._activeSprings.indexOf(spring) == -1){
this._activeSprings.push(spring);}

if(this.getIsIdle()){
this._isIdle = false;
this.looper.run();}}, 






addListener:function(listener){
this.listeners.push(listener);}, 



removeListener:function(listener){
removeFirst(this.listeners, listener);}, 



removeAllListeners:function(){
this.listeners = [];}});


















var Spring=rebound.Spring = function Spring(springSystem){
this._id = 's' + Spring._ID++;
this._springSystem = springSystem;
this.listeners = [];
this._currentState = new PhysicsState();
this._previousState = new PhysicsState();
this._tempState = new PhysicsState();};


util.extend(Spring, {
_ID:0, 

MAX_DELTA_TIME_SEC:0.064, 

SOLVER_TIMESTEP_SEC:0.001});



util.extend(Spring.prototype, {

_id:0, 

_springConfig:null, 

_overshootClampingEnabled:false, 

_currentState:null, 

_previousState:null, 

_tempState:null, 

_startValue:0, 

_endValue:0, 

_wasAtRest:true, 

_restSpeedThreshold:0.001, 

_displacementFromRestThreshold:0.001, 

listeners:null, 

_timeAccumulator:0, 

_springSystem:null, 


destroy:function(){
this.listeners = [];
this.frames = [];
this._springSystem.deregisterSpring(this);}, 




getId:function(){
return this._id;}, 





setSpringConfig:function(springConfig){
this._springConfig = springConfig;
return this;}, 



getSpringConfig:function(){
return this._springConfig;}, 





























setCurrentValue:function(currentValue, skipSetAtRest){
this._startValue = currentValue;
this._currentState.position = currentValue;
if(!skipSetAtRest){
this.setAtRest();}

this.notifyPositionUpdated(false, false);
return this;}, 





getStartValue:function(){
return this._startValue;}, 



getCurrentValue:function(){
return this._currentState.position;}, 




getCurrentDisplacementDistance:function(){
return this.getDisplacementDistanceForState(this._currentState);}, 


getDisplacementDistanceForState:function(state){
return Math.abs(this._endValue - state.position);}, 








setEndValue:function(endValue){
if(this._endValue == endValue && this.isAtRest()){
return this;}

this._startValue = this.getCurrentValue();
this._endValue = endValue;
this._springSystem.activateSpring(this.getId());
for(var i=0, len=this.listeners.length; i < len; i++) {
var listener=this.listeners[i];
var onChange=listener.onSpringEndStateChange;
onChange && onChange(this);}

return this;}, 



getEndValue:function(){
return this._endValue;}, 









setVelocity:function(velocity){
if(velocity === this._currentState.velocity){
return this;}

this._currentState.velocity = velocity;
this._springSystem.activateSpring(this.getId());
return this;}, 



getVelocity:function(){
return this._currentState.velocity;}, 




setRestSpeedThreshold:function(restSpeedThreshold){
this._restSpeedThreshold = restSpeedThreshold;
return this;}, 



getRestSpeedThreshold:function(){
return this._restSpeedThreshold;}, 





setRestDisplacementThreshold:function(displacementFromRestThreshold){
this._displacementFromRestThreshold = displacementFromRestThreshold;}, 



getRestDisplacementThreshold:function(){
return this._displacementFromRestThreshold;}, 







setOvershootClampingEnabled:function(enabled){
this._overshootClampingEnabled = enabled;
return this;}, 



isOvershootClampingEnabled:function(){
return this._overshootClampingEnabled;}, 





isOvershooting:function(){
var start=this._startValue;
var end=this._endValue;
return this._springConfig.tension > 0 && (
start < end && this.getCurrentValue() > end || 
start > end && this.getCurrentValue() < end);}, 







advance:function(time, realDeltaTime){
var isAtRest=this.isAtRest();

if(isAtRest && this._wasAtRest){
return;}


var adjustedDeltaTime=realDeltaTime;
if(realDeltaTime > Spring.MAX_DELTA_TIME_SEC){
adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;}


this._timeAccumulator += adjustedDeltaTime;

var tension=this._springConfig.tension, 
friction=this._springConfig.friction, 

position=this._currentState.position, 
velocity=this._currentState.velocity, 
tempPosition=this._tempState.position, 
tempVelocity=this._tempState.velocity, 

aVelocity, aAcceleration, 
bVelocity, bAcceleration, 
cVelocity, cAcceleration, 
dVelocity, dAcceleration, 

dxdt, dvdt;

while(this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {

this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;

if(this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC){
this._previousState.position = position;
this._previousState.velocity = velocity;}


aVelocity = velocity;
aAcceleration = 
tension * (this._endValue - tempPosition) - friction * velocity;

tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
bVelocity = tempVelocity;
bAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
cVelocity = tempVelocity;
cAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
dVelocity = tempVelocity;
dAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

dxdt = 
1 / 6 * (aVelocity + 2 * (bVelocity + cVelocity) + dVelocity);
dvdt = 1 / 6 * (
aAcceleration + 2 * (bAcceleration + cAcceleration) + dAcceleration);


position += dxdt * Spring.SOLVER_TIMESTEP_SEC;
velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;}


this._tempState.position = tempPosition;
this._tempState.velocity = tempVelocity;

this._currentState.position = position;
this._currentState.velocity = velocity;

if(this._timeAccumulator > 0){
this.interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);}


if(this.isAtRest() || 
this._overshootClampingEnabled && this.isOvershooting()){

if(this._springConfig.tension > 0){
this._startValue = this._endValue;
this._currentState.position = this._endValue;}else 
{
this._endValue = this._currentState.position;
this._startValue = this._endValue;}

this.setVelocity(0);
isAtRest = true;}


var notifyActivate=false;
if(this._wasAtRest){
this._wasAtRest = false;
notifyActivate = true;}


var notifyAtRest=false;
if(isAtRest){
this._wasAtRest = true;
notifyAtRest = true;}


this.notifyPositionUpdated(notifyActivate, notifyAtRest);}, 


notifyPositionUpdated:function(notifyActivate, notifyAtRest){
for(var i=0, len=this.listeners.length; i < len; i++) {
var listener=this.listeners[i];
if(notifyActivate && listener.onSpringActivate){
listener.onSpringActivate(this);}


if(listener.onSpringUpdate){
listener.onSpringUpdate(this);}


if(notifyAtRest && listener.onSpringAtRest){
listener.onSpringAtRest(this);}}}, 









systemShouldAdvance:function(){
return !this.isAtRest() || !this.wasAtRest();}, 


wasAtRest:function(){
return this._wasAtRest;}, 








isAtRest:function(){
return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (
this.getDisplacementDistanceForState(this._currentState) <= 
this._displacementFromRestThreshold || 
this._springConfig.tension === 0);}, 






setAtRest:function(){
this._endValue = this._currentState.position;
this._tempState.position = this._currentState.position;
this._currentState.velocity = 0;
return this;}, 


interpolate:function(alpha){
this._currentState.position = this._currentState.position * 
alpha + this._previousState.position * (1 - alpha);
this._currentState.velocity = this._currentState.velocity * 
alpha + this._previousState.velocity * (1 - alpha);}, 


getListeners:function(){
return this.listeners;}, 


addListener:function(newListener){
this.listeners.push(newListener);
return this;}, 


removeListener:function(listenerToRemove){
removeFirst(this.listeners, listenerToRemove);
return this;}, 


removeAllListeners:function(){
this.listeners = [];
return this;}, 


currentValueIsApproximately:function(value){
return Math.abs(this.getCurrentValue() - value) <= 
this.getRestDisplacementThreshold();}});









var PhysicsState=function PhysicsState(){};

util.extend(PhysicsState.prototype, {
position:0, 
velocity:0});








var SpringConfig=rebound.SpringConfig = 
function SpringConfig(tension, friction){
this.tension = tension;
this.friction = friction;};







var AnimationLooper=rebound.AnimationLooper = function AnimationLooper(){
this.springSystem = null;
var _this=this;
var _run=function(){
_this.springSystem.loop(Date.now());};


this.run = function(){
util.onFrame(_run);};};









rebound.SimulationLooper = function SimulationLooper(timestep){
this.springSystem = null;
var time=0;
var running=false;
timestep = timestep || 16.667;

this.run = function(){
if(running){
return;}

running = true;
while(!this.springSystem.getIsIdle()) {
this.springSystem.loop(time += timestep);}

running = false;};};








rebound.SteppingSimulationLooper = function(timestep){
this.springSystem = null;
var time=0;



this.run = function(){};


this.step = function(timestep){
this.springSystem.loop(time += timestep);};};








var OrigamiValueConverter=rebound.OrigamiValueConverter = {
tensionFromOrigamiValue:function(oValue){
return (oValue - 30) * 3.62 + 194;}, 


origamiValueFromTension:function(tension){
return (tension - 194) / 3.62 + 30;}, 


frictionFromOrigamiValue:function(oValue){
return (oValue - 8) * 3 + 25;}, 


origamiFromFriction:function(friction){
return (friction - 25) / 3 + 8;}};










var BouncyConversion=rebound.BouncyConversion = function(bounciness, speed){
this.bounciness = bounciness;
this.speed = speed;
var b=this.normalize(bounciness / 1.7, 0, 20);
b = this.projectNormal(b, 0, 0.8);
var s=this.normalize(speed / 1.7, 0, 20);
this.bouncyTension = this.projectNormal(s, 0.5, 200);
this.bouncyFriction = this.quadraticOutInterpolation(
b, 
this.b3Nobounce(this.bouncyTension), 
0.01);};


util.extend(BouncyConversion.prototype, {

normalize:function(value, startValue, endValue){
return (value - startValue) / (endValue - startValue);}, 


projectNormal:function(n, start, end){
return start + n * (end - start);}, 


linearInterpolation:function(t, start, end){
return t * end + (1 - t) * start;}, 


quadraticOutInterpolation:function(t, start, end){
return this.linearInterpolation(2 * t - t * t, start, end);}, 


b3Friction1:function(x){
return 0.0007 * Math.pow(x, 3) - 
0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;}, 


b3Friction2:function(x){
return 0.000044 * Math.pow(x, 3) - 
0.006 * Math.pow(x, 2) + 0.36 * x + 2;}, 


b3Friction3:function(x){
return 4.5e-7 * Math.pow(x, 3) - 
0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;}, 


b3Nobounce:function(tension){
var friction=0;
if(tension <= 18){
friction = this.b3Friction1(tension);}else 
if(tension > 18 && tension <= 44){
friction = this.b3Friction2(tension);}else 
{
friction = this.b3Friction3(tension);}

return friction;}});



util.extend(SpringConfig, {




fromOrigamiTensionAndFriction:function(tension, friction){
return new SpringConfig(
OrigamiValueConverter.tensionFromOrigamiValue(tension), 
OrigamiValueConverter.frictionFromOrigamiValue(friction));}, 





fromBouncinessAndSpeed:function(bounciness, speed){
var bouncyConversion=new rebound.BouncyConversion(bounciness, speed);
return this.fromOrigamiTensionAndFriction(
bouncyConversion.bouncyTension, 
bouncyConversion.bouncyFriction);}, 




coastingConfigWithOrigamiFriction:function(friction){
return new SpringConfig(
0, 
OrigamiValueConverter.frictionFromOrigamiValue(friction));}});




SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG = 
SpringConfig.fromOrigamiTensionAndFriction(40, 7);

util.extend(SpringConfig.prototype, {friction:0, tension:0});




var colorCache={};
util.hexToRGB = function(color){
if(colorCache[color]){
return colorCache[color];}

color = color.replace('#', '');
if(color.length === 3){
color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];}

var parts=color.match(/.{2}/g);

var ret={
r:parseInt(parts[0], 16), 
g:parseInt(parts[1], 16), 
b:parseInt(parts[2], 16)};


colorCache[color] = ret;
return ret;};


util.rgbToHex = function(r, g, b){
r = r.toString(16);
g = g.toString(16);
b = b.toString(16);
r = r.length < 2?'0' + r:r;
g = g.length < 2?'0' + g:g;
b = b.length < 2?'0' + b:b;
return '#' + r + g + b;};


var MathUtil=rebound.MathUtil = {








mapValueInRange:function(value, fromLow, fromHigh, toLow, toHigh){
var fromRangeSize=fromHigh - fromLow;
var toRangeSize=toHigh - toLow;
var valueScale=(value - fromLow) / fromRangeSize;
return toLow + valueScale * toRangeSize;}, 





interpolateColor:
function(val, startColor, endColor, fromLow, fromHigh, asRGB){
fromLow = fromLow === undefined?0:fromLow;
fromHigh = fromHigh === undefined?1:fromHigh;
startColor = util.hexToRGB(startColor);
endColor = util.hexToRGB(endColor);
var r=Math.floor(
util.mapValueInRange(val, fromLow, fromHigh, startColor.r, endColor.r));

var g=Math.floor(
util.mapValueInRange(val, fromLow, fromHigh, startColor.g, endColor.g));

var b=Math.floor(
util.mapValueInRange(val, fromLow, fromHigh, startColor.b, endColor.b));

if(asRGB){
return 'rgb(' + r + ',' + g + ',' + b + ')';}else 
{
return util.rgbToHex(r, g, b);}}, 



degreesToRadians:function(deg){
return deg * Math.PI / 180;}, 


radiansToDegrees:function(rad){
return rad * 180 / Math.PI;}};




util.extend(util, MathUtil);







function removeFirst(array, item){
var idx=array.indexOf(item);
idx != -1 && array.splice(idx, 1);}


var _onFrame;
if(typeof window !== 'undefined'){
_onFrame = window.requestAnimationFrame || 
window.webkitRequestAnimationFrame || 
window.mozRequestAnimationFrame || 
window.msRequestAnimationFrame || 
window.oRequestAnimationFrame;}

if(!_onFrame && typeof process !== 'undefined' && process.title === 'node'){
_onFrame = setImmediate;}



util.onFrame = function onFrame(func){
return _onFrame(func);};




if(typeof exports != 'undefined'){
util.extend(exports, rebound);}else 
if(typeof window != 'undefined'){
window.rebound = rebound;}})();});
__d('NavigatorIOS',["EventEmitter","Image","React","ReactNativeViewAttributes","NativeModules","StyleSheet","StaticContainer.react","View","createReactNativeComponentClass","invariant","logError","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};












var EventEmitter=require('EventEmitter');
var Image=require('Image');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var RCTNavigatorManager=require('NativeModules').NavigatorManager;
var StyleSheet=require('StyleSheet');
var StaticContainer=require('StaticContainer.react');
var View=require('View');

var createReactNativeComponentClass=
require('createReactNativeComponentClass');
var invariant=require('invariant');
var logError=require('logError');
var merge=require('merge');

var TRANSITIONER_REF='transitionerRef';

var PropTypes=React.PropTypes;

var __uid=0;
function getuid(){
return __uid++;}


var RCTNavigator=createReactNativeComponentClass({
validAttributes:merge(ReactNativeViewAttributes.UIView, {
requestedTopOfStack:true}), 

uiViewClassName:'RCTNavigator'});


var RCTNavigatorItem=createReactNativeComponentClass({
validAttributes:{


title:true, 
barTintColor:true, 
leftButtonIcon:true, 
leftButtonTitle:true, 
onNavLeftButtonTap:true, 
rightButtonIcon:true, 
rightButtonTitle:true, 
onNavRightButtonTap:true, 
backButtonIcon:true, 
backButtonTitle:true, 
tintColor:true, 
navigationBarHidden:true, 
titleTextColor:true, 
style:true}, 

uiViewClassName:'RCTNavItem'});


var NavigatorTransitionerIOS=React.createClass({displayName:'NavigatorTransitionerIOS', 
requestSchedulingNavigation:function(cb){
RCTNavigatorManager.requestSchedulingJavaScriptNavigation(
React.findNodeHandle(this), 
logError, 
cb);}, 



render:function(){
return (
React.createElement(RCTNavigator, this.props));}});

























































































































var NavigatorIOS=React.createClass({displayName:'NavigatorIOS', 

propTypes:{






initialRoute:PropTypes.shape({



component:PropTypes.func.isRequired, 




title:PropTypes.string.isRequired, 





passProps:PropTypes.object, 






backButtonIcon:Image.propTypes.source, 






backButtonTitle:PropTypes.string, 




leftButtonIcon:Image.propTypes.source, 




leftButtonTitle:PropTypes.string, 




onLeftButtonPress:PropTypes.func, 




rightButtonIcon:Image.propTypes.source, 




rightButtonTitle:PropTypes.string, 




onRightButtonPress:PropTypes.func, 




wrapperStyle:View.propTypes.style}).

isRequired, 




navigationBarHidden:PropTypes.bool, 





itemWrapperStyle:View.propTypes.style, 




tintColor:PropTypes.string, 




barTintColor:PropTypes.string, 




titleTextColor:PropTypes.string}, 



navigator:undefined, 

componentWillMount:function(){


this.navigator = {
push:this.push, 
pop:this.pop, 
popN:this.popN, 
replace:this.replace, 
replacePrevious:this.replacePrevious, 
replacePreviousAndPop:this.replacePreviousAndPop, 
resetTo:this.resetTo, 
popToRoute:this.popToRoute, 
popToTop:this.popToTop};}, 



getInitialState:function(){
return {
idStack:[getuid()], 
routeStack:[this.props.initialRoute], 

requestedTopOfStack:0, 






observedTopOfStack:0, 
progress:1, 
fromIndex:0, 
toIndex:0, 


makingNavigatorRequest:false, 



updatingAllIndicesAtOrBeyond:0};}, 



_toFocusOnNavigationComplete:undefined, 

_handleFocusRequest:function(item){
if(this.state.makingNavigatorRequest){
this._toFocusOnNavigationComplete = item;}else 
{
this._getFocusEmitter().emit('focus', item);}}, 



_focusEmitter:undefined, 

_getFocusEmitter:function(){

var focusEmitter=this._focusEmitter;
if(!focusEmitter){
focusEmitter = new EventEmitter();
this._focusEmitter = focusEmitter;}

return focusEmitter;}, 


getChildContext:function()


{
return {
onFocusRequested:this._handleFocusRequest, 
focusEmitter:this._getFocusEmitter()};}, 



childContextTypes:{
onFocusRequested:React.PropTypes.func, 
focusEmitter:React.PropTypes.instanceOf(EventEmitter)}, 


_tryLockNavigator:function(cb){
this.refs[TRANSITIONER_REF].requestSchedulingNavigation(
function(acquiredLock){return acquiredLock && cb();});}, 



_handleNavigatorStackChanged:function(e){
var newObservedTopOfStack=e.nativeEvent.stackLength - 1;
invariant(
newObservedTopOfStack <= this.state.requestedTopOfStack, 
'No navigator item should be pushed without JS knowing about it %s %s', newObservedTopOfStack, this.state.requestedTopOfStack);

var wasWaitingForConfirmation=
this.state.requestedTopOfStack !== this.state.observedTopOfStack;
if(wasWaitingForConfirmation){
invariant(
newObservedTopOfStack === this.state.requestedTopOfStack, 
'If waiting for observedTopOfStack to reach requestedTopOfStack, ' + 
'the only valid observedTopOfStack should be requestedTopOfStack.');}











var nextState={
observedTopOfStack:newObservedTopOfStack, 
makingNavigatorRequest:false, 
updatingAllIndicesAtOrBeyond:null, 
progress:1, 
toIndex:newObservedTopOfStack, 
fromIndex:newObservedTopOfStack};

this.setState(nextState, this._eliminateUnneededChildren);}, 


_eliminateUnneededChildren:function(){



var updatingAllIndicesAtOrBeyond=
this.state.routeStack.length > this.state.observedTopOfStack + 1?
this.state.observedTopOfStack + 1:
null;
this.setState({
idStack:this.state.idStack.slice(0, this.state.observedTopOfStack + 1), 
routeStack:this.state.routeStack.slice(0, this.state.observedTopOfStack + 1), 

requestedTopOfStack:this.state.observedTopOfStack, 
makingNavigatorRequest:true, 
updatingAllIndicesAtOrBeyond:updatingAllIndicesAtOrBeyond});}, 



push:function(route){var _this=this;
invariant(!!route, 'Must supply route to push');

if(this.state.requestedTopOfStack === this.state.observedTopOfStack){
this._tryLockNavigator(function(){
var nextStack=_this.state.routeStack.concat([route]);
var nextIDStack=_this.state.idStack.concat([getuid()]);
_this.setState({


idStack:nextIDStack, 
routeStack:nextStack, 
requestedTopOfStack:nextStack.length - 1, 
makingNavigatorRequest:true, 
updatingAllIndicesAtOrBeyond:nextStack.length - 1});});}}, 





popN:function(n){var _this2=this;
if(n === 0){
return;}


if(this.state.requestedTopOfStack === this.state.observedTopOfStack){
if(this.state.requestedTopOfStack > 0){
this._tryLockNavigator(function(){
invariant(
_this2.state.requestedTopOfStack - n >= 0, 
'Cannot pop below 0');

_this2.setState({
requestedTopOfStack:_this2.state.requestedTopOfStack - n, 
makingNavigatorRequest:true, 


updatingAllIndicesAtOrBeyond:null});});}}}, 






pop:function(){
this.popN(1);}, 








replaceAtIndex:function(route, index){
invariant(!!route, 'Must supply route to replace');
if(index < 0){
index += this.state.routeStack.length;}


if(this.state.routeStack.length <= index){
return;}




var nextIDStack=this.state.idStack.slice();
var nextRouteStack=this.state.routeStack.slice();
nextIDStack[index] = getuid();
nextRouteStack[index] = route;

this.setState({
idStack:nextIDStack, 
routeStack:nextRouteStack, 
makingNavigatorRequest:false, 
updatingAllIndicesAtOrBeyond:index});}, 






replace:function(route){
this.replaceAtIndex(route, -1);}, 





replacePrevious:function(route){
this.replaceAtIndex(route, -2);}, 


popToTop:function(){
this.popToRoute(this.state.routeStack[0]);}, 


popToRoute:function(route){
var indexOfRoute=this.state.routeStack.indexOf(route);
invariant(
indexOfRoute !== -1, 
'Calling pop to route for a route that doesn\'t exist!');

var numToPop=this.state.routeStack.length - indexOfRoute - 1;
this.popN(numToPop);}, 


replacePreviousAndPop:function(route){var _this3=this;

if(this.state.requestedTopOfStack !== this.state.observedTopOfStack){
return;}

if(this.state.routeStack.length < 2){
return;}

this._tryLockNavigator(function(){
_this3.replacePrevious(route);
_this3.setState({
requestedTopOfStack:_this3.state.requestedTopOfStack - 1, 
makingNavigatorRequest:true});});}, 




resetTo:function(route){
invariant(!!route, 'Must supply route to push');

if(this.state.requestedTopOfStack !== this.state.observedTopOfStack){
return;}

this.replaceAtIndex(route, 0);
this.popToRoute(route);}, 


handleNavigationComplete:function(e){
if(this._toFocusOnNavigationComplete){
this._getFocusEmitter().emit('focus', this._toFocusOnNavigationComplete);
this._toFocusOnNavigationComplete = null;}

this._handleNavigatorStackChanged(e);}, 


_routeToStackItem:function(route, i){
var Component=route.component;
var shouldUpdateChild=this.state.updatingAllIndicesAtOrBeyond !== null && 
this.state.updatingAllIndicesAtOrBeyond >= i;

return (
React.createElement(StaticContainer, {key:'nav' + i, shouldUpdate:shouldUpdateChild}, 
React.createElement(RCTNavigatorItem, {
title:route.title, 
style:[
styles.stackItem, 
this.props.itemWrapperStyle, 
route.wrapperStyle], 

backButtonIcon:this._imageNameFromSource(route.backButtonIcon), 
backButtonTitle:route.backButtonTitle, 
leftButtonIcon:this._imageNameFromSource(route.leftButtonIcon), 
leftButtonTitle:route.leftButtonTitle, 
onNavLeftButtonTap:route.onLeftButtonPress, 
rightButtonIcon:this._imageNameFromSource(route.rightButtonIcon), 
rightButtonTitle:route.rightButtonTitle, 
onNavRightButtonTap:route.onRightButtonPress, 
navigationBarHidden:this.props.navigationBarHidden, 
tintColor:this.props.tintColor, 
barTintColor:this.props.barTintColor, 
titleTextColor:this.props.titleTextColor}, 
React.createElement(Component, _extends({
navigator:this.navigator, 
route:route}, 
route.passProps)))));}, 






_imageNameFromSource:function(source){
return source?source.uri:undefined;}, 


renderNavigationStackItems:function(){
var shouldRecurseToNavigator=
this.state.makingNavigatorRequest || 
this.state.updatingAllIndicesAtOrBeyond !== null;


var items=shouldRecurseToNavigator?
this.state.routeStack.map(this._routeToStackItem):null;
return (
React.createElement(StaticContainer, {shouldUpdate:shouldRecurseToNavigator}, 
React.createElement(NavigatorTransitionerIOS, {
ref:TRANSITIONER_REF, 
style:styles.transitioner, 
vertical:this.props.vertical, 
requestedTopOfStack:this.state.requestedTopOfStack, 
onNavigationComplete:this.handleNavigationComplete}, 
items)));}, 





render:function(){
return (
React.createElement(View, {style:this.props.style}, 
this.renderNavigationStackItems()));}});





var styles=StyleSheet.create({
stackItem:{
backgroundColor:'white', 
overflow:'hidden', 
position:'absolute', 
top:0, 
left:0, 
right:0, 
bottom:0}, 

transitioner:{
flex:1}});



module.exports = NavigatorIOS;});
__d('PickerIOS',["NativeMethodsMixin","React","ReactChildren","ReactNativeViewAttributes","NativeModules","StyleSheet","View","requireNativeComponent","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactChildren=require('ReactChildren');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var RCTPickerIOSConsts=require('NativeModules').UIManager.RCTPicker.Constants;
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');
var merge=require('merge');

var PICKER='picker';

var PickerIOS=React.createClass({displayName:'PickerIOS', 
mixins:[NativeMethodsMixin], 

propTypes:{
onValueChange:React.PropTypes.func, 
selectedValue:React.PropTypes.any}, 


getInitialState:function(){
return this._stateFromProps(this.props);}, 


componentWillReceiveProps:function(nextProps){
this.setState(this._stateFromProps(nextProps));}, 



_stateFromProps:function(props){
var selectedIndex=0;
var items=[];
ReactChildren.forEach(props.children, function(child, index){
if(child.props.value === props.selectedValue){
selectedIndex = index;}

items.push({value:child.props.value, label:child.props.label});});

return {selectedIndex:selectedIndex, items:items};}, 


render:function(){
return (
React.createElement(View, {style:this.props.style}, 
React.createElement(RCTPickerIOS, {
ref:PICKER, 
style:styles.pickerIOS, 
items:this.state.items, 
selectedIndex:this.state.selectedIndex, 
onChange:this._onChange})));}, 





_onChange:function(event){
if(this.props.onChange){
this.props.onChange(event);}

if(this.props.onValueChange){
this.props.onValueChange(event.nativeEvent.newValue);}








if(this.state.selectedIndex !== event.nativeEvent.newIndex){
this.refs[PICKER].setNativeProps({
selectedIndex:this.state.selectedIndex});}}});





PickerIOS.Item = React.createClass({displayName:'Item', 
propTypes:{
value:React.PropTypes.any, 
label:React.PropTypes.string}, 


render:function(){

return null;}});



var styles=StyleSheet.create({
pickerIOS:{



height:RCTPickerIOSConsts.ComponentHeight}});



var RCTPickerIOS=requireNativeComponent('RCTPicker', null);

module.exports = PickerIOS;});
__d('ProgressViewIOS',["Image","NativeMethodsMixin","NativeModules","ReactPropTypes","React","StyleSheet","requireNativeComponent","verifyPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};












var Image=require('Image');
var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');
var verifyPropTypes=require('verifyPropTypes');




var ProgressViewIOS=React.createClass({displayName:'ProgressViewIOS', 
mixins:[NativeMethodsMixin], 

propTypes:{



progressViewStyle:PropTypes.oneOf(['default', 'bar']), 




progress:PropTypes.number, 




progressTintColor:PropTypes.string, 




trackTintColor:PropTypes.string, 




progressImage:Image.propTypes.source, 




trackImage:Image.propTypes.source}, 


render:function(){
return (
React.createElement(RCTProgressView, _extends({}, 
this.props, {
style:[styles.progressView, this.props.style]})));}});





var styles=StyleSheet.create({
progressView:{
height:NativeModules.ProgressViewManager.ComponentHeight}});



var RCTProgressView=requireNativeComponent(
'RCTProgressView', 
ProgressViewIOS);


module.exports = ProgressViewIOS;});
__d('SegmentedControlIOS',["NativeMethodsMixin","NativeModules","ReactPropTypes","React","StyleSheet","requireNativeComponent","verifyPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};












var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');
var verifyPropTypes=require('verifyPropTypes');






var SEGMENTED_CONTROL_REFERENCE='segmentedcontrol';






var SegmentedControlIOS=React.createClass({displayName:'SegmentedControlIOS', 
mixins:[NativeMethodsMixin], 

propTypes:{



values:PropTypes.arrayOf(PropTypes.string), 




selectedIndex:PropTypes.number, 





onValueChange:PropTypes.func, 





onChange:PropTypes.func, 





enabled:PropTypes.bool, 




tintColor:PropTypes.string, 





momentary:PropTypes.bool}, 


getDefaultProps:function(){
return {
values:[], 
enabled:true};}, 



_onChange:function(event){
this.props.onChange && this.props.onChange(event);
this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);}, 


render:function(){
return (
React.createElement(RCTSegmentedControl, _extends({}, 
this.props, {
ref:SEGMENTED_CONTROL_REFERENCE, 
style:[styles.segmentedControl, this.props.style], 
onChange:this._onChange})));}});





var styles=StyleSheet.create({
segmentedControl:{
height:NativeModules.SegmentedControlManager.ComponentHeight}});



var RCTSegmentedControl=requireNativeComponent(
'RCTSegmentedControl', 
SegmentedControlIOS);


module.exports = SegmentedControlIOS;});
__d('SliderIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');



var SliderIOS=React.createClass({displayName:'SliderIOS', 
mixins:[NativeMethodsMixin], 

propTypes:{




style:View.propTypes.style, 









value:PropTypes.number, 




minimumValue:PropTypes.number, 




maximumValue:PropTypes.number, 





minimumTrackTintColor:PropTypes.string, 





maximumTrackTintColor:PropTypes.string, 




onValueChange:PropTypes.func, 





onSlidingComplete:PropTypes.func}, 


_onValueChange:function(event){
this.props.onChange && this.props.onChange(event);
if(event.nativeEvent.continuous){
this.props.onValueChange && 
this.props.onValueChange(event.nativeEvent.value);}else 
{
this.props.onSlidingComplete && event.nativeEvent.value !== undefined && 
this.props.onSlidingComplete(event.nativeEvent.value);}}, 



render:function(){
return (
React.createElement(RCTSlider, {
style:[styles.slider, this.props.style], 
value:this.props.value, 
maximumValue:this.props.maximumValue, 
minimumValue:this.props.minimumValue, 
minimumTrackTintColor:this.props.minimumTrackTintColor, 
maximumTrackTintColor:this.props.maximumTrackTintColor, 
onChange:this._onValueChange}));}});





var styles=StyleSheet.create({
slider:{
height:40}});



var RCTSlider=requireNativeComponent('RCTSlider', SliderIOS);

module.exports = SliderIOS;});
__d('SwitchIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};














var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');

var SWITCH='switch';















var SwitchIOS=React.createClass({displayName:'SwitchIOS', 
mixins:[NativeMethodsMixin], 

propTypes:{




value:PropTypes.bool, 





disabled:PropTypes.bool, 




onValueChange:PropTypes.func, 




onTintColor:PropTypes.string, 




thumbTintColor:PropTypes.string, 




tintColor:PropTypes.string}, 


getDefaultProps:function(){
return {
value:false, 
disabled:false};}, 



_onChange:function(event){
this.props.onChange && this.props.onChange(event);
this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);



this.refs[SWITCH].setNativeProps({value:this.props.value});}, 


render:function(){
return (
React.createElement(RCTSwitch, _extends({}, 
this.props, {
ref:SWITCH, 
onChange:this._onChange, 
style:[styles.rkSwitch, this.props.style]})));}});





var styles=StyleSheet.create({
rkSwitch:{
height:31, 
width:51}});



var RCTSwitch=requireNativeComponent('RCTSwitch', SwitchIOS);

module.exports = SwitchIOS;});
__d('TabBarIOS',["React","StyleSheet","TabBarItemIOS","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var TabBarItemIOS=require('TabBarItemIOS');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var TabBarIOS=React.createClass({displayName:'TabBarIOS', 
statics:{
Item:TabBarItemIOS}, 


propTypes:{
style:View.propTypes.style, 



tintColor:React.PropTypes.string, 



barTintColor:React.PropTypes.string}, 


render:function(){
return (
React.createElement(RCTTabBar, {
style:[styles.tabGroup, this.props.style], 
tintColor:this.props.tintColor, 
barTintColor:this.props.barTintColor}, 
this.props.children));}});





var styles=StyleSheet.create({
tabGroup:{
flex:1}});



var RCTTabBar=requireNativeComponent('RCTTabBar', TabBarIOS);

module.exports = TabBarIOS;});
__d('TabBarItemIOS',["Image","React","StaticContainer.react","StyleSheet","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var Image=require('Image');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var TabBarItemIOS=React.createClass({displayName:'TabBarItemIOS', 
propTypes:{



badge:React.PropTypes.oneOfType([
React.PropTypes.string, 
React.PropTypes.number]), 






systemIcon:React.PropTypes.oneOf([
'bookmarks', 
'contacts', 
'downloads', 
'favorites', 
'featured', 
'history', 
'more', 
'most-recent', 
'most-viewed', 
'recents', 
'search', 
'top-rated']), 




icon:Image.propTypes.source, 




selectedIcon:Image.propTypes.source, 




onPress:React.PropTypes.func, 




selected:React.PropTypes.bool, 



style:View.propTypes.style, 




title:React.PropTypes.string}, 


getInitialState:function(){
return {
hasBeenSelected:false};}, 



componentWillMount:function(){
if(this.props.selected){
this.setState({hasBeenSelected:true});}}, 



componentWillReceiveProps:function(nextProps){
if(this.state.hasBeenSelected || nextProps.selected){
this.setState({hasBeenSelected:true});}}, 



render:function(){
var tabContents=null;


if(this.state.hasBeenSelected){
tabContents = 
React.createElement(StaticContainer, {shouldUpdate:this.props.selected}, 
this.props.children);}else 

{
tabContents = React.createElement(View, null);}


var icon=this.props.systemIcon || 
this.props.icon && this.props.icon.uri;


var badge=typeof this.props.badge === 'number'?
'' + this.props.badge:
this.props.badge;

return (
React.createElement(RCTTabBarItem, {
icon:icon, 
selectedIcon:this.props.selectedIcon && this.props.selectedIcon.uri, 
onPress:this.props.onPress, 
selected:this.props.selected, 
badge:badge, 
title:this.props.title, 
style:[styles.tab, this.props.style]}, 
tabContents));}});





var styles=StyleSheet.create({
tab:{
position:'absolute', 
top:0, 
right:0, 
bottom:0, 
left:0}});



var RCTTabBarItem=requireNativeComponent('RCTTabBarItem', TabBarItemIOS);

module.exports = TabBarItemIOS;});
__d('Text',["NativeMethodsMixin","Platform","React","ReactInstanceMap","ReactNativeViewAttributes","StyleSheetPropType","TextStylePropTypes","Touchable","createReactNativeComponentClass","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var React=require('React');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheetPropType=require('StyleSheetPropType');
var TextStylePropTypes=require('TextStylePropTypes');
var Touchable=require('Touchable');

var createReactNativeComponentClass=
require('createReactNativeComponentClass');
var merge=require('merge');

var stylePropType=StyleSheetPropType(TextStylePropTypes);

var viewConfig={
validAttributes:merge(ReactNativeViewAttributes.UIView, {
isHighlighted:true, 
numberOfLines:true}), 

uiViewClassName:'RCTText'};



































var Text=React.createClass({displayName:'Text', 

mixins:[Touchable.Mixin, NativeMethodsMixin], 

propTypes:{





numberOfLines:React.PropTypes.number, 





onPress:React.PropTypes.func, 




suppressHighlighting:React.PropTypes.bool, 
style:stylePropType, 



testID:React.PropTypes.string, 





onLayout:React.PropTypes.func}, 


viewConfig:viewConfig, 

getInitialState:function(){
return merge(this.touchableGetInitialState(), {
isHighlighted:false});}, 



onStartShouldSetResponder:function(){
var shouldSetFromProps=this.props.onStartShouldSetResponder && 
this.props.onStartShouldSetResponder();
return shouldSetFromProps || !!this.props.onPress;}, 





handleResponderTerminationRequest:function(){


var allowTermination=this.touchableHandleResponderTerminationRequest();
if(allowTermination && this.props.onResponderTerminationRequest){
allowTermination = this.props.onResponderTerminationRequest();}

return allowTermination;}, 


handleResponderGrant:function(e, dispatchID){
this.touchableHandleResponderGrant(e, dispatchID);
this.props.onResponderGrant && 
this.props.onResponderGrant.apply(this, arguments);}, 


handleResponderMove:function(e){
this.touchableHandleResponderMove(e);
this.props.onResponderMove && 
this.props.onResponderMove.apply(this, arguments);}, 


handleResponderRelease:function(e){
this.touchableHandleResponderRelease(e);
this.props.onResponderRelease && 
this.props.onResponderRelease.apply(this, arguments);}, 


handleResponderTerminate:function(e){
this.touchableHandleResponderTerminate(e);
this.props.onResponderTerminate && 
this.props.onResponderTerminate.apply(this, arguments);}, 


touchableHandleActivePressIn:function(){
if(this.props.suppressHighlighting || !this.props.onPress){
return;}

this.setState({
isHighlighted:true});}, 



touchableHandleActivePressOut:function(){
if(this.props.suppressHighlighting || !this.props.onPress){
return;}

this.setState({
isHighlighted:false});}, 



touchableHandlePress:function(){
this.props.onPress && this.props.onPress();}, 


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;}, 


getChildContext:function(){
return {isInAParentText:true};}, 


childContextTypes:{
isInAParentText:React.PropTypes.bool}, 


render:function(){
var props={};
for(var key in this.props) {
props[key] = this.props[key];}


if(props.accessible !== false){
props.accessible = true;}

props.isHighlighted = this.state.isHighlighted;
props.onStartShouldSetResponder = this.onStartShouldSetResponder;
props.onResponderTerminationRequest = 
this.handleResponderTerminationRequest;
props.onResponderGrant = this.handleResponderGrant;
props.onResponderMove = this.handleResponderMove;
props.onResponderRelease = this.handleResponderRelease;
props.onResponderTerminate = this.handleResponderTerminate;


var context=ReactInstanceMap.get(this)._context;
if(context.isInAParentText){
return React.createElement(RCTVirtualText, props);}else 
{
return React.createElement(RCTText, props);}}});











var PRESS_RECT_OFFSET={top:20, left:20, right:20, bottom:30};

var RCTText=createReactNativeComponentClass(viewConfig);
var RCTVirtualText=RCTText;

if(Platform.OS === 'android'){
RCTVirtualText = createReactNativeComponentClass({
validAttributes:merge(ReactNativeViewAttributes.UIView, {
isHighlighted:true}), 

uiViewClassName:'RCTVirtualText'});}



module.exports = Text;});
__d('Touchable',["BoundingDimensions","Position","TouchEventUtils","keyMirror","queryLayoutByID"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';





var BoundingDimensions=require('BoundingDimensions');
var Position=require('Position');
var TouchEventUtils=require('TouchEventUtils');

var keyMirror=require('keyMirror');
var queryLayoutByID=require('queryLayoutByID');

























































































var States=keyMirror({
NOT_RESPONDER:null, 
RESPONDER_INACTIVE_PRESS_IN:null, 
RESPONDER_INACTIVE_PRESS_OUT:null, 
RESPONDER_ACTIVE_PRESS_IN:null, 
RESPONDER_ACTIVE_PRESS_OUT:null, 
RESPONDER_ACTIVE_LONG_PRESS_IN:null, 
RESPONDER_ACTIVE_LONG_PRESS_OUT:null, 
ERROR:null});





var IsActive={
RESPONDER_ACTIVE_PRESS_OUT:true, 
RESPONDER_ACTIVE_PRESS_IN:true};






var IsPressingIn={
RESPONDER_INACTIVE_PRESS_IN:true, 
RESPONDER_ACTIVE_PRESS_IN:true, 
RESPONDER_ACTIVE_LONG_PRESS_IN:true};


var IsLongPressingIn={
RESPONDER_ACTIVE_LONG_PRESS_IN:true};





var Signals=keyMirror({
DELAY:null, 
RESPONDER_GRANT:null, 
RESPONDER_RELEASE:null, 
RESPONDER_TERMINATED:null, 
ENTER_PRESS_RECT:null, 
LEAVE_PRESS_RECT:null, 
LONG_PRESS_DETECTED:null});





var Transitions={
NOT_RESPONDER:{
DELAY:States.ERROR, 
RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN, 
RESPONDER_RELEASE:States.ERROR, 
RESPONDER_TERMINATED:States.ERROR, 
ENTER_PRESS_RECT:States.ERROR, 
LEAVE_PRESS_RECT:States.ERROR, 
LONG_PRESS_DETECTED:States.ERROR}, 

RESPONDER_INACTIVE_PRESS_IN:{
DELAY:States.RESPONDER_ACTIVE_PRESS_IN, 
RESPONDER_GRANT:States.ERROR, 
RESPONDER_RELEASE:States.NOT_RESPONDER, 
RESPONDER_TERMINATED:States.NOT_RESPONDER, 
ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN, 
LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT, 
LONG_PRESS_DETECTED:States.ERROR}, 

RESPONDER_INACTIVE_PRESS_OUT:{
DELAY:States.RESPONDER_ACTIVE_PRESS_OUT, 
RESPONDER_GRANT:States.ERROR, 
RESPONDER_RELEASE:States.NOT_RESPONDER, 
RESPONDER_TERMINATED:States.NOT_RESPONDER, 
ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN, 
LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT, 
LONG_PRESS_DETECTED:States.ERROR}, 

RESPONDER_ACTIVE_PRESS_IN:{
DELAY:States.ERROR, 
RESPONDER_GRANT:States.ERROR, 
RESPONDER_RELEASE:States.NOT_RESPONDER, 
RESPONDER_TERMINATED:States.NOT_RESPONDER, 
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN, 
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT, 
LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN}, 

RESPONDER_ACTIVE_PRESS_OUT:{
DELAY:States.ERROR, 
RESPONDER_GRANT:States.ERROR, 
RESPONDER_RELEASE:States.NOT_RESPONDER, 
RESPONDER_TERMINATED:States.NOT_RESPONDER, 
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN, 
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT, 
LONG_PRESS_DETECTED:States.ERROR}, 

RESPONDER_ACTIVE_LONG_PRESS_IN:{
DELAY:States.ERROR, 
RESPONDER_GRANT:States.ERROR, 
RESPONDER_RELEASE:States.NOT_RESPONDER, 
RESPONDER_TERMINATED:States.NOT_RESPONDER, 
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN, 
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT, 
LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN}, 

RESPONDER_ACTIVE_LONG_PRESS_OUT:{
DELAY:States.ERROR, 
RESPONDER_GRANT:States.ERROR, 
RESPONDER_RELEASE:States.NOT_RESPONDER, 
RESPONDER_TERMINATED:States.NOT_RESPONDER, 
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN, 
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT, 
LONG_PRESS_DETECTED:States.ERROR}, 

error:{
DELAY:States.NOT_RESPONDER, 
RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN, 
RESPONDER_RELEASE:States.NOT_RESPONDER, 
RESPONDER_TERMINATED:States.NOT_RESPONDER, 
ENTER_PRESS_RECT:States.NOT_RESPONDER, 
LEAVE_PRESS_RECT:States.NOT_RESPONDER, 
LONG_PRESS_DETECTED:States.NOT_RESPONDER}};






var HIGHLIGHT_DELAY_MS=130;

var PRESS_EXPAND_PX=20;

var LONG_PRESS_THRESHOLD=500;

var LONG_PRESS_DELAY_MS=LONG_PRESS_THRESHOLD - HIGHLIGHT_DELAY_MS;

var LONG_PRESS_ALLOWED_MOVEMENT=10;



































































var TouchableMixin={







touchableGetInitialState:function(){
return {
touchable:{touchState:undefined, responderID:null}};}, 







touchableHandleResponderTerminationRequest:function(){
return !this.props.rejectResponderTermination;}, 





touchableHandleStartShouldSetResponder:function(){
return true;}, 





touchableLongPressCancelsPress:function(){
return true;}, 








touchableHandleResponderGrant:function(e, dispatchID){



e.persist();

this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);
this.pressOutDelayTimeout = null;

this.state.touchable.touchState = States.NOT_RESPONDER;
this.state.touchable.responderID = dispatchID;
this._receiveSignal(Signals.RESPONDER_GRANT, e);
var delayMS=
this.touchableGetHighlightDelayMS !== undefined?
Math.max(this.touchableGetHighlightDelayMS(), 0):HIGHLIGHT_DELAY_MS;
delayMS = isNaN(delayMS)?HIGHLIGHT_DELAY_MS:delayMS;
if(delayMS !== 0){
this.touchableDelayTimeout = setTimeout(
this._handleDelay.bind(this, e), 
delayMS);}else 

{
this._handleDelay(e);}


var longDelayMS=
this.touchableGetLongPressDelayMS !== undefined?
Math.max(this.touchableGetLongPressDelayMS(), 10):LONG_PRESS_DELAY_MS;
longDelayMS = isNaN(longDelayMS)?LONG_PRESS_DELAY_MS:longDelayMS;
this.longPressDelayTimeout = setTimeout(
this._handleLongDelay.bind(this, e), 
longDelayMS + delayMS);}, 






touchableHandleResponderRelease:function(e){
this._receiveSignal(Signals.RESPONDER_RELEASE, e);}, 





touchableHandleResponderTerminate:function(e){
this._receiveSignal(Signals.RESPONDER_TERMINATED, e);}, 





touchableHandleResponderMove:function(e){


if(this.state.touchable.touchState === States.RESPONDER_INACTIVE_PRESS_IN){
return;}



if(!this.state.touchable.positionOnActivate){
return;}


var positionOnActivate=this.state.touchable.positionOnActivate;
var dimensionsOnActivate=this.state.touchable.dimensionsOnActivate;
var pressRectOffset=this.touchableGetPressRectOffset?
this.touchableGetPressRectOffset():null;
var pressExpandLeft=
pressRectOffset.left != null?pressRectOffset.left:PRESS_EXPAND_PX;
var pressExpandTop=
pressRectOffset.top != null?pressRectOffset.top:PRESS_EXPAND_PX;
var pressExpandRight=
pressRectOffset.right != null?pressRectOffset.right:PRESS_EXPAND_PX;
var pressExpandBottom=
pressRectOffset.bottom != null?pressRectOffset.bottom:PRESS_EXPAND_PX;

var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
var pageX=touch && touch.pageX;
var pageY=touch && touch.pageY;

if(this.pressInLocation){
var movedDistance=this._getDistanceBetweenPoints(pageX, pageY, this.pressInLocation.pageX, this.pressInLocation.pageY);
if(movedDistance > LONG_PRESS_ALLOWED_MOVEMENT){
this._cancelLongPressDelayTimeout();}}



var isTouchWithinActive=
pageX > positionOnActivate.left - pressExpandLeft && 
pageY > positionOnActivate.top - pressExpandTop && 
pageX < 
positionOnActivate.left + 
dimensionsOnActivate.width + 
pressExpandRight && 
pageY < 
positionOnActivate.top + 
dimensionsOnActivate.height + 
pressExpandBottom;
if(isTouchWithinActive){
this._receiveSignal(Signals.ENTER_PRESS_RECT, e);}else 
{
this._cancelLongPressDelayTimeout();
this._receiveSignal(Signals.LEAVE_PRESS_RECT, e);}}, 

















































































_remeasureMetricsOnActivation:function(){
queryLayoutByID(
this.state.touchable.responderID, 
null, 
this._handleQueryLayout);}, 



_handleQueryLayout:function(l, t, w, h, globalX, globalY){
this.state.touchable.positionOnActivate && 
Position.release(this.state.touchable.positionOnActivate);
this.state.touchable.dimensionsOnActivate && 
BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);
this.state.touchable.positionOnActivate = Position.getPooled(globalX, globalY);
this.state.touchable.dimensionsOnActivate = BoundingDimensions.getPooled(w, h);}, 


_handleDelay:function(e){
this.touchableDelayTimeout = null;
this._receiveSignal(Signals.DELAY, e);}, 


_handleLongDelay:function(e){
this.longPressDelayTimeout = null;
this._receiveSignal(Signals.LONG_PRESS_DETECTED, e);}, 










_receiveSignal:function(signal, e){
var curState=this.state.touchable.touchState;
if(!(Transitions[curState] && Transitions[curState][signal])){
throw new Error(
'Unrecognized signal `' + signal + '` or state `' + curState + 
'` for Touchable responder `' + this.state.touchable.responderID + '`');}


var nextState=Transitions[curState][signal];
if(nextState === States.ERROR){
throw new Error(
'Touchable cannot transition from `' + curState + '` to `' + signal + 
'` for responder `' + this.state.touchable.responderID + '`');}


if(curState !== nextState){
this._performSideEffectsForTransition(curState, nextState, signal, e);
this.state.touchable.touchState = nextState;}}, 



_cancelLongPressDelayTimeout:function(){
this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
this.longPressDelayTimeout = null;}, 


_isHighlight:function(state){
return state === States.RESPONDER_ACTIVE_PRESS_IN || 
state === States.RESPONDER_ACTIVE_LONG_PRESS_IN;}, 


_savePressInLocation:function(e){
var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
var pageX=touch && touch.pageX;
var pageY=touch && touch.pageY;
this.pressInLocation = {pageX:pageX, pageY:pageY};}, 


_getDistanceBetweenPoints:function(aX, aY, bX, bY){
var deltaX=aX - bX;
var deltaY=aY - bY;
return Math.sqrt(deltaX * deltaX + deltaY * deltaY);}, 













_performSideEffectsForTransition:function(curState, nextState, signal, e){
var curIsHighlight=this._isHighlight(curState);
var newIsHighlight=this._isHighlight(nextState);

var isFinalSignal=
signal === Signals.RESPONDER_TERMINATED || 
signal === Signals.RESPONDER_RELEASE;

if(isFinalSignal){
this._cancelLongPressDelayTimeout();}


if(!IsActive[curState] && IsActive[nextState]){
this._remeasureMetricsOnActivation();}


if(IsPressingIn[curState] && signal === Signals.LONG_PRESS_DETECTED){
this.touchableHandleLongPress && this.touchableHandleLongPress();}


if(newIsHighlight && !curIsHighlight){
this._savePressInLocation(e);
this.touchableHandleActivePressIn && this.touchableHandleActivePressIn();}else 
if(!newIsHighlight && curIsHighlight && this.touchableHandleActivePressOut){
if(this.touchableGetPressOutDelayMS && this.touchableGetPressOutDelayMS()){
this.pressOutDelayTimeout = this.setTimeout(function(){
this.touchableHandleActivePressOut();}, 
this.touchableGetPressOutDelayMS());}else 
{
this.touchableHandleActivePressOut();}}



if(IsPressingIn[curState] && signal === Signals.RESPONDER_RELEASE){
var hasLongPressHandler=!!this.props.onLongPress;
var pressIsLongButStillCallOnPress=
IsLongPressingIn[curState] && (
!hasLongPressHandler || 
!this.touchableLongPressCancelsPress());


var shouldInvokePress=!IsLongPressingIn[curState] || pressIsLongButStillCallOnPress;
if(shouldInvokePress && this.touchableHandlePress){
this.touchableHandlePress(e);}}



this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
this.touchableDelayTimeout = null;}};




var Touchable={
Mixin:TouchableMixin};


module.exports = Touchable;});
__d('BoundingDimensions',["PooledClass"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var PooledClass=require("PooledClass");

var twoArgumentPooler=PooledClass.twoArgumentPooler;








function BoundingDimensions(width, height){
this.width = width;
this.height = height;}






BoundingDimensions.getPooledFromElement = function(element){
return BoundingDimensions.getPooled(
element.offsetWidth, 
element.offsetHeight);};



PooledClass.addPoolingTo(BoundingDimensions, twoArgumentPooler);

module.exports = BoundingDimensions;});
__d('Position',["PooledClass"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var PooledClass=require("PooledClass");

var twoArgumentPooler=PooledClass.twoArgumentPooler;









function Position(left, top){
this.left = left;
this.top = top;}


PooledClass.addPoolingTo(Position, twoArgumentPooler);

module.exports = Position;});
__d('TouchEventUtils',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










TouchEventUtils={










extractSingleTouch:function(nativeEvent){
var touches=nativeEvent.touches;
var changedTouches=nativeEvent.changedTouches;
var hasTouches=touches && touches.length > 0;
var hasChangedTouches=changedTouches && changedTouches.length > 0;

return !hasTouches && hasChangedTouches?changedTouches[0]:
hasTouches?touches[0]:
nativeEvent;}};



module.exports = TouchEventUtils;});
__d('queryLayoutByID',["ReactNativeTagHandles","NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var RCTUIManager=require('NativeModules').UIManager;
































var queryLayoutByID=function(
rootNodeID, 
onError, 
onSuccess)
{

RCTUIManager.measure(
ReactNativeTagHandles.rootNodeIDToTag[rootNodeID], 
onSuccess);};



module.exports = queryLayoutByID;});
__d('TextInput',["DocumentSelectionState","EventEmitter","NativeMethodsMixin","NativeModules","Platform","ReactPropTypes","React","ReactChildren","ReactNativeViewAttributes","StyleSheet","Text","TextInputState","react-timer-mixin/TimerMixin","TouchableWithoutFeedback","createReactNativeComponentClass","emptyFunction","invariant","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};












var DocumentSelectionState=require('DocumentSelectionState');
var EventEmitter=require('EventEmitter');
var NativeMethodsMixin=require('NativeMethodsMixin');
var RCTUIManager=require('NativeModules').UIManager;
var Platform=require('Platform');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactChildren=require('ReactChildren');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TextInputState=require('TextInputState');
var TimerMixin=require('react-timer-mixin/TimerMixin');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var emptyFunction=require('emptyFunction');
var invariant=require('invariant');
var merge=require('merge');

var RCTTextViewAttributes=merge(ReactNativeViewAttributes.UIView, {
autoCorrect:true, 
autoCapitalize:true, 
clearTextOnFocus:true, 
color:true, 
editable:true, 
fontFamily:true, 
fontSize:true, 
fontStyle:true, 
fontWeight:true, 
keyboardType:true, 
returnKeyType:true, 
enablesReturnKeyAutomatically:true, 
secureTextEntry:true, 
selectTextOnFocus:true, 
mostRecentEventCounter:true, 
placeholder:true, 
placeholderTextColor:true, 
text:true});


var RCTTextFieldAttributes=merge(RCTTextViewAttributes, {
caretHidden:true, 
enabled:true, 
clearButtonMode:true, 
clearTextOnFocus:true, 
selectTextOnFocus:true});


var onlyMultiline={
onSelectionChange:true, 
onTextInput:true, 
children:true};


var notMultiline={
onSubmitEditing:true};


var AndroidTextInputAttributes={
autoCapitalize:true, 
autoCorrect:true, 
autoFocus:true, 
keyboardType:true, 
multiline:true, 
password:true, 
placeholder:true, 
text:true, 
testID:true};


var viewConfigIOS={
uiViewClassName:'RCTTextField', 
validAttributes:RCTTextFieldAttributes};


var viewConfigAndroid={
uiViewClassName:'AndroidTextInput', 
validAttributes:AndroidTextInputAttributes};









































var TextInput=React.createClass({displayName:'TextInput', 
propTypes:{








autoCapitalize:PropTypes.oneOf([
'none', 
'sentences', 
'words', 
'characters']), 




autoCorrect:PropTypes.bool, 



autoFocus:PropTypes.bool, 



editable:PropTypes.bool, 



keyboardType:PropTypes.oneOf([

'default', 
'numeric', 
'email-address', 

'ascii-capable', 
'numbers-and-punctuation', 
'url', 
'number-pad', 
'phone-pad', 
'name-phone-pad', 
'decimal-pad', 
'twitter', 
'web-search']), 




returnKeyType:PropTypes.oneOf([
'default', 
'go', 
'google', 
'join', 
'next', 
'route', 
'search', 
'send', 
'yahoo', 
'done', 
'emergency-call']), 





enablesReturnKeyAutomatically:PropTypes.bool, 



multiline:PropTypes.bool, 



onBlur:PropTypes.func, 



onFocus:PropTypes.func, 



onChange:PropTypes.func, 
onChangeText:PropTypes.func, 



onEndEditing:PropTypes.func, 



onSubmitEditing:PropTypes.func, 



onLayout:PropTypes.func, 




password:PropTypes.bool, 



placeholder:PropTypes.string, 



placeholderTextColor:PropTypes.string, 




selectionState:PropTypes.instanceOf(DocumentSelectionState), 



value:PropTypes.string, 






bufferDelay:PropTypes.number, 





controlled:PropTypes.bool, 



clearButtonMode:PropTypes.oneOf([
'never', 
'while-editing', 
'unless-editing', 
'always']), 




clearTextOnFocus:PropTypes.bool, 



selectTextOnFocus:PropTypes.bool, 



style:Text.propTypes.style, 



testID:PropTypes.string}, 






mixins:[NativeMethodsMixin, TimerMixin], 

viewConfig:Platform.OS === 'ios'?viewConfigIOS:
Platform.OS === 'android'?viewConfigAndroid:{}, 

isFocused:function(){
return TextInputState.currentlyFocusedField() === 
React.findNodeHandle(this.refs.input);}, 


getDefaultProps:function(){
return {
bufferDelay:100};}, 



getInitialState:function(){
return {
mostRecentEventCounter:0, 
bufferedValue:this.props.value};}, 



contextTypes:{
onFocusRequested:React.PropTypes.func, 
focusEmitter:React.PropTypes.instanceOf(EventEmitter)}, 


_focusSubscription:undefined, 

componentDidMount:function(){var _this=this;
if(!this.context.focusEmitter){
if(this.props.autoFocus){
this.requestAnimationFrame(this.focus);}

return;}

this._focusSubscription = this.context.focusEmitter.addListener(
'focus', 
function(el){
if(_this === el){
_this.requestAnimationFrame(_this.focus);}else 
if(_this.isFocused()){
_this.blur();}});



if(this.props.autoFocus){
this.context.onFocusRequested(this);}}, 



componentWillUnmount:function(){
this._focusSubscription && this._focusSubscription.remove();
if(this.isFocused()){
this.blur();}}, 



_bufferTimeout:undefined, 

componentWillReceiveProps:function(newProps){var _this2=this;
if(newProps.value !== this.props.value){
if(!this.isFocused()){


this.setState({bufferedValue:newProps.value});}else 
{




























this.clearTimeout(this._bufferTimeout);
this._bufferTimeout = this.setTimeout(
function(){return _this2.setState({bufferedValue:newProps.value});}, 
this.props.bufferDelay);}}}, 





getChildContext:function(){
return {isInAParentText:true};}, 


childContextTypes:{
isInAParentText:React.PropTypes.bool}, 


render:function(){
if(Platform.OS === 'ios'){
return this._renderIOS();}else 
if(Platform.OS === 'android'){
return this._renderAndroid();}}, 



_renderIOS:function(){
var textContainer;

var props=this.props;
props.style = [styles.input, this.props.style];

if(!props.multiline){
for(var propKey in onlyMultiline) {
if(props[propKey]){
throw new Error(
'TextInput prop `' + propKey + '` is only supported with multiline.');}}



textContainer = 
React.createElement(RCTTextField, _extends({
ref:'input'}, 
props, {
onFocus:this._onFocus, 
onBlur:this._onBlur, 
onChange:this._onChange, 
onSelectionChangeShouldSetResponder:function(){return true;}, 
text:this.state.bufferedValue}));}else 

{
for(var propKey in notMultiline) {
if(props[propKey]){
throw new Error(
'TextInput prop `' + propKey + '` cannot be used with multiline.');}}




var children=props.children;
var childCount=0;
ReactChildren.forEach(children, function(){return ++childCount;});
invariant(
!(props.value && childCount), 
'Cannot specify both value and children.');

if(childCount > 1){
children = React.createElement(Text, null, children);}

if(props.inputView){
children = [children, props.inputView];}

textContainer = 
React.createElement(RCTTextView, _extends({
ref:'input'}, 
props, {
children:children, 
mostRecentEventCounter:this.state.mostRecentEventCounter, 
onFocus:this._onFocus, 
onBlur:this._onBlur, 
onChange:this._onChange, 
onSelectionChange:this._onSelectionChange, 
onTextInput:this._onTextInput, 
onSelectionChangeShouldSetResponder:emptyFunction.thatReturnsTrue, 
text:this.state.bufferedValue}));}



return (
React.createElement(TouchableWithoutFeedback, {
onPress:this._onPress, 
rejectResponderTermination:true, 
testID:props.testID}, 
textContainer));}, 




_renderAndroid:function(){
var autoCapitalize=RCTUIManager.UIText.AutocapitalizationType[this.props.autoCapitalize];
var children=this.props.children;
var childCount=0;
ReactChildren.forEach(children, function(){return ++childCount;});
invariant(
!(this.props.value && childCount), 
'Cannot specify both value and children.');

if(childCount > 1){
children = React.createElement(Text, null, children);}

var textContainer=
React.createElement(AndroidTextInput, {
ref:'input', 
style:[this.props.style], 
autoCapitalize:autoCapitalize, 
autoCorrect:this.props.autoCorrect, 
keyboardType:this.props.keyboardType, 
multiline:this.props.multiline, 
onFocus:this._onFocus, 
onBlur:this._onBlur, 
onChange:this._onChange, 
onEndEditing:this.props.onEndEditing, 
onSubmitEditing:this.props.onSubmitEditing, 
onLayout:this.props.onLayout, 
password:this.props.password || this.props.secureTextEntry, 
placeholder:this.props.placeholder, 
text:this.state.bufferedValue, 
children:children});


return (
React.createElement(TouchableWithoutFeedback, {
onPress:this._onPress, 
testID:this.props.testID}, 
textContainer));}, 




_onFocus:function(event){
if(this.props.onFocus){
this.props.onFocus(event);}}, 



_onPress:function(event){
this.focus();}, 


_onChange:function(event){
if(this.props.controlled && event.nativeEvent.text !== this.props.value){
this.refs.input.setNativeProps({text:this.props.value});}

this.props.onChange && this.props.onChange(event);
this.props.onChangeText && this.props.onChangeText(event.nativeEvent.text);}, 


_onBlur:function(event){
this.blur();
if(this.props.onBlur){
this.props.onBlur(event);}}, 



_onSelectionChange:function(event){
if(this.props.selectionState){
var selection=event.nativeEvent.selection;
this.props.selectionState.update(selection.start, selection.end);}

this.props.onSelectionChange && this.props.onSelectionChange(event);}, 


_onTextInput:function(event){
this.props.onTextInput && this.props.onTextInput(event);
var counter=event.nativeEvent.eventCounter;
if(counter > this.state.mostRecentEventCounter){
this.setState({mostRecentEventCounter:counter});}}});




var styles=StyleSheet.create({
input:{
alignSelf:'stretch'}});



var RCTTextView=createReactNativeComponentClass({
validAttributes:RCTTextViewAttributes, 
uiViewClassName:'RCTTextView'});


var RCTTextField=createReactNativeComponentClass({
validAttributes:RCTTextFieldAttributes, 
uiViewClassName:'RCTTextField'});


var AndroidTextInput=createReactNativeComponentClass({
validAttributes:AndroidTextInputAttributes, 
uiViewClassName:'AndroidTextInput'});


module.exports = TextInput;});
__d('DocumentSelectionState',["mixInEventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

















var mixInEventEmitter=require('mixInEventEmitter');var 










DocumentSelectionState=(function(){




function DocumentSelectionState(anchor, focus){_classCallCheck(this, DocumentSelectionState);
this._anchorOffset = anchor;
this._focusOffset = focus;
this._hasFocus = false;}_createClass(DocumentSelectionState, [{key:'update', value:









function update(anchor, focus){
if(this._anchorOffset !== anchor || this._focusOffset !== focus){
this._anchorOffset = anchor;
this._focusOffset = focus;
this.emit('update');}}}, {key:'constrainLength', value:









function constrainLength(maxLength){
this.update(
Math.min(this._anchorOffset, maxLength), 
Math.min(this._focusOffset, maxLength));}}, {key:'focus', value:



function focus(){
if(!this._hasFocus){
this._hasFocus = true;
this.emit('focus');}}}, {key:'blur', value:



function blur(){
if(this._hasFocus){
this._hasFocus = false;
this.emit('blur');}}}, {key:'hasFocus', value:






function hasFocus(){
return this._hasFocus;}}, {key:'isCollapsed', value:





function isCollapsed(){
return this._anchorOffset === this._focusOffset;}}, {key:'isBackward', value:





function isBackward(){
return this._anchorOffset > this._focusOffset;}}, {key:'getAnchorOffset', value:





function getAnchorOffset(){
return this._hasFocus?this._anchorOffset:null;}}, {key:'getFocusOffset', value:





function getFocusOffset(){
return this._hasFocus?this._focusOffset:null;}}, {key:'getStartOffset', value:





function getStartOffset(){
return (
this._hasFocus?Math.min(this._anchorOffset, this._focusOffset):null);}}, {key:'getEndOffset', value:






function getEndOffset(){
return (
this._hasFocus?Math.max(this._anchorOffset, this._focusOffset):null);}}, {key:'overlaps', value:








function overlaps(start, end){
return (
this.hasFocus() && 
this.getStartOffset() <= end && start <= this.getEndOffset());}}]);return DocumentSelectionState;})();




mixInEventEmitter(DocumentSelectionState, {
'blur':true, 
'focus':true, 
'update':true});


module.exports = DocumentSelectionState;});
__d('mixInEventEmitter',["EventEmitter","EventEmitterWithHolding","EventHolder","EventValidator","copyProperties","invariant","keyOf"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
















EventEmitter=require('EventEmitter');
var EventEmitterWithHolding=require('EventEmitterWithHolding');
var EventHolder=require('EventHolder');
var EventValidator=require('EventValidator');

var copyProperties=require('copyProperties');
var invariant=require('invariant');
var keyOf=require('keyOf');

var TYPES_KEY=keyOf({__types:true});






















function mixInEventEmitter(klass, types){
invariant(types, 'Must supply set of valid event types');
invariant(!this.__eventEmitter, 'An active emitter is already mixed in');



var target=klass.prototype || klass;

var ctor=klass.constructor;
if(ctor){
invariant(
ctor === Object || ctor === Function, 
'Mix EventEmitter into a class, not an instance');}





if(target.hasOwnProperty(TYPES_KEY)){
copyProperties(target.__types, types);}else 
if(target.__types){
target.__types = copyProperties({}, target.__types, types);}else 
{
target.__types = types;}

copyProperties(target, EventEmitterMixin);}


var EventEmitterMixin={
emit:function(eventType, a, b, c, d, e, _){
return this.__getEventEmitter().emit(eventType, a, b, c, d, e, _);}, 


emitAndHold:function(eventType, a, b, c, d, e, _){
return this.__getEventEmitter().emitAndHold(eventType, a, b, c, d, e, _);}, 


addListener:function(eventType, listener, context){
return this.__getEventEmitter().addListener(eventType, listener, context);}, 


once:function(eventType, listener, context){
return this.__getEventEmitter().once(eventType, listener, context);}, 


addRetroactiveListener:function(eventType, listener, context){
return this.__getEventEmitter().addRetroactiveListener(
eventType, 
listener, 
context);}, 



addListenerMap:function(listenerMap, context){
return this.__getEventEmitter().addListenerMap(listenerMap, context);}, 


addRetroactiveListenerMap:function(listenerMap, context){
return this.__getEventEmitter().addListenerMap(listenerMap, context);}, 


removeAllListeners:function(){
this.__getEventEmitter().removeAllListeners();}, 


removeCurrentListener:function(){
this.__getEventEmitter().removeCurrentListener();}, 


releaseHeldEventType:function(eventType){
this.__getEventEmitter().releaseHeldEventType(eventType);}, 


__getEventEmitter:function(){
if(!this.__eventEmitter){
var emitter=new EventEmitter();
emitter = EventValidator.addValidation(emitter, this.__types);

var holder=new EventHolder();
this.__eventEmitter = new EventEmitterWithHolding(emitter, holder);}

return this.__eventEmitter;}};



module.exports = mixInEventEmitter;});
__d('EventEmitterWithHolding',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 






























EventEmitterWithHolding=(function(){







function EventEmitterWithHolding(emitter, holder){_classCallCheck(this, EventEmitterWithHolding);
this._emitter = emitter;
this._eventHolder = holder;
this._currentEventToken = null;
this._emittingHeldEvents = false;}_createClass(EventEmitterWithHolding, [{key:'addListener', value:





function addListener(eventType, listener, context){
return this._emitter.addListener(eventType, listener, context);}}, {key:'once', value:





function once(eventType, listener, context){
return this._emitter.once(eventType, listener, context);}}, {key:'addRetroactiveListener', value:






















function addRetroactiveListener(
eventType, listener, context){
var subscription=this._emitter.addListener(eventType, listener, context);

this._emittingHeldEvents = true;
this._eventHolder.emitToListener(eventType, listener, context);
this._emittingHeldEvents = false;

return subscription;}}, {key:'removeAllListeners', value:





function removeAllListeners(eventType){
this._emitter.removeAllListeners(eventType);}}, {key:'removeCurrentListener', value:





function removeCurrentListener(){
this._emitter.removeCurrentListener();}}, {key:'listeners', value:





function listeners(eventType){
return this._emitter.listeners(eventType);}}, {key:'emit', value:





function emit(eventType, a, b, c, d, e, _){
this._emitter.emit(eventType, a, b, c, d, e, _);}}, {key:'emitAndHold', value:

















function emitAndHold(eventType, a, b, c, d, e, _){
this._currentEventToken = this._eventHolder.holdEvent(
eventType, 
a, b, c, d, e, _);

this._emitter.emit(eventType, a, b, c, d, e, _);
this._currentEventToken = null;}}, {key:'releaseCurrentEvent', value:





function releaseCurrentEvent(){
if(this._currentEventToken !== null){
this._eventHolder.releaseEvent(this._currentEventToken);}else 
if(this._emittingHeldEvents){
this._eventHolder.releaseCurrentEvent();}}}, {key:'releaseHeldEventType', value:







function releaseHeldEventType(eventType){
this._eventHolder.releaseEventType(eventType);}}]);return EventEmitterWithHolding;})();



module.exports = EventEmitterWithHolding;});
__d('EventHolder',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}


















var invariant=require('invariant');var 

EventHolder=(function(){
function EventHolder(){_classCallCheck(this, EventHolder);
this._heldEvents = {};
this._currentEventKey = null;}_createClass(EventHolder, [{key:'holdEvent', value:























function holdEvent(eventType, a, b, c, d, e, _){
this._heldEvents[eventType] = this._heldEvents[eventType] || [];
var eventsOfType=this._heldEvents[eventType];
var key={
eventType:eventType, 
index:eventsOfType.length};

eventsOfType.push([a, b, c, d, e, _]);
return key;}}, {key:'emitToListener', value:










function emitToListener(eventType, listener, context){var _this=this;
var eventsOfType=this._heldEvents[eventType];
if(!eventsOfType){
return;}

var origEventKey=this._currentEventKey;
eventsOfType.forEach(function(eventHeld, index){
if(!eventHeld){
return;}

_this._currentEventKey = {
eventType:eventType, 
index:index};

listener.apply(context, eventHeld);});

this._currentEventKey = origEventKey;}}, {key:'releaseCurrentEvent', value:










function releaseCurrentEvent(){
invariant(
this._currentEventKey !== null, 
'Not in an emitting cycle; there is no current event');

this.releaseEvent(this._currentEventKey);}}, {key:'releaseEvent', value:








function releaseEvent(token){
delete this._heldEvents[token.eventType][token.index];}}, {key:'releaseEventType', value:







function releaseEventType(type){
this._heldEvents[type] = [];}}]);return EventHolder;})();



module.exports = EventHolder;});
__d('EventValidator',["copyProperties"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

















var copyProperties=require('copyProperties');










var EventValidator={










addValidation:function(emitter, types){
var eventTypes=Object.keys(types);
var emitterWithValidation=Object.create(emitter);

copyProperties(emitterWithValidation, {
emit:function emit(type, a, b, c, d, e, _){
assertAllowsEventType(type, eventTypes);
return emitter.emit.call(this, type, a, b, c, d, e, _);}});



return emitterWithValidation;}};



function assertAllowsEventType(type, allowedTypes){
if(allowedTypes.indexOf(type) === -1){
throw new TypeError(errorMessageFor(type, allowedTypes));}}



function errorMessageFor(type, allowedTypes){
var message='Unknown event type "' + type + '". ';
if(__DEV__){
message += recommendationFor(type, allowedTypes);}

message += 'Known event types: ' + allowedTypes.join(', ') + '.';
return message;}



if(__DEV__){
var recommendationFor=function(type, allowedTypes){
var closestTypeRecommendation=closestTypeFor(type, allowedTypes);
if(isCloseEnough(closestTypeRecommendation, type)){
return 'Did you mean "' + closestTypeRecommendation.type + '"? ';}else 
{
return '';}};



var closestTypeFor=function(type, allowedTypes){
var typeRecommendations=allowedTypes.map(
typeRecommendationFor.bind(this, type));

return typeRecommendations.sort(recommendationSort)[0];};


var typeRecommendationFor=function(type, recomendedType){
return {
type:recomendedType, 
distance:damerauLevenshteinDistance(type, recomendedType)};};



var recommendationSort=function(recommendationA, recommendationB){
if(recommendationA.distance < recommendationB.distance){
return -1;}else 
if(recommendationA.distance > recommendationB.distance){
return 1;}else 
{
return 0;}};



var isCloseEnough=function(closestType, actualType){
return closestType.distance / actualType.length < 0.334;};


var damerauLevenshteinDistance=function(a, b){
var i, j;
var d=[];

for(i = 0; i <= a.length; i++) {
d[i] = [i];}


for(j = 1; j <= b.length; j++) {
d[0][j] = j;}


for(i = 1; i <= a.length; i++) {
for(j = 1; j <= b.length; j++) {
var cost=a.charAt(i - 1) === b.charAt(j - 1)?0:1;

d[i][j] = Math.min(
d[i - 1][j] + 1, 
d[i][j - 1] + 1, 
d[i - 1][j - 1] + cost);


if(i > 1 && j > 1 && 
a.charAt(i - 1) == b.charAt(j - 2) && 
a.charAt(i - 2) == b.charAt(j - 1)){
d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);}}}




return d[a.length][b.length];};}



module.exports = EventValidator;});
__d('copyProperties',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 























copyProperties(obj, a, b, c, d, e, f){
obj = obj || {};

if(__DEV__){
if(f){
throw new Error('Too many arguments passed to copyProperties');}}



var args=[a, b, c, d, e];
var ii=0, v;
while(args[ii]) {
v = args[ii++];
for(var k in v) {
obj[k] = v[k];}




if(v.hasOwnProperty && v.hasOwnProperty('toString') && 
typeof v.toString != 'undefined' && obj.toString !== v.toString){
obj.toString = v.toString;}}



return obj;}


module.exports = copyProperties;});
__d('TouchableWithoutFeedback',["React","react-timer-mixin/TimerMixin","Touchable","ensurePositiveDelayProps","onlyChild"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var React=require('React');
var TimerMixin=require('react-timer-mixin/TimerMixin');
var Touchable=require('Touchable');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var onlyChild=require('onlyChild');







var PRESS_RECT_OFFSET={top:20, left:20, right:20, bottom:30};








var TouchableWithoutFeedback=React.createClass({displayName:'TouchableWithoutFeedback', 
mixins:[TimerMixin, Touchable.Mixin], 

propTypes:{




accessible:React.PropTypes.bool, 
onPress:React.PropTypes.func, 
onPressIn:React.PropTypes.func, 
onPressOut:React.PropTypes.func, 
onLongPress:React.PropTypes.func, 



delayPressIn:React.PropTypes.number, 



delayPressOut:React.PropTypes.number, 



delayLongPress:React.PropTypes.number}, 


getInitialState:function(){
return this.touchableGetInitialState();}, 


componentDidMount:function(){
ensurePositiveDelayProps(this.props);}, 


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);}, 






touchableHandlePress:function(e){
this.props.onPress && this.props.onPress(e);}, 


touchableHandleActivePressIn:function(){
this.props.onPressIn && this.props.onPressIn();}, 


touchableHandleActivePressOut:function(){
this.props.onPressOut && this.props.onPressOut();}, 


touchableHandleLongPress:function(){
this.props.onLongPress && this.props.onLongPress();}, 


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;}, 


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn || 0;}, 


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress === 0?0:
this.props.delayLongPress || 500;}, 


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut || 0;}, 


render:function(){

return React.cloneElement(onlyChild(this.props.children), {
accessible:this.props.accessible !== false, 
testID:this.props.testID, 
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder, 
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest, 
onResponderGrant:this.touchableHandleResponderGrant, 
onResponderMove:this.touchableHandleResponderMove, 
onResponderRelease:this.touchableHandleResponderRelease, 
onResponderTerminate:this.touchableHandleResponderTerminate});}});




module.exports = TouchableWithoutFeedback;});
__d('ensurePositiveDelayProps',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');

var ensurePositiveDelayProps=function(props){
invariant(
!(props.delayPressIn < 0 || props.delayPressOut < 0 || 
props.delayLongPress < 0), 
'Touchable components cannot have negative delay properties');};



module.exports = ensurePositiveDelayProps;});
__d('TouchableHighlight',["NativeMethodsMixin","React","ReactNativeViewAttributes","StyleSheet","react-timer-mixin/TimerMixin","Touchable","TouchableWithoutFeedback","View","cloneWithProps","ensureComponentIsNative","ensurePositiveDelayProps","keyOf","merge","onlyChild"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};













var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var TimerMixin=require('react-timer-mixin/TimerMixin');
var Touchable=require('Touchable');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');
var View=require('View');

var cloneWithProps=require('cloneWithProps');
var ensureComponentIsNative=require('ensureComponentIsNative');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var keyOf=require('keyOf');
var merge=require('merge');
var onlyChild=require('onlyChild');

var DEFAULT_PROPS={
activeOpacity:0.8, 
underlayColor:'black'};


























var TouchableHighlight=React.createClass({displayName:'TouchableHighlight', 
propTypes:_extends({}, 
TouchableWithoutFeedback.propTypes, {




activeOpacity:React.PropTypes.number, 




underlayColor:React.PropTypes.string, 
style:View.propTypes.style, 



onShowUnderlay:React.PropTypes.func, 



onHideUnderlay:React.PropTypes.func}), 


mixins:[NativeMethodsMixin, TimerMixin, Touchable.Mixin], 

getDefaultProps:function(){return DEFAULT_PROPS;}, 


computeSyntheticState:function(props){
return {
activeProps:{
style:{
opacity:props.activeOpacity}}, 


activeUnderlayProps:{
style:{
backgroundColor:props.underlayColor}}, 


underlayStyle:[
INACTIVE_UNDERLAY_PROPS.style, 
props.style]};}, 




getInitialState:function(){
return merge(
this.touchableGetInitialState(), this.computeSyntheticState(this.props));}, 



componentDidMount:function(){
ensurePositiveDelayProps(this.props);
ensureComponentIsNative(this.refs[CHILD_REF]);}, 


componentDidUpdate:function(){
ensureComponentIsNative(this.refs[CHILD_REF]);}, 


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);
if(nextProps.activeOpacity !== this.props.activeOpacity || 
nextProps.underlayColor !== this.props.underlayColor || 
nextProps.style !== this.props.style){
this.setState(this.computeSyntheticState(nextProps));}}, 



viewConfig:{
uiViewClassName:'RCTView', 
validAttributes:ReactNativeViewAttributes.RCTView}, 






touchableHandleActivePressIn:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
this._showUnderlay();
this.props.onPressIn && this.props.onPressIn();}, 


touchableHandleActivePressOut:function(){
if(!this._hideTimeout){
this._hideUnderlay();}

this.props.onPressOut && this.props.onPressOut();}, 


touchableHandlePress:function(){
this.clearTimeout(this._hideTimeout);
this._showUnderlay();
this._hideTimeout = this.setTimeout(this._hideUnderlay, 
this.props.delayPressOut || 100);
this.props.onPress && this.props.onPress();}, 


touchableHandleLongPress:function(){
this.props.onLongPress && this.props.onLongPress();}, 


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;}, 


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn;}, 


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress;}, 


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut;}, 


_showUnderlay:function(){
this.refs[UNDERLAY_REF].setNativeProps(this.state.activeUnderlayProps);
this.refs[CHILD_REF].setNativeProps(this.state.activeProps);
this.props.onShowUnderlay && this.props.onShowUnderlay();}, 


_hideUnderlay:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
if(this.refs[UNDERLAY_REF]){
this.refs[CHILD_REF].setNativeProps(INACTIVE_CHILD_PROPS);
this.refs[UNDERLAY_REF].setNativeProps(_extends({}, 
INACTIVE_UNDERLAY_PROPS, {
style:this.state.underlayStyle}));

this.props.onHideUnderlay && this.props.onHideUnderlay();}}, 



render:function(){
return (
React.createElement(View, {
ref:UNDERLAY_REF, 
style:this.state.underlayStyle, 
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder, 
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest, 
onResponderGrant:this.touchableHandleResponderGrant, 
onResponderMove:this.touchableHandleResponderMove, 
onResponderRelease:this.touchableHandleResponderRelease, 
onResponderTerminate:this.touchableHandleResponderTerminate}, 
cloneWithProps(
onlyChild(this.props.children), 
{
ref:CHILD_REF, 
accessible:true, 
testID:this.props.testID})));}});







var PRESS_RECT_OFFSET={top:20, left:20, right:20, bottom:30};
var CHILD_REF=keyOf({childRef:null});
var UNDERLAY_REF=keyOf({underlayRef:null});
var INACTIVE_CHILD_PROPS={
style:StyleSheet.create({x:{opacity:1}}).x};

var INACTIVE_UNDERLAY_PROPS={
style:StyleSheet.create({x:{backgroundColor:'transparent'}}).x};


module.exports = TouchableHighlight;});
__d('cloneWithProps',["ReactElement","ReactPropTransferer","keyOf","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactElement=require('ReactElement');
var ReactPropTransferer=require('ReactPropTransferer');

var keyOf=require('keyOf');
var warning=require('warning');

var CHILDREN_PROP=keyOf({children:null});










function cloneWithProps(child, props){
if(__DEV__){
warning(
!child.ref, 
'You are calling cloneWithProps() on a child with a ref. This is ' + 
'dangerous because you\'re creating a new child which will not be ' + 
'added as a ref to its parent.');}



var newProps=ReactPropTransferer.mergeProps(props, child.props);


if(!newProps.hasOwnProperty(CHILDREN_PROP) && 
child.props.hasOwnProperty(CHILDREN_PROP)){
newProps.children = child.props.children;}




return ReactElement.createElement(child.type, newProps);}


module.exports = cloneWithProps;});
__d('ReactPropTransferer',["Object.assign","emptyFunction","joinClasses"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var joinClasses=require('joinClasses');








function createTransferStrategy(mergeStrategy){
return function(props, key, value){
if(!props.hasOwnProperty(key)){
props[key] = value;}else 
{
props[key] = mergeStrategy(props[key], value);}};}




var transferStrategyMerge=createTransferStrategy(function(a, b){



return assign({}, b, a);});







var TransferStrategies={



children:emptyFunction, 



className:createTransferStrategy(joinClasses), 



style:transferStrategyMerge};










function transferInto(props, newProps){
for(var thisKey in newProps) {
if(!newProps.hasOwnProperty(thisKey)){
continue;}


var transferStrategy=TransferStrategies[thisKey];

if(transferStrategy && TransferStrategies.hasOwnProperty(thisKey)){
transferStrategy(props, thisKey, newProps[thisKey]);}else 
if(!props.hasOwnProperty(thisKey)){
props[thisKey] = newProps[thisKey];}}


return props;}








var ReactPropTransferer={








mergeProps:function(oldProps, newProps){
return transferInto(assign({}, oldProps), newProps);}};




module.exports = ReactPropTransferer;});
__d('joinClasses',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















function joinClasses(className){
if(!className){
className = '';}

var nextClass;
var argLength=arguments.length;
if(argLength > 1){
for(var ii=1; ii < argLength; ii++) {
nextClass = arguments[ii];
if(nextClass){
className = (className?className + ' ':'') + nextClass;}}}



return className;}


module.exports = joinClasses;});
__d('ensureComponentIsNative',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');

var ensureComponentIsNative=function(component){
invariant(
component && typeof component.setNativeProps === 'function', 
'Touchable child must either be native or forward setNativeProps to a ' + 
'native component');};



module.exports = ensureComponentIsNative;});
__d('TouchableOpacity',["NativeMethodsMixin","POPAnimationMixin","React","react-timer-mixin/TimerMixin","Touchable","TouchableWithoutFeedback","cloneWithProps","ensureComponentIsNative","ensurePositiveDelayProps","flattenStyle","keyOf","onlyChild"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};













var NativeMethodsMixin=require('NativeMethodsMixin');
var POPAnimationMixin=require('POPAnimationMixin');
var React=require('React');
var TimerMixin=require('react-timer-mixin/TimerMixin');
var Touchable=require('Touchable');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');

var cloneWithProps=require('cloneWithProps');
var ensureComponentIsNative=require('ensureComponentIsNative');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var flattenStyle=require('flattenStyle');
var keyOf=require('keyOf');
var onlyChild=require('onlyChild');


























var TouchableOpacity=React.createClass({displayName:'TouchableOpacity', 
mixins:[TimerMixin, Touchable.Mixin, NativeMethodsMixin, POPAnimationMixin], 

propTypes:_extends({}, 
TouchableWithoutFeedback.propTypes, {




activeOpacity:React.PropTypes.number}), 


getDefaultProps:function(){
return {
activeOpacity:0.2};}, 



getInitialState:function(){
return this.touchableGetInitialState();}, 


componentDidMount:function(){
ensurePositiveDelayProps(this.props);
ensureComponentIsNative(this.refs[CHILD_REF]);}, 


componentDidUpdate:function(){
ensureComponentIsNative(this.refs[CHILD_REF]);}, 


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);}, 


setOpacityTo:function(value){
if(POPAnimationMixin){

this.stopAllAnimations();
var anim={
type:this.AnimationTypes.linear, 
property:this.AnimationProperties.opacity, 
duration:0.15, 
toValue:value};

this.startAnimation(CHILD_REF, anim);}else 
{

this.refs[CHILD_REF].setNativeProps({
opacity:value});}}, 








touchableHandleActivePressIn:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
this._opacityActive();
this.props.onPressIn && this.props.onPressIn();}, 


touchableHandleActivePressOut:function(){
if(!this._hideTimeout){
this._opacityInactive();}

this.props.onPressOut && this.props.onPressOut();}, 


touchableHandlePress:function(){
this.clearTimeout(this._hideTimeout);
this._opacityActive();
this._hideTimeout = this.setTimeout(
this._opacityInactive, 
this.props.delayPressOut || 100);

this.props.onPress && this.props.onPress();}, 


touchableHandleLongPress:function(){
this.props.onLongPress && this.props.onLongPress();}, 


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;}, 


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn || 0;}, 


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress === 0?0:
this.props.delayLongPress || 500;}, 


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut;}, 


_opacityActive:function(){
this.setOpacityTo(this.props.activeOpacity);}, 


_opacityInactive:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
var child=onlyChild(this.props.children);
var childStyle=flattenStyle(child.props.style) || {};
this.setOpacityTo(
childStyle.opacity === undefined?1:childStyle.opacity);}, 



render:function(){
return cloneWithProps(onlyChild(this.props.children), {
ref:CHILD_REF, 
accessible:true, 
testID:this.props.testID, 
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder, 
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest, 
onResponderGrant:this.touchableHandleResponderGrant, 
onResponderMove:this.touchableHandleResponderMove, 
onResponderRelease:this.touchableHandleResponderRelease, 
onResponderTerminate:this.touchableHandleResponderTerminate});}});










var PRESS_RECT_OFFSET={top:20, left:20, right:20, bottom:30};

var CHILD_REF=keyOf({childRef:null});

module.exports = TouchableOpacity;});
__d('POPAnimationMixin',["POPAnimation","React","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var POPAnimationOrNull=require('POPAnimation');
var React=require('React');

if(!POPAnimationOrNull){


module.exports = null;}else 
{



var POPAnimation=POPAnimationOrNull;

var invariant=require('invariant');
var warning=require('warning');

var POPAnimationMixin={




AnimationTypes:POPAnimation.Types, 
AnimationProperties:POPAnimation.Properties, 

getInitialState:function(){
return {
_currentAnimationsByNodeHandle:{}};}, 



_ensureBookkeepingSetup:function(nodeHandle){
if(!this.state._currentAnimationsByNodeHandle[nodeHandle]){
this.state._currentAnimationsByNodeHandle[nodeHandle] = [];}}, 

















startAnimation:function(
refKey, 
anim, 
doneCallback)
{
var animID=0;
if(typeof anim === 'number'){
animID = anim;}else 
{
invariant(
anim instanceof Object && 
anim.type !== undefined && 
anim.property !== undefined, 
'Animation definitions must specify a type of animation and a ' + 
'property to animate.');

animID = POPAnimation.createAnimation(anim.type, anim);}

invariant(
this.refs[refKey], 
'Invalid refKey ' + refKey + ' for anim:\n' + JSON.stringify(anim) + 
'\nvalid refs: ' + JSON.stringify(Object.keys(this.refs)));

var refNodeHandle=React.findNodeHandle(this.refs[refKey]);
this.startAnimationWithNodeHandle(refNodeHandle, animID, doneCallback);}, 








startAnimationWithNodeHandle:function(
nodeHandle, 
animID, 
doneCallback)
{var _this=this;
this._ensureBookkeepingSetup(nodeHandle);
var animations=this.state._currentAnimationsByNodeHandle[nodeHandle];
var animIndex=animations.length;
animations.push(animID);
var cleanupWrapper=function(finished){
if(!_this.isMounted()){
return;}

animations[animIndex] = 0;
var allDone=true;
for(var ii=0; ii < animations.length; ii++) {
if(animations[ii]){
allDone = false;
break;}}


if(allDone){
_this.state._currentAnimationsByNodeHandle[nodeHandle] = undefined;}

doneCallback && doneCallback(finished);};

POPAnimation.addAnimation(nodeHandle, animID, cleanupWrapper);}, 













startAnimations:function(
animations, 
onSuccess, 
onFailure)
{var _this2=this;
var numReturned=0;
var numFinished=0;
var numAnimations=animations.length;
var metaCallback=function(finished){
if(finished){
++numFinished;}

if(++numReturned === numAnimations){
onSuccess && onSuccess(numFinished === numAnimations);}};


animations.forEach(function(anim){
warning(
anim.ref != null || anim.nodeHandle != null && 
!anim.ref !== !anim.nodeHandle, 
'Animations must be specified with either ref xor nodeHandle');

if(anim.ref){
_this2.startAnimation(anim.ref, anim.anim, metaCallback);}else 
if(anim.nodeHandle){
_this2.startAnimationWithNodeHandle(anim.nodeHandle, anim.anim, metaCallback);}});}, 











stopNodeHandleAnimations:function(nodeHandle){
if(!this.state._currentAnimationsByNodeHandle[nodeHandle]){
return;}

var anims=this.state._currentAnimationsByNodeHandle[nodeHandle];
for(var i=0; i < anims.length; i++) {
var anim=anims[i];
if(anim){

POPAnimation.removeAnimation(+nodeHandle, anim);}}


this.state._currentAnimationsByNodeHandle[nodeHandle] = undefined;}, 







stopAnimations:function(refKey){
invariant(this.refs[refKey], 'invalid ref');
this.stopNodeHandleAnimations(React.findNodeHandle(this.refs[refKey]));}, 






stopAllAnimations:function(){
for(var nodeHandle in this.state._currentAnimationsByNodeHandle) {
this.stopNodeHandleAnimations(nodeHandle);}}, 



















animateToFrame:function(
refKey, 
frame, 
type, 
velocity, 
doneCallback)
{
var animFrame={
x:frame.left + frame.width / 2, 
y:frame.top + frame.height / 2, 
w:frame.width, 
h:frame.height};

var posAnim=POPAnimation.createAnimation(type, {
property:POPAnimation.Properties.position, 
toValue:[animFrame.x, animFrame.y], 
velocity:velocity || [0, 0]});

var sizeAnim=POPAnimation.createAnimation(type, {
property:POPAnimation.Properties.size, 
toValue:[animFrame.w, animFrame.h]});

this.startAnimation(refKey, posAnim, doneCallback);
this.startAnimation(refKey, sizeAnim);}, 



componentWillUnmount:function(){
this.stopAllAnimations();}};



module.exports = POPAnimationMixin;}});
__d('POPAnimation',["NativeModules","ReactPropTypes","createStrictShapeTypeChecker","getObjectValues","invariant","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var RCTPOPAnimationManager=require('NativeModules').POPAnimationManager;
if(!RCTPOPAnimationManager){




module.exports = null;}else 
{

var ReactPropTypes=require('ReactPropTypes');
var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var getObjectValues=require('getObjectValues');
var invariant=require('invariant');
var merge=require('merge');

var RCTTypes=RCTPOPAnimationManager.Types;
var RCTProperties=RCTPOPAnimationManager.Properties;

var Properties={
bounds:RCTProperties.bounds, 
opacity:RCTProperties.opacity, 
position:RCTProperties.position, 
positionX:RCTProperties.positionX, 
positionY:RCTProperties.positionY, 
zPosition:RCTProperties.zPosition, 
rotation:RCTProperties.rotation, 
rotationX:RCTProperties.rotationX, 
rotationY:RCTProperties.rotationY, 
scaleX:RCTProperties.scaleX, 
scaleXY:RCTProperties.scaleXY, 
scaleY:RCTProperties.scaleY, 
shadowColor:RCTProperties.shadowColor, 
shadowOffset:RCTProperties.shadowOffset, 
shadowOpacity:RCTProperties.shadowOpacity, 
shadowRadius:RCTProperties.shadowRadius, 
size:RCTProperties.size, 
subscaleXY:RCTProperties.subscaleXY, 
subtranslationX:RCTProperties.subtranslationX, 
subtranslationXY:RCTProperties.subtranslationXY, 
subtranslationY:RCTProperties.subtranslationY, 
subtranslationZ:RCTProperties.subtranslationZ, 
translationX:RCTProperties.translationX, 
translationXY:RCTProperties.translationXY, 
translationY:RCTProperties.translationY, 
translationZ:RCTProperties.translationZ};


var Types={
decay:RCTTypes.decay, 
easeIn:RCTTypes.easeIn, 
easeInEaseOut:RCTTypes.easeInEaseOut, 
easeOut:RCTTypes.easeOut, 
linear:RCTTypes.linear, 
spring:RCTTypes.spring};
















var POPAnimation={
Types:Types, 
Properties:Properties, 

attributeChecker:createStrictShapeTypeChecker({
type:ReactPropTypes.oneOf(getObjectValues(Types)), 
property:ReactPropTypes.oneOf(getObjectValues(Properties)), 
fromValue:ReactPropTypes.any, 
toValue:ReactPropTypes.any, 
duration:ReactPropTypes.any, 
velocity:ReactPropTypes.any, 
deceleration:ReactPropTypes.any, 
springBounciness:ReactPropTypes.any, 
dynamicsFriction:ReactPropTypes.any, 
dynamicsMass:ReactPropTypes.any, 
dynamicsTension:ReactPropTypes.any}), 


lastUsedTag:0, 
allocateTagForAnimation:function(){
return ++this.lastUsedTag;}, 


createAnimation:function(typeName, attrs){
var tag=this.allocateTagForAnimation();

if(__DEV__){
POPAnimation.attributeChecker(
{attrs:attrs}, 
'attrs', 
'POPAnimation.createAnimation');

POPAnimation.attributeChecker(
{attrs:{type:typeName}}, 
'attrs', 
'POPAnimation.createAnimation');}



RCTPOPAnimationManager.createAnimationInternal(tag, typeName, attrs);
return tag;}, 


createSpringAnimation:function(attrs){
return this.createAnimation(this.Types.spring, attrs);}, 


createDecayAnimation:function(attrs){
return this.createAnimation(this.Types.decay, attrs);}, 


createLinearAnimation:function(attrs){
return this.createAnimation(this.Types.linear, attrs);}, 


createEaseInAnimation:function(attrs){
return this.createAnimation(this.Types.easeIn, attrs);}, 


createEaseOutAnimation:function(attrs){
return this.createAnimation(this.Types.easeOut, attrs);}, 


createEaseInEaseOutAnimation:function(attrs){
return this.createAnimation(this.Types.easeInEaseOut, attrs);}, 


addAnimation:function(nodeHandle, anim, callback){
RCTPOPAnimationManager.addAnimation(nodeHandle, anim, callback);}, 


removeAnimation:function(nodeHandle, anim){
RCTPOPAnimationManager.removeAnimation(nodeHandle, anim);}};





if(__DEV__){
var allProperties=merge(
RCTPOPAnimationManager.Properties, 
RCTPOPAnimationManager.Properties);

for(var key in allProperties) {
invariant(
POPAnimation.Properties[key] === RCTPOPAnimationManager.Properties[key], 
'POPAnimation doesn\'t copy property ' + key + ' correctly');}



var allTypes=merge(
RCTPOPAnimationManager.Types, 
RCTPOPAnimationManager.Types);

for(var key in allTypes) {
invariant(
POPAnimation.Types[key] === RCTPOPAnimationManager.Types[key], 
'POPAnimation doesn\'t copy type ' + key + ' correctly');}}




module.exports = POPAnimation;}});
__d('getObjectValues',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 


























getObjectValues(obj){
var values=[];
for(var key in obj) {
values.push(obj[key]);}

return values;}


module.exports = getObjectValues;});
__d('WebView',["ActivityIndicatorIOS","EdgeInsetsPropType","React","StyleSheet","Text","View","invariant","keyMirror","requireNativeComponent","NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ActivityIndicatorIOS=require('ActivityIndicatorIOS');
var EdgeInsetsPropType=require('EdgeInsetsPropType');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var requireNativeComponent=require('requireNativeComponent');

var PropTypes=React.PropTypes;
var RCTWebViewManager=require('NativeModules').WebViewManager;

var BGWASH='rgba(255,255,255,0.8)';
var RCT_WEBVIEW_REF='webview';

var WebViewState=keyMirror({
IDLE:null, 
LOADING:null, 
ERROR:null});


var NavigationType={
click:RCTWebViewManager.NavigationType.LinkClicked, 
formsubmit:RCTWebViewManager.NavigationType.FormSubmitted, 
backforward:RCTWebViewManager.NavigationType.BackForward, 
reload:RCTWebViewManager.NavigationType.Reload, 
formresubmit:RCTWebViewManager.NavigationType.FormResubmitted, 
other:RCTWebViewManager.NavigationType.Other};










var defaultRenderLoading=function(){return (
React.createElement(View, {style:styles.loadingView}, 
React.createElement(ActivityIndicatorIOS, null)));};


var defaultRenderError=function(errorDomain, errorCode, errorDesc){return (
React.createElement(View, {style:styles.errorContainer}, 
React.createElement(Text, {style:styles.errorTextTitle}, 'Error loading page'), 


React.createElement(Text, {style:styles.errorText}, 
'Domain: ' + errorDomain), 

React.createElement(Text, {style:styles.errorText}, 
'Error Code: ' + errorCode), 

React.createElement(Text, {style:styles.errorText}, 
'Description: ' + errorDesc)));};




var WebView=React.createClass({displayName:'WebView', 
statics:{
NavigationType:NavigationType}, 


propTypes:{
url:PropTypes.string, 
html:PropTypes.string, 
renderError:PropTypes.func, 
renderLoading:PropTypes.func, 
bounces:PropTypes.bool, 
scrollEnabled:PropTypes.bool, 
automaticallyAdjustContentInsets:PropTypes.bool, 
shouldInjectAJAXHandler:PropTypes.bool, 
contentInset:EdgeInsetsPropType, 
onNavigationStateChange:PropTypes.func, 
startInLoadingState:PropTypes.bool, 
style:View.propTypes.style, 



javaScriptEnabledAndroid:PropTypes.bool}, 


getInitialState:function(){
return {
viewState:WebViewState.IDLE, 
lastErrorEvent:null, 
startInLoadingState:true};}, 



componentWillMount:function(){
if(this.props.startInLoadingState){
this.setState({viewState:WebViewState.LOADING});}}, 



render:function(){
var otherView=null;

if(this.state.viewState === WebViewState.LOADING){
otherView = (this.props.renderLoading || defaultRenderLoading)();}else 
if(this.state.viewState === WebViewState.ERROR){
var errorEvent=this.state.lastErrorEvent;
invariant(
errorEvent != null, 
'lastErrorEvent expected to be non-null');

otherView = (this.props.renderError || defaultRenderError)(
errorEvent.domain, 
errorEvent.code, 
errorEvent.description);}else 

if(this.state.viewState !== WebViewState.IDLE){
console.error(
'RCTWebView invalid state encountered: ' + this.state.loading);}



var webViewStyles=[styles.container, styles.webView, this.props.style];
if(this.state.viewState === WebViewState.LOADING || 
this.state.viewState === WebViewState.ERROR){

webViewStyles.push(styles.hidden);}


var webView=
React.createElement(RCTWebView, {
ref:RCT_WEBVIEW_REF, 
key:'webViewKey', 
style:webViewStyles, 
url:this.props.url, 
html:this.props.html, 
bounces:this.props.bounces, 
scrollEnabled:this.props.scrollEnabled, 
shouldInjectAJAXHandler:this.props.shouldInjectAJAXHandler, 
contentInset:this.props.contentInset, 
automaticallyAdjustContentInsets:this.props.automaticallyAdjustContentInsets, 
onLoadingStart:this.onLoadingStart, 
onLoadingFinish:this.onLoadingFinish, 
onLoadingError:this.onLoadingError});


return (
React.createElement(View, {style:styles.container}, 
webView, 
otherView));}, 




goForward:function(){
RCTWebViewManager.goForward(this.getWebWiewHandle());}, 


goBack:function(){
RCTWebViewManager.goBack(this.getWebWiewHandle());}, 


reload:function(){
RCTWebViewManager.reload(this.getWebWiewHandle());}, 






updateNavigationState:function(event){
if(this.props.onNavigationStateChange){
this.props.onNavigationStateChange(event.nativeEvent);}}, 



getWebWiewHandle:function(){
return React.findNodeHandle(this.refs[RCT_WEBVIEW_REF]);}, 


onLoadingStart:function(event){
this.updateNavigationState(event);}, 


onLoadingError:function(event){
event.persist();
console.error('Encountered an error loading page', event.nativeEvent);

this.setState({
lastErrorEvent:event.nativeEvent, 
viewState:WebViewState.ERROR});}, 



onLoadingFinish:function(event){
this.setState({
viewState:WebViewState.IDLE});

this.updateNavigationState(event);}});



var RCTWebView=requireNativeComponent('RCTWebView', WebView);

var styles=StyleSheet.create({
container:{
flex:1}, 

errorContainer:{
flex:1, 
justifyContent:'center', 
alignItems:'center', 
backgroundColor:BGWASH}, 

errorText:{
fontSize:14, 
textAlign:'center', 
marginBottom:2}, 

errorTextTitle:{
fontSize:15, 
fontWeight:'500', 
marginBottom:10}, 

hidden:{
height:0, 
flex:0}, 

loadingView:{
backgroundColor:BGWASH, 
flex:1, 
justifyContent:'center', 
alignItems:'center'}, 

webView:{
backgroundColor:'#ffffff'}});



module.exports = WebView;});
__d('AlertIOS',["NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var RCTAlertManager=require('NativeModules').AlertManager;
var invariant=require('invariant');

var DEFAULT_BUTTON_TEXT='OK';
var DEFAULT_BUTTON={
text:DEFAULT_BUTTON_TEXT, 
onPress:null};var 
























AlertIOS=(function(){function AlertIOS(){_classCallCheck(this, AlertIOS);}_createClass(AlertIOS, null, [{key:'alert', value:
function alert(
title, 
message, 
buttons, 



type)
{
var callbacks=[];
var buttonsSpec=[];
title = title || '';
message = message || '';
buttons = buttons || [DEFAULT_BUTTON];
type = type || '';

buttons.forEach(function(btn, index){
callbacks[index] = btn.onPress;
var btnDef={};
btnDef[index] = btn.text || DEFAULT_BUTTON_TEXT;
buttonsSpec.push(btnDef);});

RCTAlertManager.alertWithArgs({
title:title, 
message:message, 
buttons:buttonsSpec, 
type:type}, 
function(id, value){
var cb=callbacks[id];
cb && cb(value);});}}, {key:'prompt', value:



function prompt(
title, 
value, 
buttons, 



callback)
{
if(arguments.length === 2){
if(typeof value === 'object'){
buttons = value;
value = undefined;}else 
if(typeof value === 'function'){
callback = value;
value = undefined;}}else 

if(arguments.length === 3 && typeof buttons === 'function'){
callback = buttons;
buttons = undefined;}


invariant(
!(callback && buttons) && (callback || buttons), 
'Must provide either a button list or a callback, but not both');


if(!buttons){
buttons = [{
text:'Cancel'}, 
{
text:'OK', 
onPress:callback}];}


this.alert(title, value, buttons, 'plain-text');}}]);return AlertIOS;})();



module.exports = AlertIOS;});
__d('AppRegistry',["invariant","renderApplication","RCTRenderingPerf"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');
var renderApplication=require('renderApplication');

if(__DEV__){


require('RCTRenderingPerf');}


var runnables={};


















var AppRegistry={
registerConfig:function(config){
for(var i=0; i < config.length; ++i) {
var appConfig=config[i];
if(appConfig.run){
AppRegistry.registerRunnable(appConfig.appKey, appConfig.run);}else 
{
AppRegistry.registerComponent(appConfig.appKey, appConfig.component);}}}, 




registerComponent:function(appKey, getComponentFunc){
runnables[appKey] = {
run:function(appParameters){return (
renderApplication(getComponentFunc(), appParameters.initialProps, appParameters.rootTag));}};

return appKey;}, 


registerRunnable:function(appKey, func){
runnables[appKey] = {run:func};
return appKey;}, 


runApplication:function(appKey, appParameters){
console.log(
'Running application "' + appKey + '" with appParams: ' + 
JSON.stringify(appParameters) + '. ' + 
'__DEV__ === ' + __DEV__ + 
', development-level warning are ' + (__DEV__?'ON':'OFF') + 
', performance optimizations are ' + (__DEV__?'OFF':'ON'));

invariant(
runnables[appKey] && runnables[appKey].run, 
'Application ' + appKey + ' has not been registered. This ' + 
'is either due to a require() error during initialization ' + 
'or failure to call AppRegistry.registerComponent.');

runnables[appKey].run(appParameters);}};



module.exports = AppRegistry;});
__d('renderApplication',["InspectorOverlay","RCTDeviceEventEmitter","React","StyleSheet","Subscribable","View","WarningBox","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var InspectorOverlay=require('InspectorOverlay');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Subscribable=require('Subscribable');
var View=require('View');
var WarningBox=require('WarningBox');

var invariant=require('invariant');

var AppContainer=React.createClass({displayName:'AppContainer', 
mixins:[Subscribable.Mixin], 

getInitialState:function(){
return {inspector:null};}, 


toggleElementInspector:function(){
var inspector=this.state.inspector?
null:
React.createElement(InspectorOverlay, {
rootTag:this.props.rootTag, 
inspectedViewTag:React.findNodeHandle(this.refs.main)});

this.setState({inspector:inspector});}, 


componentDidMount:function(){
this.addListenerOn(
RCTDeviceEventEmitter, 
'toggleElementInspector', 
this.toggleElementInspector);}, 



render:function(){
var shouldRenderWarningBox=__DEV__ && console.yellowBoxEnabled;
var warningBox=shouldRenderWarningBox?React.createElement(WarningBox, null):null;
return (
React.createElement(View, {style:styles.appContainer}, 
React.createElement(View, {style:styles.appContainer, ref:'main'}, 
this.props.children), 

warningBox, 
this.state.inspector));}});





function renderApplication(
RootComponent, 
initialProps, 
rootTag)
{
invariant(
rootTag, 
'Expect to have a valid rootTag, instead got ', rootTag);

React.render(
React.createElement(AppContainer, {rootTag:rootTag}, 
React.createElement(RootComponent, 
initialProps)), 


rootTag);}



var styles=StyleSheet.create({
appContainer:{
position:'absolute', 
left:0, 
top:0, 
right:0, 
bottom:0}});



module.exports = renderApplication;});
__d('InspectorOverlay',["Dimensions","Inspector","React","StyleSheet","Text","NativeModules","View","ElementBox","ElementProperties"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var Dimensions=require('Dimensions');
var Inspector=require('Inspector');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var UIManager=require('NativeModules').UIManager;
var View=require('View');
var ElementBox=require('ElementBox');
var ElementProperties=require('ElementProperties');

var InspectorOverlay=React.createClass({displayName:'InspectorOverlay', 
getInitialState:function(){
return {
frame:null, 
pointerY:0, 
hierarchy:[], 
selection:-1};}, 



findViewForTouchEvent:function(e){var _this=this;var _e$nativeEvent$touches$0=
e.nativeEvent.touches[0];var locationX=_e$nativeEvent$touches$0.locationX;var locationY=_e$nativeEvent$touches$0.locationY;
UIManager.findSubviewIn(
this.props.inspectedViewTag, 
[locationX, locationY], 
function(nativeViewTag, left, top, width, height){
var instance=Inspector.findInstanceByNativeTag(_this.props.rootTag, nativeViewTag);
if(!instance){
return;}

var hierarchy=Inspector.getOwnerHierarchy(instance);
var publicInstance=instance.getPublicInstance();
_this.setState({
hierarchy:hierarchy, 
pointerY:locationY, 
selection:hierarchy.length - 1, 
frame:{left:left, top:top, width:width, height:height}, 
style:publicInstance.props?publicInstance.props.style:{}});});}, 





setSelection:function(i){var _this2=this;
var instance=this.state.hierarchy[i];
var publicInstance=instance.getPublicInstance();
UIManager.measure(React.findNodeHandle(instance), function(x, y, width, height, left, top){
_this2.setState({
frame:{left:left, top:top, width:width, height:height}, 
style:publicInstance.props?publicInstance.props.style:{}, 
selection:i});});}, 




shouldSetResponser:function(e){
this.findViewForTouchEvent(e);
return true;}, 


render:function(){
var content=[];
var justifyContent='flex-end';

if(this.state.frame){
var distanceToTop=this.state.pointerY;
var distanceToBottom=Dimensions.get('window').height - distanceToTop;

justifyContent = distanceToTop > distanceToBottom?
'flex-start':
'flex-end';

content.push(React.createElement(ElementBox, {frame:this.state.frame, style:this.state.style}));
content.push(
React.createElement(ElementProperties, {
style:this.state.style, 
frame:this.state.frame, 
hierarchy:this.state.hierarchy, 
selection:this.state.selection, 
setSelection:this.setSelection}));}else 


{
content.push(
React.createElement(View, {style:styles.welcomeMessage}, 
React.createElement(Text, {style:styles.welcomeText}, 'Welcome to the inspector! Tap something to inspect it.')));}



return (
React.createElement(View, {
onStartShouldSetResponder:this.shouldSetResponser, 
onResponderMove:this.findViewForTouchEvent, 
style:[styles.inspector, {justifyContent:justifyContent}]}, 
content));}});





var styles=StyleSheet.create({
welcomeMessage:{
backgroundColor:'rgba(0, 0, 0, 0.7)', 
padding:10, 
paddingVertical:50}, 

welcomeText:{
color:'white'}, 

inspector:{
backgroundColor:'rgba(255,255,255,0.0)', 
position:'absolute', 
left:0, 
top:0, 
right:0, 
bottom:0}});



module.exports = InspectorOverlay;});
__d('Inspector',["ReactInstanceHandles","ReactInstanceMap","ReactNativeMount","ReactNativeTagHandles"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeMount=require('ReactNativeMount');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

function traverseOwnerTreeUp(hierarchy, instance){
if(instance){
hierarchy.unshift(instance);
traverseOwnerTreeUp(hierarchy, instance._currentElement._owner);}}



function findInstance(component, targetID){
if(targetID === findRootNodeID(component)){
return component;}

if(component._renderedComponent){
return findInstance(component._renderedComponent, targetID);}else 
{
for(var key in component._renderedChildren) {
var child=component._renderedChildren[key];
if(ReactInstanceHandles.isAncestorIDOf(findRootNodeID(child), targetID)){
var instance=findInstance(child, targetID);
if(instance){
return instance;}}}}}






function findRootNodeID(component){
var internalInstance=ReactInstanceMap.get(component);
return internalInstance?internalInstance._rootNodeID:component._rootNodeID;}


function findInstanceByNativeTag(rootTag, nativeTag){
var containerID=ReactNativeTagHandles.tagToRootNodeID[rootTag];
var rootInstance=ReactNativeMount._instancesByContainerID[containerID];
var targetID=ReactNativeTagHandles.tagToRootNodeID[nativeTag];
if(!targetID){
return undefined;}

return findInstance(rootInstance, targetID);}


function getOwnerHierarchy(instance){
var hierarchy=[];
traverseOwnerTreeUp(hierarchy, instance);
return hierarchy;}


module.exports = {findInstanceByNativeTag:findInstanceByNativeTag, getOwnerHierarchy:getOwnerHierarchy};});
__d('ElementBox',["React","View","StyleSheet","BorderBox","resolveBoxStyle","flattenStyle"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}












var React=require('React');
var View=require('View');
var StyleSheet=require('StyleSheet');
var BorderBox=require('BorderBox');
var resolveBoxStyle=require('resolveBoxStyle');

var flattenStyle=require('flattenStyle');var 

ElementBox=(function(_React$Component){function ElementBox(){_classCallCheck(this, ElementBox);if(_React$Component != null){_React$Component.apply(this, arguments);}}_inherits(ElementBox, _React$Component);_createClass(ElementBox, [{key:'render', value:
function render(){
var style=flattenStyle(this.props.style) || {};
var margin=resolveBoxStyle('margin', style);
var padding=resolveBoxStyle('padding', style);
var frameStyle=this.props.frame;
if(margin){
frameStyle = {
top:frameStyle.top - margin.top, 
left:frameStyle.left - margin.left, 
height:frameStyle.height + margin.top + margin.bottom, 
width:frameStyle.width + margin.left + margin.right};}


var contentStyle={
width:this.props.frame.width, 
height:this.props.frame.height};

if(padding){
contentStyle = {
width:contentStyle.width - padding.left - padding.right, 
height:contentStyle.height - padding.top - padding.bottom};}


return (
React.createElement(View, {style:[styles.frame, frameStyle], pointerEvents:'none'}, 
React.createElement(BorderBox, {box:margin, style:styles.margin}, 
React.createElement(BorderBox, {box:padding, style:styles.padding}, 
React.createElement(View, {style:[styles.content, contentStyle]})))));}}]);return ElementBox;})(React.Component);







var styles=StyleSheet.create({
frame:{
position:'absolute'}, 

content:{
backgroundColor:'rgba(200, 230, 255, 0.8)'}, 

padding:{
borderColor:'rgba(77, 255, 0, 0.3)'}, 

margin:{
borderColor:'rgba(255, 132, 0, 0.3)'}});



module.exports = ElementBox;});
__d('BorderBox',["React","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}












var React=require('React');
var View=require('View');var 

BorderBox=(function(_React$Component){function BorderBox(){_classCallCheck(this, BorderBox);if(_React$Component != null){_React$Component.apply(this, arguments);}}_inherits(BorderBox, _React$Component);_createClass(BorderBox, [{key:'render', value:
function render(){
var box=this.props.box;
if(!box){
return this.props.children;}

var style={
borderTopWidth:box.top, 
borderBottomWidth:box.bottom, 
borderLeftWidth:box.left, 
borderRightWidth:box.right};

return (
React.createElement(View, {style:[style, this.props.style]}, 
this.props.children));}}]);return BorderBox;})(React.Component);





module.exports = BorderBox;});
__d('resolveBoxStyle',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';





















function resolveBoxStyle(prefix, style){
var res={};
var subs=['top', 'left', 'bottom', 'right'];
var set=false;
subs.forEach(function(sub){
res[sub] = style[prefix] || 0;});

if(style[prefix]){
set = true;}

if(style[prefix + 'Vertical']){
res.top = res.bottom = style[prefix + 'Vertical'];
set = true;}

if(style[prefix + 'Horizontal']){
res.left = res.right = style[prefix + 'Horizontal'];
set = true;}

subs.forEach(function(sub){
var val=style[prefix + capFirst(sub)];
if(val){
res[sub] = val;
set = true;}});


if(!set){
return;}

return res;}


function capFirst(text){
return text[0].toUpperCase() + text.slice(1);}


module.exports = resolveBoxStyle;});
__d('ElementProperties',["React","StyleSheet","Text","View","ReactPropTypes","BoxInspector","StyleInspector","TouchableHighlight","TouchableWithoutFeedback","flattenStyle","mapWithSeparator"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');
var PropTypes=require('ReactPropTypes');
var BoxInspector=require('BoxInspector');
var StyleInspector=require('StyleInspector');
var TouchableHighlight=require('TouchableHighlight');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');

var flattenStyle=require('flattenStyle');
var mapWithSeparator=require('mapWithSeparator');

var ElementProperties=React.createClass({displayName:'ElementProperties', 
propTypes:{
hierarchy:PropTypes.array.isRequired, 
style:PropTypes.array.isRequired}, 


render:function(){var _this=this;
var style=flattenStyle(this.props.style);
var selection=this.props.selection;


return (
React.createElement(TouchableWithoutFeedback, null, 
React.createElement(View, {style:styles.info}, 
React.createElement(View, {style:styles.breadcrumb}, 
mapWithSeparator(
this.props.hierarchy, 
function(item, i){return (
React.createElement(TouchableHighlight, {
style:[styles.breadItem, i === selection && styles.selected], 
onPress:function(){return _this.props.setSelection(i);}}, 
React.createElement(Text, {style:styles.breadItemText}, 
item.getName?item.getName():'Unknown')));}, 



function(){return React.createElement(Text, {style:styles.breadSep}, '▸');})), 


React.createElement(View, {style:styles.row}, 
React.createElement(StyleInspector, {style:style}), 
React.createElement(BoxInspector, {style:style, frame:this.props.frame})))));}});







var styles=StyleSheet.create({
breadSep:{
fontSize:8, 
color:'white'}, 

breadcrumb:{
flexDirection:'row', 
flexWrap:'wrap', 
marginBottom:5}, 

selected:{
borderColor:'white', 
borderRadius:5}, 

breadItem:{
borderWidth:1, 
borderColor:'transparent', 
marginHorizontal:2}, 

breadItemText:{
fontSize:10, 
color:'white', 
marginHorizontal:5}, 

row:{
flexDirection:'row', 
alignItems:'center', 
justifyContent:'space-between'}, 

info:{
backgroundColor:'rgba(0, 0, 0, 0.7)', 
padding:10}, 

path:{
color:'white', 
fontSize:9}});



module.exports = ElementProperties;});
__d('BoxInspector',["React","StyleSheet","Text","View","resolveBoxStyle"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');
var resolveBoxStyle=require('resolveBoxStyle');

var blank={
top:0, 
left:0, 
right:0, 
bottom:0};var 


BoxInspector=(function(_React$Component){function BoxInspector(){_classCallCheck(this, BoxInspector);if(_React$Component != null){_React$Component.apply(this, arguments);}}_inherits(BoxInspector, _React$Component);_createClass(BoxInspector, [{key:'render', value:
function render(){
var frame=this.props.frame;
var style=this.props.style;
var margin=style && resolveBoxStyle('margin', style) || blank;
var padding=style && resolveBoxStyle('padding', style) || blank;
return (
React.createElement(BoxContainer, {title:'margin', titleStyle:styles.marginLabel, box:margin}, 
React.createElement(BoxContainer, {title:'padding', box:padding}, 
React.createElement(View, null, 
React.createElement(Text, {style:styles.innerText}, '(', 
frame.left, ', ', frame.top, ')'), 

React.createElement(Text, {style:styles.innerText}, 
frame.width, ' × ', frame.height)))));}}]);return BoxInspector;})(React.Component);var 








BoxContainer=(function(_React$Component2){function BoxContainer(){_classCallCheck(this, BoxContainer);if(_React$Component2 != null){_React$Component2.apply(this, arguments);}}_inherits(BoxContainer, _React$Component2);_createClass(BoxContainer, [{key:'render', value:
function render(){
var box=this.props.box;
return (
React.createElement(View, {style:styles.box}, 
React.createElement(View, {style:styles.row}, 
React.createElement(Text, {style:[this.props.titleStyle, styles.label]}, this.props.title), 
React.createElement(Text, {style:styles.boxText}, box.top)), 

React.createElement(View, {style:styles.row}, 
React.createElement(Text, {style:styles.boxText}, box.left), 
this.props.children, 
React.createElement(Text, {style:styles.boxText}, box.right)), 

React.createElement(Text, {style:styles.boxText}, box.bottom)));}}]);return BoxContainer;})(React.Component);





var styles=StyleSheet.create({
row:{
flexDirection:'row', 
alignItems:'center', 
justifyContent:'space-around'}, 

marginLabel:{
width:60}, 

label:{
fontSize:10, 
color:'rgb(255,100,0)', 
marginLeft:5, 
flex:1, 
textAlign:'left', 
top:-3}, 

buffer:{
fontSize:10, 
color:'yellow', 
flex:1, 
textAlign:'center'}, 

innerText:{
color:'yellow', 
fontSize:12, 
textAlign:'center', 
width:70}, 

box:{
borderWidth:1, 
borderColor:'grey'}, 

boxText:{
color:'white', 
fontSize:12, 
marginHorizontal:3, 
marginVertical:2, 
textAlign:'center'}});



module.exports = BoxInspector;});
__d('StyleInspector',["React","StyleSheet","Text","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');var 

StyleInspector=(function(_React$Component){function StyleInspector(){_classCallCheck(this, StyleInspector);if(_React$Component != null){_React$Component.apply(this, arguments);}}_inherits(StyleInspector, _React$Component);_createClass(StyleInspector, [{key:'render', value:
function render(){var _this=this;
if(!this.props.style){
return React.createElement(Text, {style:styles.noStyle}, 'No style');}

var names=Object.keys(this.props.style);
return (
React.createElement(View, {style:styles.container}, 
React.createElement(View, null, 
names.map(function(name){return React.createElement(Text, {style:styles.attr}, name, ':');})), 

React.createElement(View, null, 
names.map(function(name){return React.createElement(Text, {style:styles.value}, _this.props.style[name]);}))));}}]);return StyleInspector;})(React.Component);






var styles=StyleSheet.create({
container:{
flexDirection:'row'}, 

row:{
flexDirection:'row', 
alignItems:'center', 
justifyContent:'space-around'}, 

attr:{
fontSize:10, 
color:'#ccc'}, 

value:{
fontSize:10, 
color:'white', 
marginLeft:10}, 

noStyle:{
color:'white', 
fontSize:10}});



module.exports = StyleInspector;});
__d('mapWithSeparator',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






function mapWithSeparator(array, valueFunction, separatorFunction){
var results=[];
for(var i=0; i < array.length; i++) {
results.push(valueFunction(array[i], i, array));
if(i !== array.length - 1){
results.push(separatorFunction(i));}}


return results;}


module.exports = mapWithSeparator;});
__d('WarningBox',["AsyncStorage","EventEmitter","Map","PanResponder","React","StyleSheet","Text","TouchableOpacity","View","invariant","rebound/rebound","stringifySafe","Dimensions"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};











var AsyncStorage=require('AsyncStorage');
var EventEmitter=require('EventEmitter');
var Map=require('Map');
var PanResponder=require('PanResponder');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TouchableOpacity=require('TouchableOpacity');
var View=require('View');

var invariant=require('invariant');
var rebound=require('rebound/rebound');
var stringifySafe=require('stringifySafe');

var SCREEN_WIDTH=require('Dimensions').get('window').width;
var IGNORED_WARNINGS_KEY='__DEV_WARNINGS_IGNORED';

var consoleWarn=console.warn.bind(console);

var warningCounts=new Map();
var ignoredWarnings=[];
var totalWarningCount=0;
var warningCountEvents=new EventEmitter();























if(__DEV__){
console.warn = function(){
consoleWarn.apply(null, arguments);
if(!console.yellowBoxEnabled){
return;}

var warning=Array.prototype.map.call(arguments, stringifySafe).join(' ');
if(!console.yellowBoxResetIgnored && 
ignoredWarnings.indexOf(warning) !== -1){
return;}

var count=warningCounts.has(warning)?warningCounts.get(warning) + 1:1;
warningCounts.set(warning, count);
totalWarningCount += 1;
warningCountEvents.emit('count', totalWarningCount);};}



function saveIgnoredWarnings(){
AsyncStorage.setItem(
IGNORED_WARNINGS_KEY, 
JSON.stringify(ignoredWarnings), 
function(err){
if(err){
console.warn('Could not save ignored warnings.', err);}});}





AsyncStorage.getItem(IGNORED_WARNINGS_KEY, function(err, data){
if(!err && data && !console.yellowBoxResetIgnored){
ignoredWarnings = JSON.parse(data);}});



var WarningRow=React.createClass({displayName:'WarningRow', 
componentWillMount:function(){var _this=this;
this.springSystem = new rebound.SpringSystem();
this.dismissalSpring = this.springSystem.createSpring();
this.dismissalSpring.setRestSpeedThreshold(0.05);
this.dismissalSpring.setCurrentValue(0);
this.dismissalSpring.addListener({
onSpringUpdate:function(){
var val=_this.dismissalSpring.getCurrentValue();
_this.text && _this.text.setNativeProps({
left:SCREEN_WIDTH * val});

_this.container && _this.container.setNativeProps({
opacity:1 - val});

_this.closeButton && _this.closeButton.setNativeProps({
opacity:1 - val * 5});}, 


onSpringAtRest:function(){
if(_this.dismissalSpring.getCurrentValue()){
_this.collapseSpring.setEndValue(1);}}});



this.collapseSpring = this.springSystem.createSpring();
this.collapseSpring.setRestSpeedThreshold(0.05);
this.collapseSpring.setCurrentValue(0);
this.collapseSpring.getSpringConfig().friction = 20;
this.collapseSpring.getSpringConfig().tension = 200;
this.collapseSpring.addListener({
onSpringUpdate:function(){
var val=_this.collapseSpring.getCurrentValue();
_this.container && _this.container.setNativeProps({
height:Math.abs(46 - val * 46)});}, 


onSpringAtRest:function(){
_this.props.onDismissed();}});


this.panGesture = PanResponder.create({
onStartShouldSetPanResponder:function(){
return !!_this.dismissalSpring.getCurrentValue();}, 

onMoveShouldSetPanResponder:function(){return true;}, 
onPanResponderGrant:function(){
_this.isResponderOnlyToBlockTouches = 
!!_this.dismissalSpring.getCurrentValue();}, 

onPanResponderMove:function(e, gestureState){
if(_this.isResponderOnlyToBlockTouches){
return;}

_this.dismissalSpring.setCurrentValue(gestureState.dx / SCREEN_WIDTH);}, 

onPanResponderRelease:function(e, gestureState){
if(_this.isResponderOnlyToBlockTouches){
return;}

var gestureCompletion=gestureState.dx / SCREEN_WIDTH;
var doesGestureRelease=gestureState.vx + gestureCompletion > 0.5;
_this.dismissalSpring.setEndValue(doesGestureRelease?1:0);}});}, 



render:function(){var _this2=this;
var countText;
if(warningCounts.get(this.props.warning) > 1){
countText = 
React.createElement(Text, {style:styles.bold}, '(', 
warningCounts.get(this.props.warning), ')', ' ');}



return (
React.createElement(View, _extends({
style:styles.warningBox, 
ref:function(container){_this2.container = container;}}, 
this.panGesture.panHandlers), 
React.createElement(TouchableOpacity, {
onPress:this.props.onOpened}, 
React.createElement(View, null, 
React.createElement(Text, {
style:styles.warningText, 
numberOfLines:2, 
ref:function(text){_this2.text = text;}}, 
countText, 
this.props.warning))), 



React.createElement(View, {
ref:function(closeButton){_this2.closeButton = closeButton;}, 
style:styles.closeButton}, 
React.createElement(TouchableOpacity, {
onPress:function(){
_this2.dismissalSpring.setEndValue(1);}}, 

React.createElement(Text, {style:styles.closeButtonText}, '✕')))));}});







var WarningBoxOpened=React.createClass({displayName:'WarningBoxOpened', 
render:function(){
var countText;
if(warningCounts.get(this.props.warning) > 1){
countText = 
React.createElement(Text, {style:styles.bold}, '(', 
warningCounts.get(this.props.warning), ')', ' ');}



return (
React.createElement(TouchableOpacity, {
activeOpacity:0.9, 
onPress:this.props.onClose}, 
React.createElement(View, {style:styles.yellowBox}, 
React.createElement(Text, {style:styles.yellowBoxText}, 
countText, 
this.props.warning), 

React.createElement(View, {style:styles.yellowBoxButtons}, 
React.createElement(View, {style:styles.yellowBoxButton}, 
React.createElement(TouchableOpacity, {
onPress:this.props.onDismissed}, 
React.createElement(Text, {style:styles.yellowBoxButtonText}, 'Dismiss'))), 




React.createElement(View, {style:styles.yellowBoxButton}, 
React.createElement(TouchableOpacity, {
onPress:this.props.onIgnored}, 
React.createElement(Text, {style:styles.yellowBoxButtonText}, 'Ignore')))))));}});











var canMountWarningBox=true;

var WarningBox=React.createClass({displayName:'WarningBox', 
getInitialState:function(){
return {
totalWarningCount:totalWarningCount, 
openWarning:null};}, 


componentWillMount:function(){
if(console.yellowBoxResetIgnored){
AsyncStorage.setItem(IGNORED_WARNINGS_KEY, '[]', function(err){
if(err){
console.warn('Could not reset ignored warnings.', err);}});


ignoredWarnings = [];}}, 


componentDidMount:function(){
invariant(
canMountWarningBox, 
'There can only be one WarningBox');

canMountWarningBox = false;
warningCountEvents.addListener(
'count', 
this._onWarningCount);}, 


componentWillUnmount:function(){
warningCountEvents.removeAllListeners();
canMountWarningBox = true;}, 

_onWarningCount:function(totalWarningCount){var _this3=this;


setImmediate(function(){
_this3.setState({totalWarningCount:totalWarningCount});});}, 


_onDismiss:function(warning){
warningCounts.delete(warning);
this.setState({
openWarning:null});}, 


render:function(){var _this4=this;
if(warningCounts.size === 0){
return React.createElement(View, null);}

if(this.state.openWarning){
return (
React.createElement(WarningBoxOpened, {
warning:this.state.openWarning, 
onClose:function(){
_this4.setState({openWarning:null});}, 

onDismissed:this._onDismiss.bind(this, this.state.openWarning), 
onIgnored:function(){
ignoredWarnings.push(_this4.state.openWarning);
saveIgnoredWarnings();
_this4._onDismiss(_this4.state.openWarning);}}));}




var warningRows=[];
warningCounts.forEach(function(count, warning){
warningRows.push(
React.createElement(WarningRow, {
key:warning, 
onOpened:function(){
_this4.setState({openWarning:warning});}, 

onDismissed:_this4._onDismiss.bind(_this4, warning), 
warning:warning}));});



return (
React.createElement(View, {style:styles.warningContainer}, 
warningRows));}});





var styles=StyleSheet.create({
bold:{
fontWeight:'bold'}, 

closeButton:{
position:'absolute', 
right:0, 
height:46, 
width:46}, 

closeButtonText:{
color:'white', 
fontSize:32, 
position:'relative', 
left:8}, 

warningContainer:{
position:'absolute', 
left:0, 
right:0, 
bottom:0}, 

warningBox:{
position:'relative', 
backgroundColor:'rgba(171, 124, 36, 0.9)', 
flex:1, 
height:46}, 

warningText:{
color:'white', 
position:'absolute', 
left:0, 
marginLeft:15, 
marginRight:46, 
top:7}, 

yellowBox:{
backgroundColor:'rgba(171, 124, 36, 0.9)', 
position:'absolute', 
left:0, 
right:0, 
top:0, 
bottom:0, 
padding:15, 
paddingTop:35}, 

yellowBoxText:{
color:'white', 
fontSize:20}, 

yellowBoxButtons:{
flexDirection:'row', 
position:'absolute', 
bottom:0}, 

yellowBoxButton:{
flex:1, 
padding:25}, 

yellowBoxButtonText:{
color:'white', 
fontSize:16}});



module.exports = WarningBox;});
__d('AsyncStorage',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTAsyncLocalStorage=NativeModules.AsyncLocalStorage;
var RCTAsyncRocksDBStorage=NativeModules.AsyncRocksDBStorage;


var RCTAsyncStorage=RCTAsyncRocksDBStorage || RCTAsyncLocalStorage;













var AsyncStorage={




getItem:function(
key, 
callback)
{
return new Promise(function(resolve, reject){
RCTAsyncStorage.multiGet([key], function(errors, result){

var value=result && result[0] && result[0][1]?result[0][1]:null;
callback && callback(errors && convertError(errors[0]) || null, value);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(value);}});});}, 









setItem:function(
key, 
value, 
callback)
{
return new Promise(function(resolve, reject){
RCTAsyncStorage.multiSet([[key, value]], function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});}, 







removeItem:function(
key, 
callback)
{
return new Promise(function(resolve, reject){
RCTAsyncStorage.multiRemove([key], function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});}, 










mergeItem:function(
key, 
value, 
callback)
{
return new Promise(function(resolve, reject){
RCTAsyncStorage.multiMerge([[key, value]], function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});}, 










clear:function(callback){
return new Promise(function(resolve, reject){
RCTAsyncStorage.clear(function(error){
callback && callback(convertError(error));
if(error && convertError(error)){
reject(convertError(error));}else 
{
resolve(null);}});});}, 








getAllKeys:function(callback){
return new Promise(function(resolve, reject){
RCTAsyncStorage.getAllKeys(function(error, keys){
callback && callback(convertError(error), keys);
if(error){
reject(convertError(error));}else 
{
resolve(keys);}});});}, 





















multiGet:function(
keys, 
callback)
{
return new Promise(function(resolve, reject){
RCTAsyncStorage.multiGet(keys, function(errors, result){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error, result);
if(errors){
reject(error);}else 
{
resolve(result);}});});}, 











multiSet:function(
keyValuePairs, 
callback)
{
return new Promise(function(resolve, reject){
RCTAsyncStorage.multiSet(keyValuePairs, function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});}, 








multiRemove:function(
keys, 
callback)
{
return new Promise(function(resolve, reject){
RCTAsyncStorage.multiRemove(keys, function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});}, 











multiMerge:function(
keyValuePairs, 
callback)
{
return new Promise(function(resolve, reject){
RCTAsyncStorage.multiMerge(keyValuePairs, function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});}};







if(!RCTAsyncStorage.multiMerge){
delete AsyncStorage.mergeItem;
delete AsyncStorage.multiMerge;}


function convertError(error){
if(!error){
return null;}

var out=new Error(error.message);
out.key = error.key;
return out;}


module.exports = AsyncStorage;});
__d('RCTRenderingPerf',["ReactDefaultPerf","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactDefaultPerf=require('ReactDefaultPerf');

var invariant=require('invariant');






var perfModules=[];
var enabled=false;

var RCTRenderingPerf={

toggle:function(){
console.log('Render perfomance measurements enabled');
enabled = true;}, 


start:function(){
if(!enabled){
return;}


ReactDefaultPerf.start();
perfModules.forEach(function(module){return module.start();});}, 


stop:function(){
if(!enabled){
return;}


ReactDefaultPerf.stop();
ReactDefaultPerf.printInclusive();
ReactDefaultPerf.printWasted();

var totalRender=0;
var totalTime=0;
var measurements=ReactDefaultPerf.getLastMeasurements();
for(var ii=0; ii < measurements.length; ii++) {
var render=measurements[ii].render;
for(var nodeName in render) {
totalRender += render[nodeName];}

totalTime += measurements[ii].totalTime;}

console.log('Total time spent in render(): ' + totalRender + 'ms');

perfModules.forEach(function(module){return module.stop();});}, 


register:function(module){
invariant(
typeof module.start === 'function', 
'Perf module should have start() function');

invariant(
typeof module.stop === 'function', 
'Perf module should have stop() function');

perfModules.push(module);}};



module.exports = RCTRenderingPerf;});
__d('ReactDefaultPerf',["DOMProperty","ReactDefaultPerfAnalysis","ReactMount","ReactPerf","performanceNow"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var DOMProperty=require('DOMProperty');
var ReactDefaultPerfAnalysis=require('ReactDefaultPerfAnalysis');
var ReactMount=require('ReactMount');
var ReactPerf=require('ReactPerf');

var performanceNow=require('performanceNow');

function roundFloat(val){
return Math.floor(val * 100) / 100;}


function addValue(obj, key, val){
obj[key] = (obj[key] || 0) + val;}


var ReactDefaultPerf={
_allMeasurements:[], 
_mountStack:[0], 
_injected:false, 

start:function(){
if(!ReactDefaultPerf._injected){
ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);}


ReactDefaultPerf._allMeasurements.length = 0;
ReactPerf.enableMeasure = true;}, 


stop:function(){
ReactPerf.enableMeasure = false;}, 


getLastMeasurements:function(){
return ReactDefaultPerf._allMeasurements;}, 


printExclusive:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
console.table(summary.map(function(item){
return {
'Component class name':item.componentName, 
'Total inclusive time (ms)':roundFloat(item.inclusive), 
'Exclusive mount time (ms)':roundFloat(item.exclusive), 
'Exclusive render time (ms)':roundFloat(item.render), 
'Mount time per instance (ms)':roundFloat(item.exclusive / item.count), 
'Render time per instance (ms)':roundFloat(item.render / item.count), 
'Instances':item.count};}));}, 






printInclusive:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
console.table(summary.map(function(item){
return {
'Owner > component':item.componentName, 
'Inclusive time (ms)':roundFloat(item.time), 
'Instances':item.count};}));


console.log(
'Total time:', 
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');}, 



getMeasurementsSummaryMap:function(measurements){
var summary=ReactDefaultPerfAnalysis.getInclusiveSummary(
measurements, 
true);

return summary.map(function(item){
return {
'Owner > component':item.componentName, 
'Wasted time (ms)':item.time, 
'Instances':item.count};});}, 




printWasted:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
console.log(
'Total time:', 
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');}, 



printDOM:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getDOMSummary(measurements);
console.table(summary.map(function(item){
var result={};
result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
result['type'] = item.type;
result['args'] = JSON.stringify(item.args);
return result;}));

console.log(
'Total time:', 
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');}, 



_recordWrite:function(id, fnName, totalTime, args){

var writes=
ReactDefaultPerf.
_allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].
writes;
writes[id] = writes[id] || [];
writes[id].push({
type:fnName, 
time:totalTime, 
args:args});}, 



measure:function(moduleName, fnName, func){
return function(){for(var _len=arguments.length, args=Array(_len), _key=0; _key < _len; _key++) {args[_key] = arguments[_key];}
var totalTime;
var rv;
var start;

if(fnName === '_renderNewRootComponent' || 
fnName === 'flushBatchedUpdates'){




ReactDefaultPerf._allMeasurements.push({
exclusive:{}, 
inclusive:{}, 
render:{}, 
counts:{}, 
writes:{}, 
displayNames:{}, 
totalTime:0});

start = performanceNow();
rv = func.apply(this, args);
ReactDefaultPerf._allMeasurements[
ReactDefaultPerf._allMeasurements.length - 1].
totalTime = performanceNow() - start;
return rv;}else 
if(fnName === '_mountImageIntoNode' || 
moduleName === 'ReactDOMIDOperations'){
start = performanceNow();
rv = func.apply(this, args);
totalTime = performanceNow() - start;

if(fnName === '_mountImageIntoNode'){
var mountID=ReactMount.getID(args[1]);
ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);}else 
if(fnName === 'dangerouslyProcessChildrenUpdates'){

args[0].forEach(function(update){
var writeArgs={};
if(update.fromIndex !== null){
writeArgs.fromIndex = update.fromIndex;}

if(update.toIndex !== null){
writeArgs.toIndex = update.toIndex;}

if(update.textContent !== null){
writeArgs.textContent = update.textContent;}

if(update.markupIndex !== null){
writeArgs.markup = args[1][update.markupIndex];}

ReactDefaultPerf._recordWrite(
update.parentID, 
update.type, 
totalTime, 
writeArgs);});}else 


{

ReactDefaultPerf._recordWrite(
args[0], 
fnName, 
totalTime, 
Array.prototype.slice.call(args, 1));}


return rv;}else 
if(moduleName === 'ReactCompositeComponent' && (
fnName === 'mountComponent' || 
fnName === 'updateComponent' || 
fnName === '_renderValidatedComponent')){

if(typeof this._currentElement.type === 'string'){
return func.apply(this, args);}


var rootNodeID=fnName === 'mountComponent'?
args[0]:
this._rootNodeID;
var isRender=fnName === '_renderValidatedComponent';
var isMount=fnName === 'mountComponent';

var mountStack=ReactDefaultPerf._mountStack;
var entry=ReactDefaultPerf._allMeasurements[
ReactDefaultPerf._allMeasurements.length - 1];


if(isRender){
addValue(entry.counts, rootNodeID, 1);}else 
if(isMount){
mountStack.push(0);}


start = performanceNow();
rv = func.apply(this, args);
totalTime = performanceNow() - start;

if(isRender){
addValue(entry.render, rootNodeID, totalTime);}else 
if(isMount){
var subMountTime=mountStack.pop();
mountStack[mountStack.length - 1] += totalTime;
addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
addValue(entry.inclusive, rootNodeID, totalTime);}else 
{
addValue(entry.inclusive, rootNodeID, totalTime);}


entry.displayNames[rootNodeID] = {
current:this.getName(), 
owner:this._currentElement._owner?
this._currentElement._owner.getName():
'<root>'};


return rv;}else 
{
return func.apply(this, args);}};}};





module.exports = ReactDefaultPerf;});
__d('DOMProperty',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';















var invariant=require('invariant');

function checkMask(value, bitmask){
return (value & bitmask) === bitmask;}


var DOMPropertyInjection={




MUST_USE_ATTRIBUTE:1, 
MUST_USE_PROPERTY:2, 
HAS_SIDE_EFFECTS:4, 
HAS_BOOLEAN_VALUE:8, 
HAS_NUMERIC_VALUE:16, 
HAS_POSITIVE_NUMERIC_VALUE:32 | 16, 
HAS_OVERLOADED_BOOLEAN_VALUE:64, 


























injectDOMPropertyConfig:function(domPropertyConfig){
var Properties=domPropertyConfig.Properties || {};
var DOMAttributeNames=domPropertyConfig.DOMAttributeNames || {};
var DOMPropertyNames=domPropertyConfig.DOMPropertyNames || {};
var DOMMutationMethods=domPropertyConfig.DOMMutationMethods || {};

if(domPropertyConfig.isCustomAttribute){
DOMProperty._isCustomAttributeFunctions.push(
domPropertyConfig.isCustomAttribute);}



for(var propName in Properties) {
invariant(
!DOMProperty.isStandardName.hasOwnProperty(propName), 
'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + 
'\'%s\' which has already been injected. You may be accidentally ' + 
'injecting the same DOM property config twice, or you may be ' + 
'injecting two configs that have conflicting property names.', 
propName);


DOMProperty.isStandardName[propName] = true;

var lowerCased=propName.toLowerCase();
DOMProperty.getPossibleStandardName[lowerCased] = propName;

if(DOMAttributeNames.hasOwnProperty(propName)){
var attributeName=DOMAttributeNames[propName];
DOMProperty.getPossibleStandardName[attributeName] = propName;
DOMProperty.getAttributeName[propName] = attributeName;}else 
{
DOMProperty.getAttributeName[propName] = lowerCased;}


DOMProperty.getPropertyName[propName] = 
DOMPropertyNames.hasOwnProperty(propName)?
DOMPropertyNames[propName]:
propName;

if(DOMMutationMethods.hasOwnProperty(propName)){
DOMProperty.getMutationMethod[propName] = DOMMutationMethods[propName];}else 
{
DOMProperty.getMutationMethod[propName] = null;}


var propConfig=Properties[propName];
DOMProperty.mustUseAttribute[propName] = 
checkMask(propConfig, DOMPropertyInjection.MUST_USE_ATTRIBUTE);
DOMProperty.mustUseProperty[propName] = 
checkMask(propConfig, DOMPropertyInjection.MUST_USE_PROPERTY);
DOMProperty.hasSideEffects[propName] = 
checkMask(propConfig, DOMPropertyInjection.HAS_SIDE_EFFECTS);
DOMProperty.hasBooleanValue[propName] = 
checkMask(propConfig, DOMPropertyInjection.HAS_BOOLEAN_VALUE);
DOMProperty.hasNumericValue[propName] = 
checkMask(propConfig, DOMPropertyInjection.HAS_NUMERIC_VALUE);
DOMProperty.hasPositiveNumericValue[propName] = 
checkMask(propConfig, DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE);
DOMProperty.hasOverloadedBooleanValue[propName] = 
checkMask(propConfig, DOMPropertyInjection.HAS_OVERLOADED_BOOLEAN_VALUE);

invariant(
!DOMProperty.mustUseAttribute[propName] || 
!DOMProperty.mustUseProperty[propName], 
'DOMProperty: Cannot require using both attribute and property: %s', 
propName);

invariant(
DOMProperty.mustUseProperty[propName] || 
!DOMProperty.hasSideEffects[propName], 
'DOMProperty: Properties that have side effects must use property: %s', 
propName);

invariant(
!!DOMProperty.hasBooleanValue[propName] + 
!!DOMProperty.hasNumericValue[propName] + 
!!DOMProperty.hasOverloadedBooleanValue[propName] <= 1, 
'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 
'numeric value, but not a combination: %s', 
propName);}}};




var defaultValueCache={};














var DOMProperty={

ID_ATTRIBUTE_NAME:'data-reactid', 





isStandardName:{}, 






getPossibleStandardName:{}, 






getAttributeName:{}, 






getPropertyName:{}, 






getMutationMethod:{}, 





mustUseAttribute:{}, 






mustUseProperty:{}, 







hasSideEffects:{}, 





hasBooleanValue:{}, 






hasNumericValue:{}, 






hasPositiveNumericValue:{}, 







hasOverloadedBooleanValue:{}, 




_isCustomAttributeFunctions:[], 





isCustomAttribute:function(attributeName){
for(var i=0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
var isCustomAttributeFn=DOMProperty._isCustomAttributeFunctions[i];
if(isCustomAttributeFn(attributeName)){
return true;}}


return false;}, 










getDefaultValueForProperty:function(nodeName, prop){
var nodeDefaults=defaultValueCache[nodeName];
var testElement;
if(!nodeDefaults){
defaultValueCache[nodeName] = nodeDefaults = {};}

if(!(prop in nodeDefaults)){
testElement = document.createElement(nodeName);
nodeDefaults[prop] = testElement[prop];}

return nodeDefaults[prop];}, 


injection:DOMPropertyInjection};


module.exports = DOMProperty;});
__d('ReactDefaultPerfAnalysis',["Object.assign"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










assign=require('Object.assign');


var DONT_CARE_THRESHOLD=1.2;
var DOM_OPERATION_TYPES={
'_mountImageIntoNode':'set innerHTML', 
INSERT_MARKUP:'set innerHTML', 
MOVE_EXISTING:'move', 
REMOVE_NODE:'remove', 
TEXT_CONTENT:'set textContent', 
'updatePropertyByID':'update attribute', 
'deletePropertyByID':'delete attribute', 
'updateStylesByID':'update styles', 
'updateInnerHTMLByID':'set innerHTML', 
'dangerouslyReplaceNodeWithMarkupByID':'replace'};


function getTotalTime(measurements){




var totalTime=0;
for(var i=0; i < measurements.length; i++) {
var measurement=measurements[i];
totalTime += measurement.totalTime;}

return totalTime;}


function getDOMSummary(measurements){
var items=[];
for(var i=0; i < measurements.length; i++) {
var measurement=measurements[i];
var id;

for(id in measurement.writes) {
measurement.writes[id].forEach(function(write){
items.push({
id:id, 
type:DOM_OPERATION_TYPES[write.type] || write.type, 
args:write.args});});}}




return items;}


function getExclusiveSummary(measurements){
var candidates={};
var displayName;

for(var i=0; i < measurements.length; i++) {
var measurement=measurements[i];
var allIDs=assign(
{}, 
measurement.exclusive, 
measurement.inclusive);


for(var id in allIDs) {
displayName = measurement.displayNames[id].current;

candidates[displayName] = candidates[displayName] || {
componentName:displayName, 
inclusive:0, 
exclusive:0, 
render:0, 
count:0};

if(measurement.render[id]){
candidates[displayName].render += measurement.render[id];}

if(measurement.exclusive[id]){
candidates[displayName].exclusive += measurement.exclusive[id];}

if(measurement.inclusive[id]){
candidates[displayName].inclusive += measurement.inclusive[id];}

if(measurement.counts[id]){
candidates[displayName].count += measurement.counts[id];}}}





var arr=[];
for(displayName in candidates) {
if(candidates[displayName].exclusive >= DONT_CARE_THRESHOLD){
arr.push(candidates[displayName]);}}



arr.sort(function(a, b){
return b.exclusive - a.exclusive;});


return arr;}


function getInclusiveSummary(measurements, onlyClean){
var candidates={};
var inclusiveKey;

for(var i=0; i < measurements.length; i++) {
var measurement=measurements[i];
var allIDs=assign(
{}, 
measurement.exclusive, 
measurement.inclusive);

var cleanComponents;

if(onlyClean){
cleanComponents = getUnchangedComponents(measurement);}


for(var id in allIDs) {
if(onlyClean && !cleanComponents[id]){
continue;}


var displayName=measurement.displayNames[id];




inclusiveKey = displayName.owner + ' > ' + displayName.current;

candidates[inclusiveKey] = candidates[inclusiveKey] || {
componentName:inclusiveKey, 
time:0, 
count:0};


if(measurement.inclusive[id]){
candidates[inclusiveKey].time += measurement.inclusive[id];}

if(measurement.counts[id]){
candidates[inclusiveKey].count += measurement.counts[id];}}}





var arr=[];
for(inclusiveKey in candidates) {
if(candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD){
arr.push(candidates[inclusiveKey]);}}



arr.sort(function(a, b){
return b.time - a.time;});


return arr;}


function getUnchangedComponents(measurement){



var cleanComponents={};
var dirtyLeafIDs=Object.keys(measurement.writes);
var allIDs=assign({}, measurement.exclusive, measurement.inclusive);

for(var id in allIDs) {
var isDirty=false;


for(var i=0; i < dirtyLeafIDs.length; i++) {
if(dirtyLeafIDs[i].indexOf(id) === 0){
isDirty = true;
break;}}


if(!isDirty && measurement.counts[id] > 0){
cleanComponents[id] = true;}}


return cleanComponents;}


var ReactDefaultPerfAnalysis={
getExclusiveSummary:getExclusiveSummary, 
getInclusiveSummary:getInclusiveSummary, 
getDOMSummary:getDOMSummary, 
getTotalTime:getTotalTime};


module.exports = ReactDefaultPerfAnalysis;});
__d('ReactMount',["DOMProperty","ReactBrowserEventEmitter","ReactCurrentOwner","ReactElement","ReactElementValidator","ReactEmptyComponent","ReactInstanceHandles","ReactInstanceMap","ReactMarkupChecksum","ReactPerf","ReactReconciler","ReactUpdateQueue","ReactUpdates","emptyObject","containsNode","getReactRootElementInContainer","instantiateReactComponent","invariant","setInnerHTML","shouldUpdateReactComponent","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var DOMProperty=require('DOMProperty');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactElementValidator=require('ReactElementValidator');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMarkupChecksum=require('ReactMarkupChecksum');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');
var ReactUpdates=require('ReactUpdates');

var emptyObject=require('emptyObject');
var containsNode=require('containsNode');
var getReactRootElementInContainer=require('getReactRootElementInContainer');
var instantiateReactComponent=require('instantiateReactComponent');
var invariant=require('invariant');
var setInnerHTML=require('setInnerHTML');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var warning=require('warning');

var SEPARATOR=ReactInstanceHandles.SEPARATOR;

var ATTR_NAME=DOMProperty.ID_ATTRIBUTE_NAME;
var nodeCache={};

var ELEMENT_NODE_TYPE=1;
var DOC_NODE_TYPE=9;


var instancesByReactRootID={};


var containersByReactRootID={};

if(__DEV__){

var rootElementsByReactRootID={};}



var findComponentRootReusableArray=[];







function firstDifferenceIndex(string1, string2){
var minLen=Math.min(string1.length, string2.length);
for(var i=0; i < minLen; i++) {
if(string1.charAt(i) !== string2.charAt(i)){
return i;}}


return string1.length === string2.length?-1:minLen;}






function getReactRootID(container){
var rootElement=getReactRootElementInContainer(container);
return rootElement && ReactMount.getID(rootElement);}












function getID(node){
var id=internalGetID(node);
if(id){
if(nodeCache.hasOwnProperty(id)){
var cached=nodeCache[id];
if(cached !== node){
invariant(
!isValid(cached, id), 
'ReactMount: Two valid but unequal nodes with the same `%s`: %s', 
ATTR_NAME, id);


nodeCache[id] = node;}}else 

{
nodeCache[id] = node;}}



return id;}


function internalGetID(node){



return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';}








function setID(node, id){
var oldID=internalGetID(node);
if(oldID !== id){
delete nodeCache[oldID];}

node.setAttribute(ATTR_NAME, id);
nodeCache[id] = node;}









function getNode(id){
if(!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)){
nodeCache[id] = ReactMount.findReactNodeByID(id);}

return nodeCache[id];}









function getNodeFromInstance(instance){
var id=ReactInstanceMap.get(instance)._rootNodeID;
if(ReactEmptyComponent.isNullComponentID(id)){
return null;}

if(!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)){
nodeCache[id] = ReactMount.findReactNodeByID(id);}

return nodeCache[id];}












function isValid(node, id){
if(node){
invariant(
internalGetID(node) === id, 
'ReactMount: Unexpected modification of `%s`', 
ATTR_NAME);


var container=ReactMount.findReactContainerForID(id);
if(container && containsNode(container, node)){
return true;}}



return false;}







function purgeID(id){
delete nodeCache[id];}


var deepestNodeSoFar=null;
function findDeepestCachedAncestorImpl(ancestorID){
var ancestor=nodeCache[ancestorID];
if(ancestor && isValid(ancestor, ancestorID)){
deepestNodeSoFar = ancestor;}else 
{


return false;}}






function findDeepestCachedAncestor(targetID){
deepestNodeSoFar = null;
ReactInstanceHandles.traverseAncestors(
targetID, 
findDeepestCachedAncestorImpl);


var foundNode=deepestNodeSoFar;
deepestNodeSoFar = null;
return foundNode;}











function mountComponentIntoNode(
componentInstance, 
rootID, 
container, 
transaction, 
shouldReuseMarkup){
var markup=ReactReconciler.mountComponent(
componentInstance, rootID, transaction, emptyObject);

componentInstance._isTopLevel = true;
ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup);}










function batchedMountComponentIntoNode(
componentInstance, 
rootID, 
container, 
shouldReuseMarkup){
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
transaction.perform(
mountComponentIntoNode, 
null, 
componentInstance, 
rootID, 
container, 
transaction, 
shouldReuseMarkup);

ReactUpdates.ReactReconcileTransaction.release(transaction);}




















var ReactMount={

_instancesByReactRootID:instancesByReactRootID, 









scrollMonitor:function(container, renderCallback){
renderCallback();}, 









_updateRootComponent:function(
prevComponent, 
nextElement, 
container, 
callback){
if(__DEV__){
ReactElementValidator.checkAndWarnForMutatedProps(nextElement);}


ReactMount.scrollMonitor(container, function(){
ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
if(callback){
ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);}});



if(__DEV__){

rootElementsByReactRootID[getReactRootID(container)] = 
getReactRootElementInContainer(container);}


return prevComponent;}, 









_registerComponent:function(nextComponent, container){
invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE), 

'_registerComponent(...): Target container is not a DOM element.');


ReactBrowserEventEmitter.ensureScrollValueMonitoring();

var reactRootID=ReactMount.registerContainer(container);
instancesByReactRootID[reactRootID] = nextComponent;
return reactRootID;}, 









_renderNewRootComponent:function(
nextElement, 
container, 
shouldReuseMarkup)
{



warning(
ReactCurrentOwner.current == null, 
'_renderNewRootComponent(): Render methods should be a pure function ' + 
'of props and state; triggering nested component updates from ' + 
'render is not allowed. If necessary, trigger nested updates in ' + 
'componentDidUpdate.');


var componentInstance=instantiateReactComponent(nextElement, null);
var reactRootID=ReactMount._registerComponent(
componentInstance, 
container);






ReactUpdates.batchedUpdates(
batchedMountComponentIntoNode, 
componentInstance, 
reactRootID, 
container, 
shouldReuseMarkup);


if(__DEV__){

rootElementsByReactRootID[reactRootID] = 
getReactRootElementInContainer(container);}


return componentInstance;}, 














render:function(nextElement, container, callback){
invariant(
ReactElement.isValidElement(nextElement), 
'React.render(): Invalid component element.%s', 

typeof nextElement === 'string'?
' Instead of passing an element string, make sure to instantiate ' + 
'it by passing it to React.createElement.':
typeof nextElement === 'function'?
' Instead of passing a component class, make sure to instantiate ' + 
'it by passing it to React.createElement.':

nextElement != null && nextElement.props !== undefined?
' This may be caused by unintentionally loading two independent ' + 
'copies of React.':
'');



var prevComponent=instancesByReactRootID[getReactRootID(container)];

if(prevComponent){
var prevElement=prevComponent._currentElement;
if(shouldUpdateReactComponent(prevElement, nextElement)){
return ReactMount._updateRootComponent(
prevComponent, 
nextElement, 
container, 
callback).
getPublicInstance();}else 
{
ReactMount.unmountComponentAtNode(container);}}



var reactRootElement=getReactRootElementInContainer(container);
var containerHasReactMarkup=
reactRootElement && ReactMount.isRenderedByReact(reactRootElement);

if(__DEV__){
if(!containerHasReactMarkup || reactRootElement.nextSibling){
var rootElementSibling=reactRootElement;
while(rootElementSibling) {
if(ReactMount.isRenderedByReact(rootElementSibling)){
warning(
false, 
'render(): Target node has markup rendered by React, but there ' + 
'are unrelated nodes as well. This is most commonly caused by ' + 
'white-space inserted around server-rendered markup.');

break;}


rootElementSibling = rootElementSibling.nextSibling;}}}




var shouldReuseMarkup=containerHasReactMarkup && !prevComponent;

var component=ReactMount._renderNewRootComponent(
nextElement, 
container, 
shouldReuseMarkup).
getPublicInstance();
if(callback){
callback.call(component);}

return component;}, 











constructAndRenderComponent:function(constructor, props, container){
var element=ReactElement.createElement(constructor, props);
return ReactMount.render(element, container);}, 











constructAndRenderComponentByID:function(constructor, props, id){
var domNode=document.getElementById(id);
invariant(
domNode, 
'Tried to get element with id of "%s" but it is not present on the page.', 
id);

return ReactMount.constructAndRenderComponent(constructor, props, domNode);}, 










registerContainer:function(container){
var reactRootID=getReactRootID(container);
if(reactRootID){

reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);}

if(!reactRootID){

reactRootID = ReactInstanceHandles.createReactRootID();}

containersByReactRootID[reactRootID] = container;
return reactRootID;}, 









unmountComponentAtNode:function(container){




warning(
ReactCurrentOwner.current == null, 
'unmountComponentAtNode(): Render methods should be a pure function of ' + 
'props and state; triggering nested component updates from render is ' + 
'not allowed. If necessary, trigger nested updates in ' + 
'componentDidUpdate.');


invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE), 

'unmountComponentAtNode(...): Target container is not a DOM element.');


var reactRootID=getReactRootID(container);
var component=instancesByReactRootID[reactRootID];
if(!component){
return false;}

ReactMount.unmountComponentFromNode(component, container);
delete instancesByReactRootID[reactRootID];
delete containersByReactRootID[reactRootID];
if(__DEV__){
delete rootElementsByReactRootID[reactRootID];}

return true;}, 











unmountComponentFromNode:function(instance, container){
ReactReconciler.unmountComponent(instance);

if(container.nodeType === DOC_NODE_TYPE){
container = container.documentElement;}



while(container.lastChild) {
container.removeChild(container.lastChild);}}, 










findReactContainerForID:function(id){
var reactRootID=ReactInstanceHandles.getReactRootIDFromNodeID(id);
var container=containersByReactRootID[reactRootID];

if(__DEV__){
var rootElement=rootElementsByReactRootID[reactRootID];
if(rootElement && rootElement.parentNode !== container){
invariant(


internalGetID(rootElement) === reactRootID, 
'ReactMount: Root element ID differed from reactRootID.');


var containerChild=container.firstChild;
if(containerChild && 
reactRootID === internalGetID(containerChild)){




rootElementsByReactRootID[reactRootID] = containerChild;}else 
{
warning(
false, 
'ReactMount: Root element has been removed from its original ' + 
'container. New container:', rootElement.parentNode);}}}





return container;}, 








findReactNodeByID:function(id){
var reactRoot=ReactMount.findReactContainerForID(id);
return ReactMount.findComponentRoot(reactRoot, id);}, 









isRenderedByReact:function(node){
if(node.nodeType !== 1){

return false;}

var id=ReactMount.getID(node);
return id?id.charAt(0) === SEPARATOR:false;}, 










getFirstReactDOM:function(node){
var current=node;
while(current && current.parentNode !== current) {
if(ReactMount.isRenderedByReact(current)){
return current;}

current = current.parentNode;}

return null;}, 












findComponentRoot:function(ancestorNode, targetID){
var firstChildren=findComponentRootReusableArray;
var childIndex=0;

var deepestAncestor=findDeepestCachedAncestor(targetID) || ancestorNode;

firstChildren[0] = deepestAncestor.firstChild;
firstChildren.length = 1;

while(childIndex < firstChildren.length) {
var child=firstChildren[childIndex++];
var targetChild;

while(child) {
var childID=ReactMount.getID(child);
if(childID){





if(targetID === childID){
targetChild = child;}else 
if(ReactInstanceHandles.isAncestorIDOf(childID, targetID)){




firstChildren.length = childIndex = 0;
firstChildren.push(child.firstChild);}}else 


{





firstChildren.push(child.firstChild);}


child = child.nextSibling;}


if(targetChild){



firstChildren.length = 0;

return targetChild;}}



firstChildren.length = 0;

invariant(
false, 
'findComponentRoot(..., %s): Unable to find element. This probably ' + 
'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 
'usually due to forgetting a <tbody> when using tables, nesting tags ' + 
'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 
'parent. ' + 
'Try inspecting the child nodes of the element with React ID `%s`.', 
targetID, 
ReactMount.getID(ancestorNode));}, 



_mountImageIntoNode:function(markup, container, shouldReuseMarkup){
invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE), 

'mountComponentIntoNode(...): Target container is not valid.');


if(shouldReuseMarkup){
var rootElement=getReactRootElementInContainer(container);
if(ReactMarkupChecksum.canReuseMarkup(markup, rootElement)){
return;}else 
{
var checksum=rootElement.getAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

var rootMarkup=rootElement.outerHTML;
rootElement.setAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME, 
checksum);


var diffIndex=firstDifferenceIndex(markup, rootMarkup);
var difference=' (client) ' + 
markup.substring(diffIndex - 20, diffIndex + 20) + 
'\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

invariant(
container.nodeType !== DOC_NODE_TYPE, 
'You\'re trying to render a component to the document using ' + 
'server rendering but the checksum was invalid. This usually ' + 
'means you rendered a different component type or props on ' + 
'the client from the one on the server, or your render() ' + 
'methods are impure. React cannot handle this case due to ' + 
'cross-browser quirks by rendering at the document root. You ' + 
'should look for environment dependent code in your components ' + 
'and ensure the props are the same client and server side:\n%s', 
difference);


if(__DEV__){
warning(
false, 
'React attempted to reuse markup in a container but the ' + 
'checksum was invalid. This generally means that you are ' + 
'using server rendering and the markup generated on the ' + 
'server was not what the client was expecting. React injected ' + 
'new markup to compensate which works but you have lost many ' + 
'of the benefits of server rendering. Instead, figure out ' + 
'why the markup being generated is different on the client ' + 
'or server:\n%s', 
difference);}}}





invariant(
container.nodeType !== DOC_NODE_TYPE, 
'You\'re trying to render a component to the document but ' + 
'you didn\'t use server rendering. We can\'t do this ' + 
'without using server rendering due to cross-browser quirks. ' + 
'See React.renderToString() for server rendering.');


setInnerHTML(container, markup);}, 






getReactRootID:getReactRootID, 

getID:getID, 

setID:setID, 

getNode:getNode, 

getNodeFromInstance:getNodeFromInstance, 

purgeID:purgeID};


ReactPerf.measureMethods(ReactMount, 'ReactMount', {
_renderNewRootComponent:'_renderNewRootComponent', 
_mountImageIntoNode:'_mountImageIntoNode'});


module.exports = ReactMount;});
__d('ReactBrowserEventEmitter',["EventConstants","EventPluginHub","EventPluginRegistry","ReactEventEmitterMixin","ViewportMetrics","Object.assign","isEventSupported"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');
var EventPluginRegistry=require('EventPluginRegistry');
var ReactEventEmitterMixin=require('ReactEventEmitterMixin');
var ViewportMetrics=require('ViewportMetrics');

var assign=require('Object.assign');
var isEventSupported=require('isEventSupported');
























































var alreadyListeningTo={};
var isMonitoringScrollValue=false;
var reactTopListenersCounter=0;




var topEventMapping={
topBlur:'blur', 
topChange:'change', 
topClick:'click', 
topCompositionEnd:'compositionend', 
topCompositionStart:'compositionstart', 
topCompositionUpdate:'compositionupdate', 
topContextMenu:'contextmenu', 
topCopy:'copy', 
topCut:'cut', 
topDoubleClick:'dblclick', 
topDrag:'drag', 
topDragEnd:'dragend', 
topDragEnter:'dragenter', 
topDragExit:'dragexit', 
topDragLeave:'dragleave', 
topDragOver:'dragover', 
topDragStart:'dragstart', 
topDrop:'drop', 
topFocus:'focus', 
topInput:'input', 
topKeyDown:'keydown', 
topKeyPress:'keypress', 
topKeyUp:'keyup', 
topMouseDown:'mousedown', 
topMouseMove:'mousemove', 
topMouseOut:'mouseout', 
topMouseOver:'mouseover', 
topMouseUp:'mouseup', 
topPaste:'paste', 
topScroll:'scroll', 
topSelectionChange:'selectionchange', 
topTextInput:'textInput', 
topTouchCancel:'touchcancel', 
topTouchEnd:'touchend', 
topTouchMove:'touchmove', 
topTouchStart:'touchstart', 
topWheel:'wheel'};





var topListenersIDKey='_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt){


if(!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)){
mountAt[topListenersIDKey] = reactTopListenersCounter++;
alreadyListeningTo[mountAt[topListenersIDKey]] = {};}

return alreadyListeningTo[mountAt[topListenersIDKey]];}












var ReactBrowserEventEmitter=assign({}, ReactEventEmitterMixin, {




ReactEventListener:null, 

injection:{



injectReactEventListener:function(ReactEventListener){
ReactEventListener.setHandleTopLevel(
ReactBrowserEventEmitter.handleTopLevel);

ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;}}, 








setEnabled:function(enabled){
if(ReactBrowserEventEmitter.ReactEventListener){
ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);}}, 






isEnabled:function(){
return !!(
ReactBrowserEventEmitter.ReactEventListener && 
ReactBrowserEventEmitter.ReactEventListener.isEnabled());}, 
























listenTo:function(registrationName, contentDocumentHandle){
var mountAt=contentDocumentHandle;
var isListening=getListeningForDocument(mountAt);
var dependencies=EventPluginRegistry.
registrationNameDependencies[registrationName];

var topLevelTypes=EventConstants.topLevelTypes;
for(var i=0, l=dependencies.length; i < l; i++) {
var dependency=dependencies[i];
if(!(
isListening.hasOwnProperty(dependency) && 
isListening[dependency]))
{
if(dependency === topLevelTypes.topWheel){
if(isEventSupported('wheel')){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel, 
'wheel', 
mountAt);}else 

if(isEventSupported('mousewheel')){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel, 
'mousewheel', 
mountAt);}else 

{


ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel, 
'DOMMouseScroll', 
mountAt);}}else 


if(dependency === topLevelTypes.topScroll){

if(isEventSupported('scroll', true)){
ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topScroll, 
'scroll', 
mountAt);}else 

{
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topScroll, 
'scroll', 
ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);}}else 


if(dependency === topLevelTypes.topFocus || 
dependency === topLevelTypes.topBlur){

if(isEventSupported('focus', true)){
ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topFocus, 
'focus', 
mountAt);

ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topBlur, 
'blur', 
mountAt);}else 

if(isEventSupported('focusin')){


ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topFocus, 
'focusin', 
mountAt);

ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topBlur, 
'focusout', 
mountAt);}




isListening[topLevelTypes.topBlur] = true;
isListening[topLevelTypes.topFocus] = true;}else 
if(topEventMapping.hasOwnProperty(dependency)){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
dependency, 
topEventMapping[dependency], 
mountAt);}



isListening[dependency] = true;}}}, 




trapBubbledEvent:function(topLevelType, handlerBaseName, handle){
return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelType, 
handlerBaseName, 
handle);}, 



trapCapturedEvent:function(topLevelType, handlerBaseName, handle){
return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelType, 
handlerBaseName, 
handle);}, 











ensureScrollValueMonitoring:function(){
if(!isMonitoringScrollValue){
var refresh=ViewportMetrics.refreshScrollValues;
ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
isMonitoringScrollValue = true;}}, 



eventNameDispatchConfigs:EventPluginHub.eventNameDispatchConfigs, 

registrationNameModules:EventPluginHub.registrationNameModules, 

putListener:EventPluginHub.putListener, 

getListener:EventPluginHub.getListener, 

deleteListener:EventPluginHub.deleteListener, 

deleteAllListeners:EventPluginHub.deleteAllListeners});



module.exports = ReactBrowserEventEmitter;});
__d('ViewportMetrics',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ViewportMetrics={

currentScrollLeft:0, 

currentScrollTop:0, 

refreshScrollValues:function(scrollPosition){
ViewportMetrics.currentScrollLeft = scrollPosition.x;
ViewportMetrics.currentScrollTop = scrollPosition.y;}};




module.exports = ViewportMetrics;});
__d('isEventSupported',["ExecutionEnvironment"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ExecutionEnvironment=require('ExecutionEnvironment');

var useHasFeature;
if(ExecutionEnvironment.canUseDOM){
useHasFeature = 
document.implementation && 
document.implementation.hasFeature && 


document.implementation.hasFeature('', '') !== true;}
















function isEventSupported(eventNameSuffix, capture){
if(!ExecutionEnvironment.canUseDOM || 
capture && !('addEventListener' in document)){
return false;}


var eventName='on' + eventNameSuffix;
var isSupported=(eventName in document);

if(!isSupported){
var element=document.createElement('div');
element.setAttribute(eventName, 'return;');
isSupported = typeof element[eventName] === 'function';}


if(!isSupported && useHasFeature && eventNameSuffix === 'wheel'){

isSupported = document.implementation.hasFeature('Events.wheel', '3.0');}


return isSupported;}


module.exports = isEventSupported;});
__d('ReactMarkupChecksum',["adler32"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var adler32=require('adler32');

var ReactMarkupChecksum={
CHECKSUM_ATTR_NAME:'data-react-checksum', 





addChecksumToMarkup:function(markup){
var checksum=adler32(markup);
return markup.replace(
'>', 
' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '">');}, 








canReuseMarkup:function(markup, element){
var existingChecksum=element.getAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
var markupChecksum=adler32(markup);
return markupChecksum === existingChecksum;}};



module.exports = ReactMarkupChecksum;});
__d('adler32',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var MOD=65521;





function adler32(data){
var a=1;
var b=0;
for(var i=0; i < data.length; i++) {
a = (a + data.charCodeAt(i)) % MOD;
b = (b + a) % MOD;}

return a | b << 16;}


module.exports = adler32;});
__d('containsNode',["isTextNode"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











isTextNode=require('isTextNode');










function containsNode(outerNode, innerNode){
if(!outerNode || !innerNode){
return false;}else 
if(outerNode === innerNode){
return true;}else 
if(isTextNode(outerNode)){
return false;}else 
if(isTextNode(innerNode)){
return containsNode(outerNode, innerNode.parentNode);}else 
if(outerNode.contains){
return outerNode.contains(innerNode);}else 
if(outerNode.compareDocumentPosition){
return !!(outerNode.compareDocumentPosition(innerNode) & 16);}else 
{
return false;}}



module.exports = containsNode;});
__d('isTextNode',["isNode"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











isNode=require('isNode');





function isTextNode(object){
return isNode(object) && object.nodeType == 3;}


module.exports = isTextNode;});
__d('getReactRootElementInContainer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var DOC_NODE_TYPE=9;






function getReactRootElementInContainer(container){
if(!container){
return null;}


if(container.nodeType === DOC_NODE_TYPE){
return container.documentElement;}else 
{
return container.firstChild;}}



module.exports = getReactRootElementInContainer;});
__d('setInnerHTML',["ExecutionEnvironment"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var ExecutionEnvironment=require('ExecutionEnvironment');

var WHITESPACE_TEST=/^[ \r\n\t\f]/;
var NONVISIBLE_TEST=/<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;









var setInnerHTML=function(node, html){
node.innerHTML = html;};



if(typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction){
setInnerHTML = function(node, html){
MSApp.execUnsafeLocalFunction(function(){
node.innerHTML = html;});};}




if(ExecutionEnvironment.canUseDOM){






var testElement=document.createElement('div');
testElement.innerHTML = ' ';
if(testElement.innerHTML === ''){
setInnerHTML = function(node, html){





if(node.parentNode){
node.parentNode.replaceChild(node, node);}






if(WHITESPACE_TEST.test(html) || 
html[0] === '<' && NONVISIBLE_TEST.test(html)){


node.innerHTML = '﻿' + html;



var textNode=node.firstChild;
if(textNode.data.length === 1){
node.removeChild(textNode);}else 
{
textNode.deleteData(0, 1);}}else 

{
node.innerHTML = html;}};}}





module.exports = setInnerHTML;});
__d('AppStateIOS',["Map","NativeModules","RCTDeviceEventEmitter","logError","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var Map=require('Map');
var NativeModules=require('NativeModules');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTAppState=NativeModules.AppState;

var logError=require('logError');
var invariant=require('invariant');

var _eventHandlers={
change:new Map(), 
memoryWarning:new Map()};





















































var AppStateIOS={





addEventListener:function(
type, 
handler)
{
invariant(
['change', 'memoryWarning'].indexOf(type) !== -1, 
'Trying to subscribe to unknown event: "%s"', type);

if(type === 'change'){
_eventHandlers[type].set(handler, RCTDeviceEventEmitter.addListener(
'appStateDidChange', 
function(appStateData){
handler(appStateData.app_state);}));}else 


if(type === 'memoryWarning'){
_eventHandlers[type].set(handler, RCTDeviceEventEmitter.addListener(
'memoryWarning', 
handler));}}, 







removeEventListener:function(
type, 
handler)
{
invariant(
['change', 'memoryWarning'].indexOf(type) !== -1, 
'Trying to remove listener for unknown event: "%s"', type);

if(!_eventHandlers[type].has(handler)){
return;}

_eventHandlers[type].get(handler).remove();
_eventHandlers[type].delete(handler);}, 


currentState:null};



RCTDeviceEventEmitter.addListener(
'appStateDidChange', 
function(appStateData){
AppStateIOS.currentState = appStateData.app_state;});



RCTAppState.getCurrentAppState(
function(appStateData){
AppStateIOS.currentState = appStateData.app_state;}, 

logError);


module.exports = AppStateIOS;});
__d('CameraRoll',["ReactPropTypes","NativeModules","createStrictShapeTypeChecker","deepFreezeAndThrowOnMutationInDev","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var ReactPropTypes=require('ReactPropTypes');
var RCTCameraRollManager=require('NativeModules').CameraRollManager;

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var deepFreezeAndThrowOnMutationInDev=
require('deepFreezeAndThrowOnMutationInDev');
var invariant=require('invariant');

var GROUP_TYPES_OPTIONS=[
'Album', 
'All', 
'Event', 
'Faces', 
'Library', 
'PhotoStream', 
'SavedPhotos'];


var ASSET_TYPE_OPTIONS=[
'All', 
'Videos', 
'Photos'];




deepFreezeAndThrowOnMutationInDev(GROUP_TYPES_OPTIONS);
deepFreezeAndThrowOnMutationInDev(ASSET_TYPE_OPTIONS);




var getPhotosParamChecker=createStrictShapeTypeChecker({




first:ReactPropTypes.number.isRequired, 





after:ReactPropTypes.string, 




groupTypes:ReactPropTypes.oneOf(GROUP_TYPES_OPTIONS), 





groupName:ReactPropTypes.string, 




assetType:ReactPropTypes.oneOf(ASSET_TYPE_OPTIONS)});





var getPhotosReturnChecker=createStrictShapeTypeChecker({
edges:ReactPropTypes.arrayOf(createStrictShapeTypeChecker({
node:createStrictShapeTypeChecker({
type:ReactPropTypes.string.isRequired, 
group_name:ReactPropTypes.string.isRequired, 
image:createStrictShapeTypeChecker({
uri:ReactPropTypes.string.isRequired, 
height:ReactPropTypes.number.isRequired, 
width:ReactPropTypes.number.isRequired, 
isStored:ReactPropTypes.bool}).
isRequired, 
timestamp:ReactPropTypes.number.isRequired, 
location:createStrictShapeTypeChecker({
latitude:ReactPropTypes.number, 
longitude:ReactPropTypes.number, 
altitude:ReactPropTypes.number, 
heading:ReactPropTypes.number, 
speed:ReactPropTypes.number})}).

isRequired})).
isRequired, 
page_info:createStrictShapeTypeChecker({
has_next_page:ReactPropTypes.bool.isRequired, 
start_cursor:ReactPropTypes.string, 
end_cursor:ReactPropTypes.string}).
isRequired});var 


CameraRoll=(function(){function CameraRoll(){_classCallCheck(this, CameraRoll);}_createClass(CameraRoll, null, [{key:'saveImageWithTag', value:











function saveImageWithTag(tag, successCallback, errorCallback){
invariant(
typeof tag === 'string', 
'CameraRoll.saveImageWithTag tag must be a valid string.');

RCTCameraRollManager.saveImageWithTag(
tag, 
function(imageTag){
successCallback && successCallback(imageTag);}, 

function(errorMessage){
errorCallback && errorCallback(errorMessage);});}}, {key:'getPhotos', value:












function getPhotos(params, callback, errorCallback){
var metaCallback=callback;
if(__DEV__){
getPhotosParamChecker({params:params}, 'params', 'CameraRoll.getPhotos');
invariant(
typeof callback === 'function', 
'CameraRoll.getPhotos callback must be a valid function.');

invariant(
typeof errorCallback === 'function', 
'CameraRoll.getPhotos errorCallback must be a valid function.');}


if(__DEV__){
metaCallback = function(response){
getPhotosReturnChecker(
{response:response}, 
'response', 
'CameraRoll.getPhotos callback');

callback(response);};}


RCTCameraRollManager.getPhotos(params, metaCallback, errorCallback);}}]);return CameraRoll;})();



CameraRoll.GroupTypesOptions = GROUP_TYPES_OPTIONS;
CameraRoll.AssetTypeOptions = ASSET_TYPE_OPTIONS;

module.exports = CameraRoll;});
__d('LayoutAnimation',["ReactPropTypes","NativeModules","createStrictShapeTypeChecker","keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');
var RCTUIManager=require('NativeModules').UIManager;

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var keyMirror=require('keyMirror');

var TypesEnum={
spring:true, 
linear:true, 
easeInEaseOut:true, 
easeIn:true, 
easeOut:true};

var Types=keyMirror(TypesEnum);

var PropertiesEnum={
opacity:true, 
scaleXY:true};

var Properties=keyMirror(PropertiesEnum);

var animChecker=createStrictShapeTypeChecker({
duration:PropTypes.number, 
delay:PropTypes.number, 
springDamping:PropTypes.number, 
initialVelocity:PropTypes.number, 
type:PropTypes.oneOf(
Object.keys(Types)), 

property:PropTypes.oneOf(
Object.keys(Properties))});












var configChecker=createStrictShapeTypeChecker({
duration:PropTypes.number.isRequired, 
create:animChecker, 
update:animChecker, 
delete:animChecker});









function configureNext(config, onAnimationDidEnd, onError){
configChecker({config:config}, 'config', 'LayoutAnimation.configureNext');
RCTUIManager.configureNextLayoutAnimation(config, onAnimationDidEnd, onError);}


function create(duration, type, creationProp){
return {
duration:duration, 
create:{
type:type, 
property:creationProp}, 

update:{
type:type}};}




var LayoutAnimation={
configureNext:configureNext, 
create:create, 
Types:Types, 
Properties:Properties, 
configChecker:configChecker, 
Presets:{
easeInEaseOut:create(
300, Types.easeInEaseOut, Properties.opacity), 

linear:create(
500, Types.linear, Properties.opacity), 

spring:{
duration:700, 
create:{
type:Types.linear, 
property:Properties.opacity}, 

update:{
type:Types.spring, 
springDamping:0.4}}}};





module.exports = LayoutAnimation;});
__d('LinkingIOS',["RCTDeviceEventEmitter","NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTLinkingManager=require('NativeModules').LinkingManager;
var invariant=require('invariant');

var _notifHandlers={};
var _initialURL=RCTLinkingManager && 
RCTLinkingManager.initialURL;

var DEVICE_NOTIF_EVENT='openURL';var 

































































LinkingIOS=(function(){function LinkingIOS(){_classCallCheck(this, LinkingIOS);}_createClass(LinkingIOS, null, [{key:'addEventListener', value:




function addEventListener(type, handler){
invariant(
type === 'url', 
'LinkingIOS only supports `url` events');

_notifHandlers[handler] = RCTDeviceEventEmitter.addListener(
DEVICE_NOTIF_EVENT, 
handler);}}, {key:'removeEventListener', value:






function removeEventListener(type, handler){
invariant(
type === 'url', 
'LinkingIOS only supports `url` events');

if(!_notifHandlers[handler]){
return;}

_notifHandlers[handler].remove();
_notifHandlers[handler] = null;}}, {key:'openURL', value:





function openURL(url){
invariant(
typeof url === 'string', 
'Invalid url: should be a string');

RCTLinkingManager.openURL(url);}}, {key:'canOpenURL', value:






function canOpenURL(url, callback){
invariant(
typeof url === 'string', 
'Invalid url: should be a string');

invariant(
typeof callback === 'function', 
'A valid callback function is required');

RCTLinkingManager.canOpenURL(url, callback);}}, {key:'popInitialURL', value:






function popInitialURL(){
var initialURL=_initialURL;
_initialURL = null;
return initialURL;}}]);return LinkingIOS;})();



module.exports = LinkingIOS;});
__d('NetInfo',["NativeModules","Platform","RCTDeviceEventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var Platform=require('Platform');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');

if(Platform.OS === 'ios'){
var RCTNetInfo=NativeModules.Reachability;}else 
if(Platform.OS === 'android'){
var RCTNetInfo=NativeModules.NetInfo;}


var DEVICE_REACHABILITY_EVENT='reachabilityDidChange';






















































































































var _subscriptions={};

var NetInfo={
addEventListener:function(
eventName, 
handler)
{
_subscriptions[handler] = RCTDeviceEventEmitter.addListener(
DEVICE_REACHABILITY_EVENT, 
function(appStateData){
handler(appStateData.network_reachability);});}, 




removeEventListener:function(
eventName, 
handler)
{
if(!_subscriptions[handler]){
return;}

_subscriptions[handler].remove();
_subscriptions[handler] = null;}, 


fetch:function(){
return new Promise(function(resolve, reject){
RCTNetInfo.getCurrentReachability(
function(resp){
resolve(resp.network_reachability);}, 

reject);});}, 




isConnected:{}, 

isConnectionMetered:{}};


if(Platform.OS === 'ios'){
var _isConnected=function(
reachability)
{
return reachability !== 'none' && 
reachability !== 'unknown';};}else 

if(Platform.OS === 'android'){
var _isConnected=function(
connectionType)
{
return connectionType !== 'NONE' && connectionType !== 'UNKNOWN';};}



var _isConnectedSubscriptions={};

NetInfo.isConnected = {
addEventListener:function(
eventName, 
handler)
{
_isConnectedSubscriptions[handler] = function(connection){
handler(_isConnected(connection));};

NetInfo.addEventListener(
eventName, 
_isConnectedSubscriptions[handler]);}, 



removeEventListener:function(
eventName, 
handler)
{
NetInfo.removeEventListener(
eventName, 
_isConnectedSubscriptions[handler]);}, 



fetch:function(){
return NetInfo.fetch().then(
function(connection){return _isConnected(connection);});}};




if(Platform.OS === 'android'){
NetInfo.isConnectionMetered = function(callback){
RCTNetInfo.isConnectionMetered(function(_isMetered){
callback(_isMetered);});};}




module.exports = NetInfo;});
__d('PushNotificationIOS',["RCTDeviceEventEmitter","NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTPushNotificationManager=require('NativeModules').PushNotificationManager;
var invariant=require('invariant');

var _notifHandlers={};
var _initialNotification=RCTPushNotificationManager && 
RCTPushNotificationManager.initialNotification;

var DEVICE_NOTIF_EVENT='remoteNotificationReceived';
var NOTIF_REGISTER_EVENT='remoteNotificationsRegistered';var 








PushNotificationIOS=(function(){












































































































































function PushNotificationIOS(nativeNotif){var _this=this;_classCallCheck(this, PushNotificationIOS);
this._data = {};





Object.keys(nativeNotif).forEach(function(notifKey){
var notifVal=nativeNotif[notifKey];
if(notifKey === 'aps'){
_this._alert = notifVal.alert;
_this._sound = notifVal.sound;
_this._badgeCount = notifVal.badge;}else 
{
_this._data[notifKey] = notifVal;}});}_createClass(PushNotificationIOS, [{key:'getMessage', value:







function getMessage(){

return this._alert;}}, {key:'getSound', value:





function getSound(){
return this._sound;}}, {key:'getAlert', value:





function getAlert(){
return this._alert;}}, {key:'getBadgeCount', value:





function getBadgeCount(){
return this._badgeCount;}}, {key:'getData', value:





function getData(){
return this._data;}}], [{key:'setApplicationIconBadgeNumber', value:function setApplicationIconBadgeNumber(number){RCTPushNotificationManager.setApplicationIconBadgeNumber(number);}}, {key:'getApplicationIconBadgeNumber', value:function getApplicationIconBadgeNumber(callback){RCTPushNotificationManager.getApplicationIconBadgeNumber(callback);}}, {key:'addEventListener', value:function addEventListener(type, handler){invariant(type === 'notification' || type === 'register', 'PushNotificationIOS only supports `notification` and `register` events');if(type === 'notification'){_notifHandlers[handler] = RCTDeviceEventEmitter.addListener(DEVICE_NOTIF_EVENT, function(notifData){handler(new PushNotificationIOS(notifData));});}else if(type === 'register'){_notifHandlers[handler] = RCTDeviceEventEmitter.addListener(NOTIF_REGISTER_EVENT, function(registrationInfo){handler(registrationInfo.deviceToken);});}}}, {key:'requestPermissions', value:function requestPermissions(permissions){var requestedPermissions={};if(permissions){requestedPermissions = {alert:!!permissions.alert, badge:!!permissions.badge, sound:!!permissions.sound};}else {requestedPermissions = {alert:true, badge:true, sound:true};}RCTPushNotificationManager.requestPermissions(requestedPermissions);}}, {key:'checkPermissions', value:function checkPermissions(callback){invariant(typeof callback === 'function', 'Must provide a valid callback');RCTPushNotificationManager.checkPermissions(callback);}}, {key:'removeEventListener', value:function removeEventListener(type, handler){invariant(type === 'notification' || type === 'register', 'PushNotificationIOS only supports `notification` and `register` events');if(!_notifHandlers[handler]){return;}_notifHandlers[handler].remove();_notifHandlers[handler] = null;}}, {key:'popInitialNotification', value:function popInitialNotification(){var initialNotification=_initialNotification && new PushNotificationIOS(_initialNotification);_initialNotification = null;return initialNotification;}}]);return PushNotificationIOS;})();



module.exports = PushNotificationIOS;});
__d('StatusBarIOS',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTStatusBarManager=require('NativeModules').StatusBarManager;












var StatusBarIOS={

setStyle:function(style, animated){
animated = animated || false;
RCTStatusBarManager.setStyle(style, animated);}, 


setHidden:function(hidden, animation){
animation = animation || 'none';
RCTStatusBarManager.setHidden(hidden, animation);}};



module.exports = StatusBarIOS;});
__d('VibrationIOS',["NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTVibration=require('NativeModules').Vibration;

var invariant=require('invariant');












var VibrationIOS={
vibrate:function(){
invariant(
arguments[0] === undefined, 
'Vibration patterns not supported.');

RCTVibration.vibrate();}};



module.exports = VibrationIOS;});
__d('RCTNativeAppEventEmitter',["EventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventEmitter=require('EventEmitter');

var RCTNativeAppEventEmitter=new EventEmitter();

module.exports = RCTNativeAppEventEmitter;});
__d('LinkedStateMixin',["ReactLink","ReactStateSetters"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactLink=require('ReactLink');
var ReactStateSetters=require('ReactStateSetters');




var LinkedStateMixin={









linkState:function(key){
return new ReactLink(
this.state[key], 
ReactStateSetters.createStateKeySetter(this, key));}};




module.exports = LinkedStateMixin;});
__d('ReactLink',["React"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




































var React=require('React');





function ReactLink(value, requestChange){
this.value = value;
this.requestChange = requestChange;}










function createLinkTypeChecker(linkType){
var shapes={
value:typeof linkType === 'undefined'?
React.PropTypes.any.isRequired:
linkType.isRequired, 
requestChange:React.PropTypes.func.isRequired};

return React.PropTypes.shape(shapes);}


ReactLink.PropTypes = {
link:createLinkTypeChecker};


module.exports = ReactLink;});
__d('ReactStateSetters',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactStateSetters={










createStateSetter:function(component, funcReturningState){
return function(a, b, c, d, e, f){
var partialState=funcReturningState.call(component, a, b, c, d, e, f);
if(partialState){
component.setState(partialState);}};}, 















createStateKeySetter:function(component, key){

var cache=component.__keySetters || (component.__keySetters = {});
return cache[key] || (cache[key] = createStateKeySetter(component, key));}};



function createStateKeySetter(component, key){



var partialState={};
return function stateKeySetter(value){
partialState[key] = value;
component.setState(partialState);};}



ReactStateSetters.Mixin = {
















createStateSetter:function(funcReturningState){
return ReactStateSetters.createStateSetter(this, funcReturningState);}, 

















createStateKeySetter:function(key){
return ReactStateSetters.createStateKeySetter(this, key);}};



module.exports = ReactStateSetters;});
__d('ReactComponentWithPureRenderMixin',["shallowEqual"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var shallowEqual=require('shallowEqual');

























var ReactComponentWithPureRenderMixin={
shouldComponentUpdate:function(nextProps, nextState){
return !shallowEqual(this.props, nextProps) || 
!shallowEqual(this.state, nextState);}};



module.exports = ReactComponentWithPureRenderMixin;});
__d('shallowEqual',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















function shallowEqual(objA, objB){
if(objA === objB){
return true;}

var key;

for(key in objA) {
if(objA.hasOwnProperty(key) && (
!objB.hasOwnProperty(key) || objA[key] !== objB[key])){
return false;}}



for(key in objB) {
if(objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)){
return false;}}


return true;}


module.exports = shallowEqual;});
__d('update',["Object.assign","keyOf","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var assign=require('Object.assign');
var keyOf=require('keyOf');
var invariant=require('invariant');
var hasOwnProperty=({}).hasOwnProperty;

function shallowCopy(x){
if(Array.isArray(x)){
return x.concat();}else 
if(x && typeof x === 'object'){
return assign(new x.constructor(), x);}else 
{
return x;}}



var COMMAND_PUSH=keyOf({$push:null});
var COMMAND_UNSHIFT=keyOf({$unshift:null});
var COMMAND_SPLICE=keyOf({$splice:null});
var COMMAND_SET=keyOf({$set:null});
var COMMAND_MERGE=keyOf({$merge:null});
var COMMAND_APPLY=keyOf({$apply:null});

var ALL_COMMANDS_LIST=[
COMMAND_PUSH, 
COMMAND_UNSHIFT, 
COMMAND_SPLICE, 
COMMAND_SET, 
COMMAND_MERGE, 
COMMAND_APPLY];


var ALL_COMMANDS_SET={};

ALL_COMMANDS_LIST.forEach(function(command){
ALL_COMMANDS_SET[command] = true;});


function invariantArrayCase(value, spec, command){
invariant(
Array.isArray(value), 
'update(): expected target of %s to be an array; got %s.', 
command, 
value);

var specValue=spec[command];
invariant(
Array.isArray(specValue), 
'update(): expected spec of %s to be an array; got %s. ' + 
'Did you forget to wrap your parameter in an array?', 
command, 
specValue);}



function update(value, spec){
invariant(
typeof spec === 'object', 
'update(): You provided a key path to update() that did not contain one ' + 
'of %s. Did you forget to include {%s: ...}?', 
ALL_COMMANDS_LIST.join(', '), 
COMMAND_SET);


if(hasOwnProperty.call(spec, COMMAND_SET)){
invariant(
Object.keys(spec).length === 1, 
'Cannot have more than one key in an object with %s', 
COMMAND_SET);


return spec[COMMAND_SET];}


var nextValue=shallowCopy(value);

if(hasOwnProperty.call(spec, COMMAND_MERGE)){
var mergeObj=spec[COMMAND_MERGE];
invariant(
mergeObj && typeof mergeObj === 'object', 
'update(): %s expects a spec of type \'object\'; got %s', 
COMMAND_MERGE, 
mergeObj);

invariant(
nextValue && typeof nextValue === 'object', 
'update(): %s expects a target of type \'object\'; got %s', 
COMMAND_MERGE, 
nextValue);

assign(nextValue, spec[COMMAND_MERGE]);}


if(hasOwnProperty.call(spec, COMMAND_PUSH)){
invariantArrayCase(value, spec, COMMAND_PUSH);
spec[COMMAND_PUSH].forEach(function(item){
nextValue.push(item);});}



if(hasOwnProperty.call(spec, COMMAND_UNSHIFT)){
invariantArrayCase(value, spec, COMMAND_UNSHIFT);
spec[COMMAND_UNSHIFT].forEach(function(item){
nextValue.unshift(item);});}



if(hasOwnProperty.call(spec, COMMAND_SPLICE)){
invariant(
Array.isArray(value), 
'Expected %s target to be an array; got %s', 
COMMAND_SPLICE, 
value);

invariant(
Array.isArray(spec[COMMAND_SPLICE]), 
'update(): expected spec of %s to be an array of arrays; got %s. ' + 
'Did you forget to wrap your parameters in an array?', 
COMMAND_SPLICE, 
spec[COMMAND_SPLICE]);

spec[COMMAND_SPLICE].forEach(function(args){
invariant(
Array.isArray(args), 
'update(): expected spec of %s to be an array of arrays; got %s. ' + 
'Did you forget to wrap your parameters in an array?', 
COMMAND_SPLICE, 
spec[COMMAND_SPLICE]);

nextValue.splice.apply(nextValue, args);});}



if(hasOwnProperty.call(spec, COMMAND_APPLY)){
invariant(
typeof spec[COMMAND_APPLY] === 'function', 
'update(): expected spec of %s to be a function; got %s.', 
COMMAND_APPLY, 
spec[COMMAND_APPLY]);

nextValue = spec[COMMAND_APPLY](nextValue);}


for(var k in spec) {
if(!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])){
nextValue[k] = update(value[k], spec[k]);}}



return nextValue;}


module.exports = update;});
__d('ReactTestUtils',["EventConstants","EventPluginHub","EventPropagators","React","ReactElement","ReactEmptyComponent","ReactBrowserEventEmitter","ReactCompositeComponent","ReactInstanceHandles","ReactInstanceMap","ReactMount","ReactUpdates","SyntheticEvent","Object.assign"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');
var EventPropagators=require('EventPropagators');
var React=require('React');
var ReactElement=require('ReactElement');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactCompositeComponent=require('ReactCompositeComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMount=require('ReactMount');
var ReactUpdates=require('ReactUpdates');
var SyntheticEvent=require('SyntheticEvent');

var assign=require('Object.assign');

var topLevelTypes=EventConstants.topLevelTypes;

function Event(suffix){}










var ReactTestUtils={
renderIntoDocument:function(instance){
var div=document.createElement('div');





return React.render(instance, div);}, 


isElement:function(element){
return ReactElement.isValidElement(element);}, 


isElementOfType:function(inst, convenienceConstructor){
return (
ReactElement.isValidElement(inst) && 
inst.type === convenienceConstructor);}, 



isDOMComponent:function(inst){


return !!(inst && inst.tagName && inst.getDOMNode);}, 


isDOMComponentElement:function(inst){
return !!(inst && 
ReactElement.isValidElement(inst) && 
!!inst.tagName);}, 


isCompositeComponent:function(inst){
return typeof inst.render === 'function' && 
typeof inst.setState === 'function';}, 


isCompositeComponentWithType:function(inst, type){
return !!(ReactTestUtils.isCompositeComponent(inst) && 
inst.constructor === type);}, 


isCompositeComponentElement:function(inst){
if(!ReactElement.isValidElement(inst)){
return false;}



var prototype=inst.type.prototype;
return (
typeof prototype.render === 'function' && 
typeof prototype.setState === 'function');}, 



isCompositeComponentElementWithType:function(inst, type){
return !!(ReactTestUtils.isCompositeComponentElement(inst) && 
inst.constructor === type);}, 


getRenderedChildOfCompositeComponent:function(inst){
if(!ReactTestUtils.isCompositeComponent(inst)){
return null;}

var internalInstance=ReactInstanceMap.get(inst);
return internalInstance._renderedComponent.getPublicInstance();}, 


findAllInRenderedTree:function(inst, test){
if(!inst){
return [];}

var ret=test(inst)?[inst]:[];
if(ReactTestUtils.isDOMComponent(inst)){
var internalInstance=ReactInstanceMap.get(inst);
var renderedChildren=internalInstance.
_renderedComponent.
_renderedChildren;
var key;
for(key in renderedChildren) {
if(!renderedChildren.hasOwnProperty(key)){
continue;}

if(!renderedChildren[key].getPublicInstance){
continue;}

ret = ret.concat(
ReactTestUtils.findAllInRenderedTree(
renderedChildren[key].getPublicInstance(), 
test));}}else 



if(ReactTestUtils.isCompositeComponent(inst)){
ret = ret.concat(
ReactTestUtils.findAllInRenderedTree(
ReactTestUtils.getRenderedChildOfCompositeComponent(inst), 
test));}



return ret;}, 







scryRenderedDOMComponentsWithClass:function(root, className){
return ReactTestUtils.findAllInRenderedTree(root, function(inst){
var instClassName=inst.props.className;
return ReactTestUtils.isDOMComponent(inst) && (
instClassName && 
(' ' + instClassName + ' ').indexOf(' ' + className + ' ') !== -1);});}, 










findRenderedDOMComponentWithClass:function(root, className){
var all=
ReactTestUtils.scryRenderedDOMComponentsWithClass(root, className);
if(all.length !== 1){
throw new Error('Did not find exactly one match ' + 
'(found: ' + all.length + ') for class:' + className);}


return all[0];}, 








scryRenderedDOMComponentsWithTag:function(root, tagName){
return ReactTestUtils.findAllInRenderedTree(root, function(inst){
return ReactTestUtils.isDOMComponent(inst) && 
inst.tagName === tagName.toUpperCase();});}, 









findRenderedDOMComponentWithTag:function(root, tagName){
var all=ReactTestUtils.scryRenderedDOMComponentsWithTag(root, tagName);
if(all.length !== 1){
throw new Error('Did not find exactly one match for tag:' + tagName);}

return all[0];}, 







scryRenderedComponentsWithType:function(root, componentType){
return ReactTestUtils.findAllInRenderedTree(root, function(inst){
return ReactTestUtils.isCompositeComponentWithType(
inst, 
componentType);});}, 










findRenderedComponentWithType:function(root, componentType){
var all=ReactTestUtils.scryRenderedComponentsWithType(
root, 
componentType);

if(all.length !== 1){
throw new Error(
'Did not find exactly one match for componentType:' + componentType);}


return all[0];}, 















mockComponent:function(module, mockTagName){
mockTagName = mockTagName || module.mockTagName || 'div';

module.prototype.render.mockImplementation(function(){
return React.createElement(
mockTagName, 
null, 
this.props.children);});



return this;}, 









simulateNativeEventOnNode:function(topLevelType, node, fakeNativeEvent){
fakeNativeEvent.target = node;
ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(
topLevelType, 
fakeNativeEvent);}, 










simulateNativeEventOnDOMComponent:function(
topLevelType, 
comp, 
fakeNativeEvent){
ReactTestUtils.simulateNativeEventOnNode(
topLevelType, 
comp.getDOMNode(), 
fakeNativeEvent);}, 



nativeTouchData:function(x, y){
return {
touches:[
{pageX:x, pageY:y}]};}, 




createRenderer:function(){
return new ReactShallowRenderer();}, 


Simulate:null, 
SimulateNative:{}};





var ReactShallowRenderer=function(){
this._instance = null;};


ReactShallowRenderer.prototype.getRenderOutput = function(){
return (
this._instance && this._instance._renderedComponent && 
this._instance._renderedComponent._renderedOutput || 
null);};



var NoopInternalComponent=function(element){
this._renderedOutput = element;
this._currentElement = element === null || element === false?
ReactEmptyComponent.emptyElement:
element;};


NoopInternalComponent.prototype = {

mountComponent:function(){}, 


receiveComponent:function(element){
this._renderedOutput = element;
this._currentElement = element === null || element === false?
ReactEmptyComponent.emptyElement:
element;}, 


unmountComponent:function(){}};




var ShallowComponentWrapper=function(){};
assign(
ShallowComponentWrapper.prototype, 
ReactCompositeComponent.Mixin, {
_instantiateReactComponent:function(element){
return new NoopInternalComponent(element);}, 

_replaceNodeWithMarkupByID:function(){}, 
_renderValidatedComponent:
ReactCompositeComponent.Mixin.
_renderValidatedComponentWithoutOwnerOrContext});



ReactShallowRenderer.prototype.render = function(element, context){
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
this._render(element, transaction, context);
ReactUpdates.ReactReconcileTransaction.release(transaction);};


ReactShallowRenderer.prototype.unmount = function(){
if(this._instance){
this._instance.unmountComponent();}};



ReactShallowRenderer.prototype._render = function(element, transaction, context){
if(!this._instance){
var rootID=ReactInstanceHandles.createReactRootID();
var instance=new ShallowComponentWrapper(element.type);
instance.construct(element);

instance.mountComponent(rootID, transaction, context);

this._instance = instance;}else 
{
this._instance.receiveComponent(element, transaction, context);}};











function makeSimulator(eventType){
return function(domComponentOrNode, eventData){
var node;
if(ReactTestUtils.isDOMComponent(domComponentOrNode)){
node = domComponentOrNode.getDOMNode();}else 
if(domComponentOrNode.tagName){
node = domComponentOrNode;}


var fakeNativeEvent=new Event();
fakeNativeEvent.target = node;


var event=new SyntheticEvent(
ReactBrowserEventEmitter.eventNameDispatchConfigs[eventType], 
ReactMount.getID(node), 
fakeNativeEvent);

assign(event, eventData);
EventPropagators.accumulateTwoPhaseDispatches(event);

ReactUpdates.batchedUpdates(function(){
EventPluginHub.enqueueEvents(event);
EventPluginHub.processEventQueue();});};}




function buildSimulators(){
ReactTestUtils.Simulate = {};

var eventType;
for(eventType in ReactBrowserEventEmitter.eventNameDispatchConfigs) {




ReactTestUtils.Simulate[eventType] = makeSimulator(eventType);}}




var oldInjectEventPluginOrder=EventPluginHub.injection.injectEventPluginOrder;
EventPluginHub.injection.injectEventPluginOrder = function(){
oldInjectEventPluginOrder.apply(this, arguments);
buildSimulators();};

var oldInjectEventPlugins=EventPluginHub.injection.injectEventPluginsByName;
EventPluginHub.injection.injectEventPluginsByName = function(){
oldInjectEventPlugins.apply(this, arguments);
buildSimulators();};


buildSimulators();

















function makeNativeSimulator(eventType){
return function(domComponentOrNode, nativeEventData){
var fakeNativeEvent=new Event(eventType);
assign(fakeNativeEvent, nativeEventData);
if(ReactTestUtils.isDOMComponent(domComponentOrNode)){
ReactTestUtils.simulateNativeEventOnDOMComponent(
eventType, 
domComponentOrNode, 
fakeNativeEvent);}else 

if(!!domComponentOrNode.tagName){

ReactTestUtils.simulateNativeEventOnNode(
eventType, 
domComponentOrNode, 
fakeNativeEvent);}};}





var eventType;
for(eventType in topLevelTypes) {

var convenienceName=eventType.indexOf('top') === 0?
eventType.charAt(3).toLowerCase() + eventType.substr(4):eventType;




ReactTestUtils.SimulateNative[convenienceName] = 
makeNativeSimulator(eventType);}


module.exports = ReactTestUtils;});
__d('FastPaper/src/App',["react-native/Libraries/react-native/react-native","fluxxor/index","FastPaper/src/sidebar/index","FastPaper/src/components/Menu","FastPaper/src/pages/LoginPage","FastPaper/src/pages/ArticlesPage"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native');var 

NavigatorIOS=





React.NavigatorIOS;var StyleSheet=React.StyleSheet;var View=React.View;var Text=React.Text;var StyleSheet=React.StyleSheet;var StatusBarIOS=React.StatusBarIOS;

StatusBarIOS.setStyle('light-content');

var Fluxxor=require('fluxxor/index');
var Sidebar=require('FastPaper/src/sidebar/index');

var Menu=require('FastPaper/src/components/Menu');
var LoginPage=require('FastPaper/src/pages/LoginPage');
var ArticlesPage=require('FastPaper/src/pages/ArticlesPage');

var App=React.createClass({displayName:'App', 
mixins:[
Fluxxor.FluxMixin(React), 
Fluxxor.StoreWatchMixin('user')], 


getStateFromFlux:function(){
return {
isLoggedIn:this.getFlux().stores.user.isLoggedIn()};}, 



toggleSidebar:function(){
this.refs.sidebar.toggleMenu();}, 


componentDidMount:function(){var _this=this;
this.getFlux().actions.user.
restoreSession().
then(function(data){
if(data.isLoggedIn){
_this.refs.nav.resetTo({
title:'Articles Page', 
component:ArticlesPage, 
passProps:{
toggleSidebar:_this.toggleSidebar}});}}).




done(undefined, function(err){
console.log('[Error in App.componentDidMount]:', err);});}, 



_handleGetNavigator:function(){
return this.refs.nav;}, 


render:function(){
return (
React.createElement(Sidebar, {ref:'sidebar', 
disableGestures:!this.state.isLoggedIn, 
menu:React.createElement(Menu, {getNavigator:this._handleGetNavigator})}, 

React.createElement(NavigatorIOS, {ref:'nav', 
itemWrapperStyle:styles.navWrap, 
style:styles.nav, 
navigationBarHidden:true, 
initialRoute:{
title:'Login Page', 
component:LoginPage, 
passProps:{
toggleSidebar:this.toggleSidebar}}})));}});







var styles=StyleSheet.create({
navWrap:{
flex:1}, 

nav:{
flex:1}});



module.exports = App;});
__d('fluxxor/index',["fluxxor/lib/dispatcher","fluxxor/lib/flux","fluxxor/lib/flux_mixin","fluxxor/lib/flux_child_mixin","fluxxor/lib/store_watch_mixin","fluxxor/lib/create_store","fluxxor/version"],function(global, require, requireDynamic, requireLazy, module, exports) {  var Dispatcher=require("fluxxor/lib/dispatcher"), 
Flux=require("fluxxor/lib/flux"), 
FluxMixin=require("fluxxor/lib/flux_mixin"), 
FluxChildMixin=require("fluxxor/lib/flux_child_mixin"), 
StoreWatchMixin=require("fluxxor/lib/store_watch_mixin"), 
createStore=require("fluxxor/lib/create_store");

var Fluxxor={
Dispatcher:Dispatcher, 
Flux:Flux, 
FluxMixin:FluxMixin, 
FluxChildMixin:FluxChildMixin, 
StoreWatchMixin:StoreWatchMixin, 
createStore:createStore, 
version:require("fluxxor/version")};


module.exports = Fluxxor;});
__d('fluxxor/lib/dispatcher',["lodash/lang/clone","lodash/object/mapValues","lodash/object/forOwn","lodash/array/intersection","lodash/object/keys","lodash/collection/map","lodash/collection/forEach","lodash/collection/size","lodash/object/findKey","lodash/array/uniq"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _clone=require("lodash/lang/clone"), 
_mapValues=require("lodash/object/mapValues"), 
_forOwn=require("lodash/object/forOwn"), 
_intersection=require("lodash/array/intersection"), 
_keys=require("lodash/object/keys"), 
_map=require("lodash/collection/map"), 
_each=require("lodash/collection/forEach"), 
_size=require("lodash/collection/size"), 
_findKey=require("lodash/object/findKey"), 
_uniq=require("lodash/array/uniq");

var Dispatcher=function(stores){
this.stores = {};
this.currentDispatch = null;
this.currentActionType = null;
this.waitingToDispatch = [];

for(var key in stores) {
if(stores.hasOwnProperty(key)){
this.addStore(key, stores[key]);}}};




Dispatcher.prototype.addStore = function(name, store){
store.dispatcher = this;
this.stores[name] = store;};


Dispatcher.prototype.dispatch = function(action){
if(!action || !action.type){
throw new Error("Can only dispatch actions with a 'type' property");}


if(this.currentDispatch){
var complaint="Cannot dispatch an action ('" + action.type + "') while another action ('" + 
this.currentActionType + "') is being dispatched";
throw new Error(complaint);}


this.waitingToDispatch = _clone(this.stores);

this.currentActionType = action.type;
this.currentDispatch = _mapValues(this.stores, function(){
return {resolved:false, waitingOn:[], waitCallback:null};});


try{
this.doDispatchLoop(action);}finally 
{
this.currentActionType = null;
this.currentDispatch = null;}};



Dispatcher.prototype.doDispatchLoop = function(action){
var dispatch, canBeDispatchedTo, wasHandled=false, 
removeFromDispatchQueue=[], dispatchedThisLoop=[];

_forOwn(this.waitingToDispatch, function(value, key){
dispatch = this.currentDispatch[key];
canBeDispatchedTo = !dispatch.waitingOn.length || 
!_intersection(dispatch.waitingOn, _keys(this.waitingToDispatch)).length;
if(canBeDispatchedTo){
if(dispatch.waitCallback){
var stores=_map(dispatch.waitingOn, function(key){
return this.stores[key];}, 
this);
var fn=dispatch.waitCallback;
dispatch.waitCallback = null;
dispatch.waitingOn = [];
dispatch.resolved = true;
fn.apply(null, stores);
wasHandled = true;}else 
{
dispatch.resolved = true;
var handled=this.stores[key].__handleAction__(action);
if(handled){
wasHandled = true;}}



dispatchedThisLoop.push(key);

if(this.currentDispatch[key].resolved){
removeFromDispatchQueue.push(key);}}}, 


this);

if(_keys(this.waitingToDispatch).length && !dispatchedThisLoop.length){
var storesWithCircularWaits=_keys(this.waitingToDispatch).join(", ");
throw new Error("Indirect circular wait detected among: " + storesWithCircularWaits);}


_each(removeFromDispatchQueue, function(key){
delete this.waitingToDispatch[key];}, 
this);

if(_size(this.waitingToDispatch)){
this.doDispatchLoop(action);}


if(!wasHandled && console && console.warn){
console.warn("An action of type " + action.type + " was dispatched, but no store handled it");}};




Dispatcher.prototype.waitForStores = function(store, stores, fn){
if(!this.currentDispatch){
throw new Error("Cannot wait unless an action is being dispatched");}


var waitingStoreName=_findKey(this.stores, function(val){
return val === store;});


if(stores.indexOf(waitingStoreName) > -1){
throw new Error("A store cannot wait on itself");}


var dispatch=this.currentDispatch[waitingStoreName];

if(dispatch.waitingOn.length){
throw new Error(waitingStoreName + " already waiting on stores");}


_each(stores, function(storeName){
var storeDispatch=this.currentDispatch[storeName];
if(!this.stores[storeName]){
throw new Error("Cannot wait for non-existent store " + storeName);}

if(storeDispatch.waitingOn.indexOf(waitingStoreName) > -1){
throw new Error("Circular wait detected between " + waitingStoreName + " and " + storeName);}}, 

this);

dispatch.resolved = false;
dispatch.waitingOn = _uniq(dispatch.waitingOn.concat(stores));
dispatch.waitCallback = fn;};


module.exports = Dispatcher;});
__d('lodash/lang/clone',["lodash/internal/baseClone","lodash/internal/bindCallback","lodash/internal/isIterateeCall"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseClone=require('lodash/internal/baseClone'), 
bindCallback=require('lodash/internal/bindCallback'), 
isIterateeCall=require('lodash/internal/isIterateeCall');




















































function clone(value, isDeep, customizer, thisArg){
if(isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)){
isDeep = false;}else 

if(typeof isDeep == 'function'){
thisArg = customizer;
customizer = isDeep;
isDeep = false;}

return typeof customizer == 'function'?
baseClone(value, isDeep, bindCallback(customizer, thisArg, 1)):
baseClone(value, isDeep);}


module.exports = clone;});
__d('lodash/internal/baseClone',["lodash/internal/arrayCopy","lodash/internal/arrayEach","lodash/internal/baseAssign","lodash/internal/baseForOwn","lodash/internal/initCloneArray","lodash/internal/initCloneByTag","lodash/internal/initCloneObject","lodash/lang/isArray","lodash/lang/isObject"],function(global, require, requireDynamic, requireLazy, module, exports) {  var arrayCopy=require('lodash/internal/arrayCopy'), 
arrayEach=require('lodash/internal/arrayEach'), 
baseAssign=require('lodash/internal/baseAssign'), 
baseForOwn=require('lodash/internal/baseForOwn'), 
initCloneArray=require('lodash/internal/initCloneArray'), 
initCloneByTag=require('lodash/internal/initCloneByTag'), 
initCloneObject=require('lodash/internal/initCloneObject'), 
isArray=require('lodash/lang/isArray'), 
isObject=require('lodash/lang/isObject');


var argsTag='[object Arguments]', 
arrayTag='[object Array]', 
boolTag='[object Boolean]', 
dateTag='[object Date]', 
errorTag='[object Error]', 
funcTag='[object Function]', 
mapTag='[object Map]', 
numberTag='[object Number]', 
objectTag='[object Object]', 
regexpTag='[object RegExp]', 
setTag='[object Set]', 
stringTag='[object String]', 
weakMapTag='[object WeakMap]';

var arrayBufferTag='[object ArrayBuffer]', 
float32Tag='[object Float32Array]', 
float64Tag='[object Float64Array]', 
int8Tag='[object Int8Array]', 
int16Tag='[object Int16Array]', 
int32Tag='[object Int32Array]', 
uint8Tag='[object Uint8Array]', 
uint8ClampedTag='[object Uint8ClampedArray]', 
uint16Tag='[object Uint16Array]', 
uint32Tag='[object Uint32Array]';


var cloneableTags={};
cloneableTags[argsTag] = cloneableTags[arrayTag] = 
cloneableTags[arrayBufferTag] = cloneableTags[boolTag] = 
cloneableTags[dateTag] = cloneableTags[float32Tag] = 
cloneableTags[float64Tag] = cloneableTags[int8Tag] = 
cloneableTags[int16Tag] = cloneableTags[int32Tag] = 
cloneableTags[numberTag] = cloneableTags[objectTag] = 
cloneableTags[regexpTag] = cloneableTags[stringTag] = 
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = 
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] = 
cloneableTags[mapTag] = cloneableTags[setTag] = 
cloneableTags[weakMapTag] = false;


var objectProto=Object.prototype;





var objToString=objectProto.toString;















function baseClone(value, isDeep, customizer, key, object, stackA, stackB){
var result;
if(customizer){
result = object?customizer(value, key, object):customizer(value);}

if(result !== undefined){
return result;}

if(!isObject(value)){
return value;}

var isArr=isArray(value);
if(isArr){
result = initCloneArray(value);
if(!isDeep){
return arrayCopy(value, result);}}else 

{
var tag=objToString.call(value), 
isFunc=tag == funcTag;

if(tag == objectTag || tag == argsTag || isFunc && !object){
result = initCloneObject(isFunc?{}:value);
if(!isDeep){
return baseAssign(result, value);}}else 

{
return cloneableTags[tag]?
initCloneByTag(value, tag, isDeep):
object?value:{};}}



stackA || (stackA = []);
stackB || (stackB = []);

var length=stackA.length;
while(length--) {
if(stackA[length] == value){
return stackB[length];}}



stackA.push(value);
stackB.push(result);


(isArr?arrayEach:baseForOwn)(value, function(subValue, key){
result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);});

return result;}


module.exports = baseClone;});
__d('lodash/internal/arrayCopy',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 







arrayCopy(source, array){
var index=-1, 
length=source.length;

array || (array = Array(length));
while(++index < length) {
array[index] = source[index];}

return array;}


module.exports = arrayCopy;});
__d('lodash/internal/arrayEach',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 








arrayEach(array, iteratee){
var index=-1, 
length=array.length;

while(++index < length) {
if(iteratee(array[index], index, array) === false){
break;}}


return array;}


module.exports = arrayEach;});
__d('lodash/internal/baseAssign',["lodash/internal/baseCopy","lodash/object/keys"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseCopy=require('lodash/internal/baseCopy'), 
keys=require('lodash/object/keys');










function baseAssign(object, source){
return source == null?
object:
baseCopy(source, keys(source), object);}


module.exports = baseAssign;});
__d('lodash/internal/baseCopy',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 








baseCopy(source, props, object){
object || (object = {});

var index=-1, 
length=props.length;

while(++index < length) {
var key=props[index];
object[key] = source[key];}

return object;}


module.exports = baseCopy;});
__d('lodash/object/keys',["lodash/internal/getNative","lodash/internal/isArrayLike","lodash/lang/isObject","lodash/internal/shimKeys"],function(global, require, requireDynamic, requireLazy, module, exports) {  var getNative=require('lodash/internal/getNative'), 
isArrayLike=require('lodash/internal/isArrayLike'), 
isObject=require('lodash/lang/isObject'), 
shimKeys=require('lodash/internal/shimKeys');


var nativeKeys=getNative(Object, 'keys');




























var keys=!nativeKeys?shimKeys:function(object){
var Ctor=object == null?null:object.constructor;
if(typeof Ctor == 'function' && Ctor.prototype === object || 
typeof object != 'function' && isArrayLike(object)){
return shimKeys(object);}

return isObject(object)?nativeKeys(object):[];};


module.exports = keys;});
__d('lodash/internal/getNative',["lodash/lang/isNative"],function(global, require, requireDynamic, requireLazy, module, exports) {  var isNative=require('lodash/lang/isNative');









function getNative(object, key){
var value=object == null?undefined:object[key];
return isNative(value)?value:undefined;}


module.exports = getNative;});
__d('lodash/lang/isNative',["lodash/string/escapeRegExp","lodash/internal/isObjectLike"],function(global, require, requireDynamic, requireLazy, module, exports) {  var escapeRegExp=require('lodash/string/escapeRegExp'), 
isObjectLike=require('lodash/internal/isObjectLike');


var funcTag='[object Function]';


var reIsHostCtor=/^\[object .+?Constructor\]$/;


var objectProto=Object.prototype;


var fnToString=Function.prototype.toString;


var hasOwnProperty=objectProto.hasOwnProperty;





var objToString=objectProto.toString;


var reIsNative=RegExp('^' + 
escapeRegExp(fnToString.call(hasOwnProperty)).
replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');


















function isNative(value){
if(value == null){
return false;}

if(objToString.call(value) == funcTag){
return reIsNative.test(fnToString.call(value));}

return isObjectLike(value) && reIsHostCtor.test(value);}


module.exports = isNative;});
__d('lodash/string/escapeRegExp',["lodash/internal/baseToString"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseToString=require('lodash/internal/baseToString');






var reRegExpChars=/[.*+?^${}()|[\]\/\\]/g, 
reHasRegExpChars=RegExp(reRegExpChars.source);















function escapeRegExp(string){
string = baseToString(string);
return string && reHasRegExpChars.test(string)?
string.replace(reRegExpChars, '\\$&'):
string;}


module.exports = escapeRegExp;});
__d('lodash/internal/baseToString',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 







baseToString(value){
if(typeof value == 'string'){
return value;}

return value == null?'':value + '';}


module.exports = baseToString;});
__d('lodash/internal/isObjectLike',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 






isObjectLike(value){
return !!value && typeof value == 'object';}


module.exports = isObjectLike;});
__d('lodash/internal/isArrayLike',["lodash/internal/getLength","lodash/internal/isLength"],function(global, require, requireDynamic, requireLazy, module, exports) {  var getLength=require('lodash/internal/getLength'), 
isLength=require('lodash/internal/isLength');








function isArrayLike(value){
return value != null && isLength(getLength(value));}


module.exports = isArrayLike;});
__d('lodash/internal/getLength',["lodash/internal/baseProperty"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseProperty=require('lodash/internal/baseProperty');











var getLength=baseProperty('length');

module.exports = getLength;});
__d('lodash/internal/baseProperty',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 






baseProperty(key){
return function(object){
return object == null?undefined:object[key];};}



module.exports = baseProperty;});
__d('lodash/internal/isLength',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 



MAX_SAFE_INTEGER=9007199254740991;










function isLength(value){
return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;}


module.exports = isLength;});
__d('lodash/lang/isObject',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 



















isObject(value){


var type=typeof value;
return !!value && (type == 'object' || type == 'function');}


module.exports = isObject;});
__d('lodash/internal/shimKeys',["lodash/lang/isArguments","lodash/lang/isArray","lodash/internal/isIndex","lodash/internal/isLength","lodash/object/keysIn"],function(global, require, requireDynamic, requireLazy, module, exports) {  var isArguments=require('lodash/lang/isArguments'), 
isArray=require('lodash/lang/isArray'), 
isIndex=require('lodash/internal/isIndex'), 
isLength=require('lodash/internal/isLength'), 
keysIn=require('lodash/object/keysIn');


var objectProto=Object.prototype;


var hasOwnProperty=objectProto.hasOwnProperty;









function shimKeys(object){
var props=keysIn(object), 
propsLength=props.length, 
length=propsLength && object.length;

var allowIndexes=!!length && isLength(length) && (
isArray(object) || isArguments(object));

var index=-1, 
result=[];

while(++index < propsLength) {
var key=props[index];
if(allowIndexes && isIndex(key, length) || hasOwnProperty.call(object, key)){
result.push(key);}}


return result;}


module.exports = shimKeys;});
__d('lodash/lang/isArguments',["lodash/internal/isArrayLike","lodash/internal/isObjectLike"],function(global, require, requireDynamic, requireLazy, module, exports) {  var isArrayLike=require('lodash/internal/isArrayLike'), 
isObjectLike=require('lodash/internal/isObjectLike');


var argsTag='[object Arguments]';


var objectProto=Object.prototype;





var objToString=objectProto.toString;

















function isArguments(value){
return isObjectLike(value) && isArrayLike(value) && objToString.call(value) == argsTag;}


module.exports = isArguments;});
__d('lodash/lang/isArray',["lodash/internal/getNative","lodash/internal/isLength","lodash/internal/isObjectLike"],function(global, require, requireDynamic, requireLazy, module, exports) {  var getNative=require('lodash/internal/getNative'), 
isLength=require('lodash/internal/isLength'), 
isObjectLike=require('lodash/internal/isObjectLike');


var arrayTag='[object Array]';


var objectProto=Object.prototype;





var objToString=objectProto.toString;


var nativeIsArray=getNative(Array, 'isArray');

















var isArray=nativeIsArray || function(value){
return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;};


module.exports = isArray;});
__d('lodash/internal/isIndex',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
reIsUint=/^\d+$/;





var MAX_SAFE_INTEGER=9007199254740991;









function isIndex(value, length){
value = typeof value == 'number' || reIsUint.test(value)?+value:-1;
length = length == null?MAX_SAFE_INTEGER:length;
return value > -1 && value % 1 == 0 && value < length;}


module.exports = isIndex;});
__d('lodash/object/keysIn',["lodash/lang/isArguments","lodash/lang/isArray","lodash/internal/isIndex","lodash/internal/isLength","lodash/lang/isObject"],function(global, require, requireDynamic, requireLazy, module, exports) {  var isArguments=require('lodash/lang/isArguments'), 
isArray=require('lodash/lang/isArray'), 
isIndex=require('lodash/internal/isIndex'), 
isLength=require('lodash/internal/isLength'), 
isObject=require('lodash/lang/isObject');


var objectProto=Object.prototype;


var hasOwnProperty=objectProto.hasOwnProperty;























function keysIn(object){
if(object == null){
return [];}

if(!isObject(object)){
object = Object(object);}

var length=object.length;
length = length && isLength(length) && (
isArray(object) || isArguments(object)) && length || 0;

var Ctor=object.constructor, 
index=-1, 
isProto=typeof Ctor == 'function' && Ctor.prototype === object, 
result=Array(length), 
skipIndexes=length > 0;

while(++index < length) {
result[index] = index + '';}

for(var key in object) {
if(!(skipIndexes && isIndex(key, length)) && 
!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))){
result.push(key);}}


return result;}


module.exports = keysIn;});
__d('lodash/internal/baseForOwn',["lodash/internal/baseFor","lodash/object/keys"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseFor=require('lodash/internal/baseFor'), 
keys=require('lodash/object/keys');










function baseForOwn(object, iteratee){
return baseFor(object, iteratee, keys);}


module.exports = baseForOwn;});
__d('lodash/internal/baseFor',["lodash/internal/createBaseFor"],function(global, require, requireDynamic, requireLazy, module, exports) {  var createBaseFor=require('lodash/internal/createBaseFor');













var baseFor=createBaseFor();

module.exports = baseFor;});
__d('lodash/internal/createBaseFor',["lodash/internal/toObject"],function(global, require, requireDynamic, requireLazy, module, exports) {  var toObject=require('lodash/internal/toObject');








function createBaseFor(fromRight){
return function(object, iteratee, keysFunc){
var iterable=toObject(object), 
props=keysFunc(object), 
length=props.length, 
index=fromRight?length:-1;

while(fromRight?index--:++index < length) {
var key=props[index];
if(iteratee(iterable[key], key, iterable) === false){
break;}}


return object;};}



module.exports = createBaseFor;});
__d('lodash/internal/toObject',["lodash/lang/isObject"],function(global, require, requireDynamic, requireLazy, module, exports) {  var isObject=require('lodash/lang/isObject');








function toObject(value){
return isObject(value)?value:Object(value);}


module.exports = toObject;});
__d('lodash/internal/initCloneArray',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
objectProto=Object.prototype;


var hasOwnProperty=objectProto.hasOwnProperty;








function initCloneArray(array){
var length=array.length, 
result=new array.constructor(length);


if(length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')){
result.index = array.index;
result.input = array.input;}

return result;}


module.exports = initCloneArray;});
__d('lodash/internal/initCloneByTag',["lodash/internal/bufferClone"],function(global, require, requireDynamic, requireLazy, module, exports) {  var bufferClone=require('lodash/internal/bufferClone');


var boolTag='[object Boolean]', 
dateTag='[object Date]', 
numberTag='[object Number]', 
regexpTag='[object RegExp]', 
stringTag='[object String]';

var arrayBufferTag='[object ArrayBuffer]', 
float32Tag='[object Float32Array]', 
float64Tag='[object Float64Array]', 
int8Tag='[object Int8Array]', 
int16Tag='[object Int16Array]', 
int32Tag='[object Int32Array]', 
uint8Tag='[object Uint8Array]', 
uint8ClampedTag='[object Uint8ClampedArray]', 
uint16Tag='[object Uint16Array]', 
uint32Tag='[object Uint32Array]';


var reFlags=/\w*$/;













function initCloneByTag(object, tag, isDeep){
var Ctor=object.constructor;
switch(tag){
case arrayBufferTag:
return bufferClone(object);

case boolTag:
case dateTag:
return new Ctor(+object);

case float32Tag:case float64Tag:
case int8Tag:case int16Tag:case int32Tag:
case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:
var buffer=object.buffer;
return new Ctor(isDeep?bufferClone(buffer):buffer, object.byteOffset, object.length);

case numberTag:
case stringTag:
return new Ctor(object);

case regexpTag:
var result=new Ctor(object.source, reFlags.exec(object));
result.lastIndex = object.lastIndex;}

return result;}


module.exports = initCloneByTag;});
__d('lodash/internal/bufferClone',["lodash/utility/constant","lodash/internal/getNative"],function(global, require, requireDynamic, requireLazy, module, exports) {  var constant=require('lodash/utility/constant'), 
getNative=require('lodash/internal/getNative');


var ArrayBuffer=getNative(global, 'ArrayBuffer'), 
bufferSlice=getNative(ArrayBuffer && new ArrayBuffer(0), 'slice'), 
floor=Math.floor, 
Uint8Array=getNative(global, 'Uint8Array');


var Float64Array=(function(){



try{
var func=getNative(global, 'Float64Array'), 
result=new func(new ArrayBuffer(10), 0, 1) && func;}
catch(e) {}
return result || null;})();



var FLOAT64_BYTES_PER_ELEMENT=Float64Array?Float64Array.BYTES_PER_ELEMENT:0;








function bufferClone(buffer){
return bufferSlice.call(buffer, 0);}

if(!bufferSlice){

bufferClone = !(ArrayBuffer && Uint8Array)?constant(null):function(buffer){
var byteLength=buffer.byteLength, 
floatLength=Float64Array?floor(byteLength / FLOAT64_BYTES_PER_ELEMENT):0, 
offset=floatLength * FLOAT64_BYTES_PER_ELEMENT, 
result=new ArrayBuffer(byteLength);

if(floatLength){
var view=new Float64Array(result, 0, floatLength);
view.set(new Float64Array(buffer, 0, floatLength));}

if(byteLength != offset){
view = new Uint8Array(result, offset);
view.set(new Uint8Array(buffer, offset));}

return result;};}



module.exports = bufferClone;});
__d('lodash/utility/constant',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 















constant(value){
return function(){
return value;};}



module.exports = constant;});
__d('lodash/internal/initCloneObject',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 






initCloneObject(object){
var Ctor=object.constructor;
if(!(typeof Ctor == 'function' && Ctor instanceof Ctor)){
Ctor = Object;}

return new Ctor();}


module.exports = initCloneObject;});
__d('lodash/internal/bindCallback',["lodash/utility/identity"],function(global, require, requireDynamic, requireLazy, module, exports) {  var identity=require('lodash/utility/identity');











function bindCallback(func, thisArg, argCount){
if(typeof func != 'function'){
return identity;}

if(thisArg === undefined){
return func;}

switch(argCount){
case 1:return function(value){
return func.call(thisArg, value);};

case 3:return function(value, index, collection){
return func.call(thisArg, value, index, collection);};

case 4:return function(accumulator, value, index, collection){
return func.call(thisArg, accumulator, value, index, collection);};

case 5:return function(value, other, key, object, source){
return func.call(thisArg, value, other, key, object, source);};}


return function(){
return func.apply(thisArg, arguments);};}



module.exports = bindCallback;});
__d('lodash/utility/identity',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 














identity(value){
return value;}


module.exports = identity;});
__d('lodash/internal/isIterateeCall',["lodash/internal/isArrayLike","lodash/internal/isIndex","lodash/lang/isObject"],function(global, require, requireDynamic, requireLazy, module, exports) {  var isArrayLike=require('lodash/internal/isArrayLike'), 
isIndex=require('lodash/internal/isIndex'), 
isObject=require('lodash/lang/isObject');










function isIterateeCall(value, index, object){
if(!isObject(object)){
return false;}

var type=typeof index;
if(type == 'number'?
isArrayLike(object) && isIndex(index, object.length):
type == 'string' && index in object){
var other=object[index];
return value === value?value === other:other !== other;}

return false;}


module.exports = isIterateeCall;});
__d('lodash/object/mapValues',["lodash/internal/createObjectMapper"],function(global, require, requireDynamic, requireLazy, module, exports) {  var createObjectMapper=require('lodash/internal/createObjectMapper');










































var mapValues=createObjectMapper();

module.exports = mapValues;});
__d('lodash/internal/createObjectMapper',["lodash/internal/baseCallback","lodash/internal/baseForOwn"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseCallback=require('lodash/internal/baseCallback'), 
baseForOwn=require('lodash/internal/baseForOwn');








function createObjectMapper(isMapKeys){
return function(object, iteratee, thisArg){
var result={};
iteratee = baseCallback(iteratee, thisArg, 3);

baseForOwn(object, function(value, key, object){
var mapped=iteratee(value, key, object);
key = isMapKeys?mapped:key;
value = isMapKeys?value:mapped;
result[key] = value;});

return result;};}



module.exports = createObjectMapper;});
__d('lodash/internal/baseCallback',["lodash/internal/baseMatches","lodash/internal/baseMatchesProperty","lodash/internal/bindCallback","lodash/utility/identity","lodash/utility/property"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseMatches=require('lodash/internal/baseMatches'), 
baseMatchesProperty=require('lodash/internal/baseMatchesProperty'), 
bindCallback=require('lodash/internal/bindCallback'), 
identity=require('lodash/utility/identity'), 
property=require('lodash/utility/property');











function baseCallback(func, thisArg, argCount){
var type=typeof func;
if(type == 'function'){
return thisArg === undefined?
func:
bindCallback(func, thisArg, argCount);}

if(func == null){
return identity;}

if(type == 'object'){
return baseMatches(func);}

return thisArg === undefined?
property(func):
baseMatchesProperty(func, thisArg);}


module.exports = baseCallback;});
__d('lodash/internal/baseMatches',["lodash/internal/baseIsMatch","lodash/internal/getMatchData","lodash/internal/toObject"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseIsMatch=require('lodash/internal/baseIsMatch'), 
getMatchData=require('lodash/internal/getMatchData'), 
toObject=require('lodash/internal/toObject');








function baseMatches(source){
var matchData=getMatchData(source);
if(matchData.length == 1 && matchData[0][2]){
var key=matchData[0][0], 
value=matchData[0][1];

return function(object){
if(object == null){
return false;}

return object[key] === value && (value !== undefined || key in toObject(object));};}


return function(object){
return baseIsMatch(object, matchData);};}



module.exports = baseMatches;});
__d('lodash/internal/baseIsMatch',["lodash/internal/baseIsEqual","lodash/internal/toObject"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseIsEqual=require('lodash/internal/baseIsEqual'), 
toObject=require('lodash/internal/toObject');











function baseIsMatch(object, matchData, customizer){
var index=matchData.length, 
length=index, 
noCustomizer=!customizer;

if(object == null){
return !length;}

object = toObject(object);
while(index--) {
var data=matchData[index];
if(noCustomizer && data[2]?
data[1] !== object[data[0]]:
!(data[0] in object))
{
return false;}}


while(++index < length) {
data = matchData[index];
var key=data[0], 
objValue=object[key], 
srcValue=data[1];

if(noCustomizer && data[2]){
if(objValue === undefined && !(key in object)){
return false;}}else 

{
var result=customizer?customizer(objValue, srcValue, key):undefined;
if(!(result === undefined?baseIsEqual(srcValue, objValue, customizer, true):result)){
return false;}}}



return true;}


module.exports = baseIsMatch;});
__d('lodash/internal/baseIsEqual',["lodash/internal/baseIsEqualDeep","lodash/lang/isObject","lodash/internal/isObjectLike"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseIsEqualDeep=require('lodash/internal/baseIsEqualDeep'), 
isObject=require('lodash/lang/isObject'), 
isObjectLike=require('lodash/internal/isObjectLike');














function baseIsEqual(value, other, customizer, isLoose, stackA, stackB){
if(value === other){
return true;}

if(value == null || other == null || !isObject(value) && !isObjectLike(other)){
return value !== value && other !== other;}

return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);}


module.exports = baseIsEqual;});
__d('lodash/internal/baseIsEqualDeep',["lodash/internal/equalArrays","lodash/internal/equalByTag","lodash/internal/equalObjects","lodash/lang/isArray","lodash/lang/isTypedArray"],function(global, require, requireDynamic, requireLazy, module, exports) {  var equalArrays=require('lodash/internal/equalArrays'), 
equalByTag=require('lodash/internal/equalByTag'), 
equalObjects=require('lodash/internal/equalObjects'), 
isArray=require('lodash/lang/isArray'), 
isTypedArray=require('lodash/lang/isTypedArray');


var argsTag='[object Arguments]', 
arrayTag='[object Array]', 
objectTag='[object Object]';


var objectProto=Object.prototype;


var hasOwnProperty=objectProto.hasOwnProperty;





var objToString=objectProto.toString;
















function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB){
var objIsArr=isArray(object), 
othIsArr=isArray(other), 
objTag=arrayTag, 
othTag=arrayTag;

if(!objIsArr){
objTag = objToString.call(object);
if(objTag == argsTag){
objTag = objectTag;}else 
if(objTag != objectTag){
objIsArr = isTypedArray(object);}}


if(!othIsArr){
othTag = objToString.call(other);
if(othTag == argsTag){
othTag = objectTag;}else 
if(othTag != objectTag){
othIsArr = isTypedArray(other);}}


var objIsObj=objTag == objectTag, 
othIsObj=othTag == objectTag, 
isSameTag=objTag == othTag;

if(isSameTag && !(objIsArr || objIsObj)){
return equalByTag(object, other, objTag);}

if(!isLoose){
var objIsWrapped=objIsObj && hasOwnProperty.call(object, '__wrapped__'), 
othIsWrapped=othIsObj && hasOwnProperty.call(other, '__wrapped__');

if(objIsWrapped || othIsWrapped){
return equalFunc(objIsWrapped?object.value():object, othIsWrapped?other.value():other, customizer, isLoose, stackA, stackB);}}


if(!isSameTag){
return false;}



stackA || (stackA = []);
stackB || (stackB = []);

var length=stackA.length;
while(length--) {
if(stackA[length] == object){
return stackB[length] == other;}}



stackA.push(object);
stackB.push(other);

var result=(objIsArr?equalArrays:equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);

stackA.pop();
stackB.pop();

return result;}


module.exports = baseIsEqualDeep;});
__d('lodash/internal/equalArrays',["lodash/internal/arraySome"],function(global, require, requireDynamic, requireLazy, module, exports) {  var arraySome=require('lodash/internal/arraySome');















function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB){
var index=-1, 
arrLength=array.length, 
othLength=other.length;

if(arrLength != othLength && !(isLoose && othLength > arrLength)){
return false;}


while(++index < arrLength) {
var arrValue=array[index], 
othValue=other[index], 
result=customizer?customizer(isLoose?othValue:arrValue, isLoose?arrValue:othValue, index):undefined;

if(result !== undefined){
if(result){
continue;}

return false;}


if(isLoose){
if(!arraySome(other, function(othValue){
return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);}))
{
return false;}}else 

if(!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))){
return false;}}


return true;}


module.exports = equalArrays;});
__d('lodash/internal/arraySome',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 









arraySome(array, predicate){
var index=-1, 
length=array.length;

while(++index < length) {
if(predicate(array[index], index, array)){
return true;}}


return false;}


module.exports = arraySome;});
__d('lodash/internal/equalByTag',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
boolTag='[object Boolean]', 
dateTag='[object Date]', 
errorTag='[object Error]', 
numberTag='[object Number]', 
regexpTag='[object RegExp]', 
stringTag='[object String]';














function equalByTag(object, other, tag){
switch(tag){
case boolTag:
case dateTag:


return +object == +other;

case errorTag:
return object.name == other.name && object.message == other.message;

case numberTag:

return object != +object?
other != +other:
object == +other;

case regexpTag:
case stringTag:


return object == other + '';}

return false;}


module.exports = equalByTag;});
__d('lodash/internal/equalObjects',["lodash/object/keys"],function(global, require, requireDynamic, requireLazy, module, exports) {  var keys=require('lodash/object/keys');


var objectProto=Object.prototype;


var hasOwnProperty=objectProto.hasOwnProperty;















function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB){
var objProps=keys(object), 
objLength=objProps.length, 
othProps=keys(other), 
othLength=othProps.length;

if(objLength != othLength && !isLoose){
return false;}

var index=objLength;
while(index--) {
var key=objProps[index];
if(!(isLoose?key in other:hasOwnProperty.call(other, key))){
return false;}}


var skipCtor=isLoose;
while(++index < objLength) {
key = objProps[index];
var objValue=object[key], 
othValue=other[key], 
result=customizer?customizer(isLoose?othValue:objValue, isLoose?objValue:othValue, key):undefined;


if(!(result === undefined?equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB):result)){
return false;}

skipCtor || (skipCtor = key == 'constructor');}

if(!skipCtor){
var objCtor=object.constructor, 
othCtor=other.constructor;


if(objCtor != othCtor && (
'constructor' in object && 'constructor' in other) && 
!(typeof objCtor == 'function' && objCtor instanceof objCtor && 
typeof othCtor == 'function' && othCtor instanceof othCtor)){
return false;}}


return true;}


module.exports = equalObjects;});
__d('lodash/lang/isTypedArray',["lodash/internal/isLength","lodash/internal/isObjectLike"],function(global, require, requireDynamic, requireLazy, module, exports) {  var isLength=require('lodash/internal/isLength'), 
isObjectLike=require('lodash/internal/isObjectLike');


var argsTag='[object Arguments]', 
arrayTag='[object Array]', 
boolTag='[object Boolean]', 
dateTag='[object Date]', 
errorTag='[object Error]', 
funcTag='[object Function]', 
mapTag='[object Map]', 
numberTag='[object Number]', 
objectTag='[object Object]', 
regexpTag='[object RegExp]', 
setTag='[object Set]', 
stringTag='[object String]', 
weakMapTag='[object WeakMap]';

var arrayBufferTag='[object ArrayBuffer]', 
float32Tag='[object Float32Array]', 
float64Tag='[object Float64Array]', 
int8Tag='[object Int8Array]', 
int16Tag='[object Int16Array]', 
int32Tag='[object Int32Array]', 
uint8Tag='[object Uint8Array]', 
uint8ClampedTag='[object Uint8ClampedArray]', 
uint16Tag='[object Uint16Array]', 
uint32Tag='[object Uint32Array]';


var typedArrayTags={};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = 
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = 
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = 
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = 
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] = 
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = 
typedArrayTags[dateTag] = typedArrayTags[errorTag] = 
typedArrayTags[funcTag] = typedArrayTags[mapTag] = 
typedArrayTags[numberTag] = typedArrayTags[objectTag] = 
typedArrayTags[regexpTag] = typedArrayTags[setTag] = 
typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;


var objectProto=Object.prototype;





var objToString=objectProto.toString;

















function isTypedArray(value){
return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];}


module.exports = isTypedArray;});
__d('lodash/internal/getMatchData',["lodash/internal/isStrictComparable","lodash/object/pairs"],function(global, require, requireDynamic, requireLazy, module, exports) {  var isStrictComparable=require('lodash/internal/isStrictComparable'), 
pairs=require('lodash/object/pairs');








function getMatchData(object){
var result=pairs(object), 
length=result.length;

while(length--) {
result[length][2] = isStrictComparable(result[length][1]);}

return result;}


module.exports = getMatchData;});
__d('lodash/internal/isStrictComparable',["lodash/lang/isObject"],function(global, require, requireDynamic, requireLazy, module, exports) {  var isObject=require('lodash/lang/isObject');









function isStrictComparable(value){
return value === value && !isObject(value);}


module.exports = isStrictComparable;});
__d('lodash/object/pairs',["lodash/object/keys","lodash/internal/toObject"],function(global, require, requireDynamic, requireLazy, module, exports) {  var keys=require('lodash/object/keys'), 
toObject=require('lodash/internal/toObject');















function pairs(object){
object = toObject(object);

var index=-1, 
props=keys(object), 
length=props.length, 
result=Array(length);

while(++index < length) {
var key=props[index];
result[index] = [key, object[key]];}

return result;}


module.exports = pairs;});
__d('lodash/internal/baseMatchesProperty',["lodash/internal/baseGet","lodash/internal/baseIsEqual","lodash/internal/baseSlice","lodash/lang/isArray","lodash/internal/isKey","lodash/internal/isStrictComparable","lodash/array/last","lodash/internal/toObject","lodash/internal/toPath"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseGet=require('lodash/internal/baseGet'), 
baseIsEqual=require('lodash/internal/baseIsEqual'), 
baseSlice=require('lodash/internal/baseSlice'), 
isArray=require('lodash/lang/isArray'), 
isKey=require('lodash/internal/isKey'), 
isStrictComparable=require('lodash/internal/isStrictComparable'), 
last=require('lodash/array/last'), 
toObject=require('lodash/internal/toObject'), 
toPath=require('lodash/internal/toPath');









function baseMatchesProperty(path, srcValue){
var isArr=isArray(path), 
isCommon=isKey(path) && isStrictComparable(srcValue), 
pathKey=path + '';

path = toPath(path);
return function(object){
if(object == null){
return false;}

var key=pathKey;
object = toObject(object);
if((isArr || !isCommon) && !(key in object)){
object = path.length == 1?object:baseGet(object, baseSlice(path, 0, -1));
if(object == null){
return false;}

key = last(path);
object = toObject(object);}

return object[key] === srcValue?
srcValue !== undefined || key in object:
baseIsEqual(srcValue, object[key], undefined, true);};}



module.exports = baseMatchesProperty;});
__d('lodash/internal/baseGet',["lodash/internal/toObject"],function(global, require, requireDynamic, requireLazy, module, exports) {  var toObject=require('lodash/internal/toObject');











function baseGet(object, path, pathKey){
if(object == null){
return;}

if(pathKey !== undefined && pathKey in toObject(object)){
path = [pathKey];}

var index=0, 
length=path.length;

while(object != null && index < length) {
object = object[path[index++]];}

return index && index == length?object:undefined;}


module.exports = baseGet;});
__d('lodash/internal/baseSlice',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 








baseSlice(array, start, end){
var index=-1, 
length=array.length;

start = start == null?0:+start || 0;
if(start < 0){
start = -start > length?0:length + start;}

end = end === undefined || end > length?length:+end || 0;
if(end < 0){
end += length;}

length = start > end?0:end - start >>> 0;
start >>>= 0;

var result=Array(length);
while(++index < length) {
result[index] = array[index + start];}

return result;}


module.exports = baseSlice;});
__d('lodash/internal/isKey',["lodash/lang/isArray","lodash/internal/toObject"],function(global, require, requireDynamic, requireLazy, module, exports) {  var isArray=require('lodash/lang/isArray'), 
toObject=require('lodash/internal/toObject');


var reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/, 
reIsPlainProp=/^\w*$/;









function isKey(value, object){
var type=typeof value;
if(type == 'string' && reIsPlainProp.test(value) || type == 'number'){
return true;}

if(isArray(value)){
return false;}

var result=!reIsDeepProp.test(value);
return result || object != null && value in toObject(object);}


module.exports = isKey;});
__d('lodash/array/last',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 












last(array){
var length=array?array.length:0;
return length?array[length - 1]:undefined;}


module.exports = last;});
__d('lodash/internal/toPath',["lodash/internal/baseToString","lodash/lang/isArray"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseToString=require('lodash/internal/baseToString'), 
isArray=require('lodash/lang/isArray');


var rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g;


var reEscapeChar=/\\(\\)?/g;








function toPath(value){
if(isArray(value)){
return value;}

var result=[];
baseToString(value).replace(rePropName, function(match, number, quote, string){
result.push(quote?string.replace(reEscapeChar, '$1'):number || match);});

return result;}


module.exports = toPath;});
__d('lodash/utility/property',["lodash/internal/baseProperty","lodash/internal/basePropertyDeep","lodash/internal/isKey"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseProperty=require('lodash/internal/baseProperty'), 
basePropertyDeep=require('lodash/internal/basePropertyDeep'), 
isKey=require('lodash/internal/isKey');























function property(path){
return isKey(path)?baseProperty(path):basePropertyDeep(path);}


module.exports = property;});
__d('lodash/internal/basePropertyDeep',["lodash/internal/baseGet","lodash/internal/toPath"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseGet=require('lodash/internal/baseGet'), 
toPath=require('lodash/internal/toPath');








function basePropertyDeep(path){
var pathKey=path + '';
path = toPath(path);
return function(object){
return baseGet(object, path, pathKey);};}



module.exports = basePropertyDeep;});
__d('lodash/object/forOwn',["lodash/internal/baseForOwn","lodash/internal/createForOwn"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseForOwn=require('lodash/internal/baseForOwn'), 
createForOwn=require('lodash/internal/createForOwn');




























var forOwn=createForOwn(baseForOwn);

module.exports = forOwn;});
__d('lodash/internal/createForOwn',["lodash/internal/bindCallback"],function(global, require, requireDynamic, requireLazy, module, exports) {  var bindCallback=require('lodash/internal/bindCallback');








function createForOwn(objectFunc){
return function(object, iteratee, thisArg){
if(typeof iteratee != 'function' || thisArg !== undefined){
iteratee = bindCallback(iteratee, thisArg, 3);}

return objectFunc(object, iteratee);};}



module.exports = createForOwn;});
__d('lodash/array/intersection',["lodash/internal/baseIndexOf","lodash/internal/cacheIndexOf","lodash/internal/createCache","lodash/internal/isArrayLike","lodash/function/restParam"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseIndexOf=require('lodash/internal/baseIndexOf'), 
cacheIndexOf=require('lodash/internal/cacheIndexOf'), 
createCache=require('lodash/internal/createCache'), 
isArrayLike=require('lodash/internal/isArrayLike'), 
restParam=require('lodash/function/restParam');















var intersection=restParam(function(arrays){
var othLength=arrays.length, 
othIndex=othLength, 
caches=Array(length), 
indexOf=baseIndexOf, 
isCommon=true, 
result=[];

while(othIndex--) {
var value=arrays[othIndex] = isArrayLike(value = arrays[othIndex])?value:[];
caches[othIndex] = isCommon && value.length >= 120?createCache(othIndex && value):null;}

var array=arrays[0], 
index=-1, 
length=array?array.length:0, 
seen=caches[0];

outer: 
while(++index < length) {
value = array[index];
if((seen?cacheIndexOf(seen, value):indexOf(result, value, 0)) < 0){
var othIndex=othLength;
while(--othIndex) {
var cache=caches[othIndex];
if((cache?cacheIndexOf(cache, value):indexOf(arrays[othIndex], value, 0)) < 0){
continue outer;}}


if(seen){
seen.push(value);}

result.push(value);}}


return result;});


module.exports = intersection;});
__d('lodash/internal/baseIndexOf',["lodash/internal/indexOfNaN"],function(global, require, requireDynamic, requireLazy, module, exports) {  var indexOfNaN=require('lodash/internal/indexOfNaN');










function baseIndexOf(array, value, fromIndex){
if(value !== value){
return indexOfNaN(array, fromIndex);}

var index=fromIndex - 1, 
length=array.length;

while(++index < length) {
if(array[index] === value){
return index;}}


return -1;}


module.exports = baseIndexOf;});
__d('lodash/internal/indexOfNaN',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 








indexOfNaN(array, fromIndex, fromRight){
var length=array.length, 
index=fromIndex + (fromRight?0:-1);

while(fromRight?index--:++index < length) {
var other=array[index];
if(other !== other){
return index;}}


return -1;}


module.exports = indexOfNaN;});
__d('lodash/internal/cacheIndexOf',["lodash/lang/isObject"],function(global, require, requireDynamic, requireLazy, module, exports) {  var isObject=require('lodash/lang/isObject');










function cacheIndexOf(cache, value){
var data=cache.data, 
result=typeof value == 'string' || isObject(value)?data.set.has(value):data.hash[value];

return result?0:-1;}


module.exports = cacheIndexOf;});
__d('lodash/internal/createCache',["lodash/internal/SetCache","lodash/utility/constant","lodash/internal/getNative"],function(global, require, requireDynamic, requireLazy, module, exports) {  var SetCache=require('lodash/internal/SetCache'), 
constant=require('lodash/utility/constant'), 
getNative=require('lodash/internal/getNative');


var Set=getNative(global, 'Set');


var nativeCreate=getNative(Object, 'create');








var createCache=!(nativeCreate && Set)?constant(null):function(values){
return new SetCache(values);};


module.exports = createCache;});
__d('lodash/internal/SetCache',["lodash/internal/cachePush","lodash/internal/getNative"],function(global, require, requireDynamic, requireLazy, module, exports) {  var cachePush=require('lodash/internal/cachePush'), 
getNative=require('lodash/internal/getNative');


var Set=getNative(global, 'Set');


var nativeCreate=getNative(Object, 'create');








function SetCache(values){
var length=values?values.length:0;

this.data = {'hash':nativeCreate(null), 'set':new Set()};
while(length--) {
this.push(values[length]);}}




SetCache.prototype.push = cachePush;

module.exports = SetCache;});
__d('lodash/internal/cachePush',["lodash/lang/isObject"],function(global, require, requireDynamic, requireLazy, module, exports) {  var isObject=require('lodash/lang/isObject');









function cachePush(value){
var data=this.data;
if(typeof value == 'string' || isObject(value)){
data.set.add(value);}else 
{
data.hash[value] = true;}}



module.exports = cachePush;});
__d('lodash/function/restParam',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
FUNC_ERROR_TEXT='Expected a function';


var nativeMax=Math.max;























function restParam(func, start){
if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

start = nativeMax(start === undefined?func.length - 1:+start || 0, 0);
return function(){
var args=arguments, 
index=-1, 
length=nativeMax(args.length - start, 0), 
rest=Array(length);

while(++index < length) {
rest[index] = args[start + index];}

switch(start){
case 0:return func.call(this, rest);
case 1:return func.call(this, args[0], rest);
case 2:return func.call(this, args[0], args[1], rest);}

var otherArgs=Array(start + 1);
index = -1;
while(++index < start) {
otherArgs[index] = args[index];}

otherArgs[start] = rest;
return func.apply(this, otherArgs);};}



module.exports = restParam;});
__d('lodash/collection/map',["lodash/internal/arrayMap","lodash/internal/baseCallback","lodash/internal/baseMap","lodash/lang/isArray"],function(global, require, requireDynamic, requireLazy, module, exports) {  var arrayMap=require('lodash/internal/arrayMap'), 
baseCallback=require('lodash/internal/baseCallback'), 
baseMap=require('lodash/internal/baseMap'), 
isArray=require('lodash/lang/isArray');

























































function map(collection, iteratee, thisArg){
var func=isArray(collection)?arrayMap:baseMap;
iteratee = baseCallback(iteratee, thisArg, 3);
return func(collection, iteratee);}


module.exports = map;});
__d('lodash/internal/arrayMap',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 








arrayMap(array, iteratee){
var index=-1, 
length=array.length, 
result=Array(length);

while(++index < length) {
result[index] = iteratee(array[index], index, array);}

return result;}


module.exports = arrayMap;});
__d('lodash/internal/baseMap',["lodash/internal/baseEach","lodash/internal/isArrayLike"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseEach=require('lodash/internal/baseEach'), 
isArrayLike=require('lodash/internal/isArrayLike');










function baseMap(collection, iteratee){
var index=-1, 
result=isArrayLike(collection)?Array(collection.length):[];

baseEach(collection, function(value, key, collection){
result[++index] = iteratee(value, key, collection);});

return result;}


module.exports = baseMap;});
__d('lodash/internal/baseEach',["lodash/internal/baseForOwn","lodash/internal/createBaseEach"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseForOwn=require('lodash/internal/baseForOwn'), 
createBaseEach=require('lodash/internal/createBaseEach');










var baseEach=createBaseEach(baseForOwn);

module.exports = baseEach;});
__d('lodash/internal/createBaseEach',["lodash/internal/getLength","lodash/internal/isLength","lodash/internal/toObject"],function(global, require, requireDynamic, requireLazy, module, exports) {  var getLength=require('lodash/internal/getLength'), 
isLength=require('lodash/internal/isLength'), 
toObject=require('lodash/internal/toObject');









function createBaseEach(eachFunc, fromRight){
return function(collection, iteratee){
var length=collection?getLength(collection):0;
if(!isLength(length)){
return eachFunc(collection, iteratee);}

var index=fromRight?length:-1, 
iterable=toObject(collection);

while(fromRight?index--:++index < length) {
if(iteratee(iterable[index], index, iterable) === false){
break;}}


return collection;};}



module.exports = createBaseEach;});
__d('lodash/collection/forEach',["lodash/internal/arrayEach","lodash/internal/baseEach","lodash/internal/createForEach"],function(global, require, requireDynamic, requireLazy, module, exports) {  var arrayEach=require('lodash/internal/arrayEach'), 
baseEach=require('lodash/internal/baseEach'), 
createForEach=require('lodash/internal/createForEach');































var forEach=createForEach(arrayEach, baseEach);

module.exports = forEach;});
__d('lodash/internal/createForEach',["lodash/internal/bindCallback","lodash/lang/isArray"],function(global, require, requireDynamic, requireLazy, module, exports) {  var bindCallback=require('lodash/internal/bindCallback'), 
isArray=require('lodash/lang/isArray');









function createForEach(arrayFunc, eachFunc){
return function(collection, iteratee, thisArg){
return typeof iteratee == 'function' && thisArg === undefined && isArray(collection)?
arrayFunc(collection, iteratee):
eachFunc(collection, bindCallback(iteratee, thisArg, 3));};}



module.exports = createForEach;});
__d('lodash/collection/size',["lodash/internal/getLength","lodash/internal/isLength","lodash/object/keys"],function(global, require, requireDynamic, requireLazy, module, exports) {  var getLength=require('lodash/internal/getLength'), 
isLength=require('lodash/internal/isLength'), 
keys=require('lodash/object/keys');





















function size(collection){
var length=collection?getLength(collection):0;
return isLength(length)?length:keys(collection).length;}


module.exports = size;});
__d('lodash/object/findKey',["lodash/internal/baseForOwn","lodash/internal/createFindKey"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseForOwn=require('lodash/internal/baseForOwn'), 
createFindKey=require('lodash/internal/createFindKey');

















































var findKey=createFindKey(baseForOwn);

module.exports = findKey;});
__d('lodash/internal/createFindKey',["lodash/internal/baseCallback","lodash/internal/baseFind"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseCallback=require('lodash/internal/baseCallback'), 
baseFind=require('lodash/internal/baseFind');








function createFindKey(objectFunc){
return function(object, predicate, thisArg){
predicate = baseCallback(predicate, thisArg, 3);
return baseFind(object, predicate, objectFunc, true);};}



module.exports = createFindKey;});
__d('lodash/internal/baseFind',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 












baseFind(collection, predicate, eachFunc, retKey){
var result;
eachFunc(collection, function(value, key, collection){
if(predicate(value, key, collection)){
result = retKey?key:value;
return false;}});


return result;}


module.exports = baseFind;});
__d('lodash/array/uniq',["lodash/internal/baseCallback","lodash/internal/baseUniq","lodash/internal/isIterateeCall","lodash/internal/sortedUniq"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseCallback=require('lodash/internal/baseCallback'), 
baseUniq=require('lodash/internal/baseUniq'), 
isIterateeCall=require('lodash/internal/isIterateeCall'), 
sortedUniq=require('lodash/internal/sortedUniq');


















































function uniq(array, isSorted, iteratee, thisArg){
var length=array?array.length:0;
if(!length){
return [];}

if(isSorted != null && typeof isSorted != 'boolean'){
thisArg = iteratee;
iteratee = isIterateeCall(array, isSorted, thisArg)?null:isSorted;
isSorted = false;}

iteratee = iteratee == null?iteratee:baseCallback(iteratee, thisArg, 3);
return isSorted?
sortedUniq(array, iteratee):
baseUniq(array, iteratee);}


module.exports = uniq;});
__d('lodash/internal/baseUniq',["lodash/internal/baseIndexOf","lodash/internal/cacheIndexOf","lodash/internal/createCache"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseIndexOf=require('lodash/internal/baseIndexOf'), 
cacheIndexOf=require('lodash/internal/cacheIndexOf'), 
createCache=require('lodash/internal/createCache');










function baseUniq(array, iteratee){
var index=-1, 
indexOf=baseIndexOf, 
length=array.length, 
isCommon=true, 
isLarge=isCommon && length >= 200, 
seen=isLarge?createCache():null, 
result=[];

if(seen){
indexOf = cacheIndexOf;
isCommon = false;}else 
{
isLarge = false;
seen = iteratee?[]:result;}

outer: 
while(++index < length) {
var value=array[index], 
computed=iteratee?iteratee(value, index, array):value;

if(isCommon && value === value){
var seenIndex=seen.length;
while(seenIndex--) {
if(seen[seenIndex] === computed){
continue outer;}}


if(iteratee){
seen.push(computed);}

result.push(value);}else 

if(indexOf(seen, computed, 0) < 0){
if(iteratee || isLarge){
seen.push(computed);}

result.push(value);}}


return result;}


module.exports = baseUniq;});
__d('lodash/internal/sortedUniq',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 








sortedUniq(array, iteratee){
var seen, 
index=-1, 
length=array.length, 
resIndex=-1, 
result=[];

while(++index < length) {
var value=array[index], 
computed=iteratee?iteratee(value, index, array):value;

if(!index || seen !== computed){
seen = computed;
result[++resIndex] = value;}}


return result;}


module.exports = sortedUniq;});
__d('fluxxor/lib/flux',["eventemitter3/index","fluxxor/lib/util/inherits","object-path/index","lodash/collection/forEach","lodash/collection/reduce","lodash/lang/isFunction","lodash/lang/isString","fluxxor/lib/dispatcher"],function(global, require, requireDynamic, requireLazy, module, exports) {  var EventEmitter=require("eventemitter3/index"), 
inherits=require("fluxxor/lib/util/inherits"), 
objectPath=require("object-path/index"), 
_each=require("lodash/collection/forEach"), 
_reduce=require("lodash/collection/reduce"), 
_isFunction=require("lodash/lang/isFunction"), 
_isString=require("lodash/lang/isString");

var Dispatcher=require("fluxxor/lib/dispatcher");

var findLeaves=function(obj, path, callback){
path = path || [];

for(var key in obj) {
if(obj.hasOwnProperty(key)){
if(_isFunction(obj[key])){
callback(path.concat(key), obj[key]);}else 
{
findLeaves(obj[key], path.concat(key), callback);}}}};





var Flux=function(stores, actions){
EventEmitter.call(this);
this.dispatcher = new Dispatcher(stores);
this.actions = {};
this.stores = {};

var dispatcher=this.dispatcher;
var flux=this;
this.dispatchBinder = {
flux:flux, 
dispatch:function(type, payload){
try{
flux.emit("dispatch", type, payload);}finally 
{
dispatcher.dispatch({type:type, payload:payload});}}};




this.addActions(actions);
this.addStores(stores);};


inherits(Flux, EventEmitter);

Flux.prototype.addActions = function(actions){
findLeaves(actions, [], this.addAction.bind(this));};





Flux.prototype.addAction = function(){
if(arguments.length < 2){
throw new Error("addAction requires at least two arguments, a string (or array of strings) and a function");}


var args=Array.prototype.slice.call(arguments);

if(!_isFunction(args[args.length - 1])){
throw new Error("The last argument to addAction must be a function");}


var func=args.pop().bind(this.dispatchBinder);

if(!_isString(args[0])){
args = args[0];}


var leadingPaths=_reduce(args, function(acc, next){
if(acc){
var nextPath=acc[acc.length - 1].concat([next]);
return acc.concat([nextPath]);}else 
{
return [[next]];}}, 

null);


_each(leadingPaths, function(path){
if(_isFunction(objectPath.get(this.actions, path))){
throw new Error("An action named " + args.join(".") + " already exists");}}, 

this);


if(objectPath.get(this.actions, args)){
throw new Error("A namespace named " + args.join(".") + " already exists");}


objectPath.set(this.actions, args, func, true);};


Flux.prototype.store = function(name){
return this.stores[name];};


Flux.prototype.addStore = function(name, store){
if(name in this.stores){
throw new Error("A store named '" + name + "' already exists");}

store.flux = this;
this.stores[name] = store;
this.dispatcher.addStore(name, store);};


Flux.prototype.addStores = function(stores){
for(var key in stores) {
if(stores.hasOwnProperty(key)){
this.addStore(key, stores[key]);}}};




module.exports = Flux;});
__d('eventemitter3/index',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';









function EE(fn, context, once){
this.fn = fn;
this.context = context;
this.once = once || false;}









function EventEmitter(){}







EventEmitter.prototype._events = undefined;








EventEmitter.prototype.listeners = function listeners(event){
if(!this._events || !this._events[event])return [];
if(this._events[event].fn)return [this._events[event].fn];

for(var i=0, l=this._events[event].length, ee=new Array(l); i < l; i++) {
ee[i] = this._events[event][i].fn;}


return ee;};









EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5){
if(!this._events || !this._events[event])return false;

var listeners=this._events[event], 
len=arguments.length, 
args, 
i;

if('function' === typeof listeners.fn){
if(listeners.once)this.removeListener(event, listeners.fn, true);

switch(len){
case 1:return (listeners.fn.call(listeners.context), true);
case 2:return (listeners.fn.call(listeners.context, a1), true);
case 3:return (listeners.fn.call(listeners.context, a1, a2), true);
case 4:return (listeners.fn.call(listeners.context, a1, a2, a3), true);
case 5:return (listeners.fn.call(listeners.context, a1, a2, a3, a4), true);
case 6:return (listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true);}


for(i = 1, args = new Array(len - 1); i < len; i++) {
args[i - 1] = arguments[i];}


listeners.fn.apply(listeners.context, args);}else 
{
var length=listeners.length, 
j;

for(i = 0; i < length; i++) {
if(listeners[i].once)this.removeListener(event, listeners[i].fn, true);

switch(len){
case 1:listeners[i].fn.call(listeners[i].context);break;
case 2:listeners[i].fn.call(listeners[i].context, a1);break;
case 3:listeners[i].fn.call(listeners[i].context, a1, a2);break;
default:
if(!args)for(j = 1, args = new Array(len - 1); j < len; j++) {
args[j - 1] = arguments[j];}


listeners[i].fn.apply(listeners[i].context, args);}}}




return true;};










EventEmitter.prototype.on = function on(event, fn, context){
var listener=new EE(fn, context || this);

if(!this._events)this._events = {};
if(!this._events[event])this._events[event] = listener;else 
{
if(!this._events[event].fn)this._events[event].push(listener);else 
this._events[event] = [
this._events[event], listener];}



return this;};










EventEmitter.prototype.once = function once(event, fn, context){
var listener=new EE(fn, context || this, true);

if(!this._events)this._events = {};
if(!this._events[event])this._events[event] = listener;else 
{
if(!this._events[event].fn)this._events[event].push(listener);else 
this._events[event] = [
this._events[event], listener];}



return this;};










EventEmitter.prototype.removeListener = function removeListener(event, fn, once){
if(!this._events || !this._events[event])return this;

var listeners=this._events[event], 
events=[];

if(fn){
if(listeners.fn && (listeners.fn !== fn || once && !listeners.once)){
events.push(listeners);}

if(!listeners.fn)for(var i=0, length=listeners.length; i < length; i++) {
if(listeners[i].fn !== fn || once && !listeners[i].once){
events.push(listeners[i]);}}}







if(events.length){
this._events[event] = events.length === 1?events[0]:events;}else 
{
delete this._events[event];}


return this;};








EventEmitter.prototype.removeAllListeners = function removeAllListeners(event){
if(!this._events)return this;

if(event)delete this._events[event];else 
this._events = {};

return this;};





EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;




EventEmitter.prototype.setMaxListeners = function setMaxListeners(){
return this;};





EventEmitter.EventEmitter = EventEmitter;
EventEmitter.EventEmitter2 = EventEmitter;
EventEmitter.EventEmitter3 = EventEmitter;




module.exports = EventEmitter;});
__d('fluxxor/lib/util/inherits',[],function(global, require, requireDynamic, requireLazy, module, exports) {  if(



















typeof Object.create === 'function'){

module.exports = function inherits(ctor, superCtor){
ctor.super_ = superCtor;
ctor.prototype = Object.create(superCtor.prototype, {
constructor:{
value:ctor, 
enumerable:false, 
writable:true, 
configurable:true}});};}else 



{

module.exports = function inherits(ctor, superCtor){
ctor.super_ = superCtor;
var TempCtor=function(){};
TempCtor.prototype = superCtor.prototype;
ctor.prototype = new TempCtor();
ctor.prototype.constructor = ctor;};}});
__d('object-path/index',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (function(root, factory){
'use strict';


if(typeof module === 'object' && typeof module.exports === 'object'){
module.exports = factory();}else 
if(typeof define === 'function' && define.amd){

define([], factory);}else 
{

root.objectPath = factory();}})(

this, function(){
'use strict';

var 
toStr=Object.prototype.toString, 
_hasOwnProperty=Object.prototype.hasOwnProperty;

function isEmpty(value){
if(!value){
return true;}

if(isArray(value) && value.length === 0){
return true;}else 
{
for(var i in value) {
if(_hasOwnProperty.call(value, i)){
return false;}}


return true;}}



function toString(type){
return toStr.call(type);}


function isNumber(value){
return typeof value === 'number' || toString(value) === '[object Number]';}


function isString(obj){
return typeof obj === 'string' || toString(obj) === '[object String]';}


function isObject(obj){
return typeof obj === 'object' && toString(obj) === '[object Object]';}


function isArray(obj){
return typeof obj === 'object' && typeof obj.length === 'number' && toString(obj) === '[object Array]';}


function isBoolean(obj){
return typeof obj === 'boolean' || toString(obj) === '[object Boolean]';}


function getKey(key){
var intKey=parseInt(key);
if(intKey.toString() === key){
return intKey;}

return key;}


function set(obj, path, value, doNotReplace){
if(isNumber(path)){
path = [path];}

if(isEmpty(path)){
return obj;}

if(isString(path)){
return set(obj, path.split('.'), value, doNotReplace);}

var currentPath=getKey(path[0]);

if(path.length === 1){
var oldVal=obj[currentPath];
if(oldVal === void 0 || !doNotReplace){
obj[currentPath] = value;}

return oldVal;}


if(obj[currentPath] === void 0){
if(isNumber(currentPath)){
obj[currentPath] = [];}else 
{
obj[currentPath] = {};}}



return set(obj[currentPath], path.slice(1), value, doNotReplace);}


function del(obj, path){
if(isNumber(path)){
path = [path];}


if(isEmpty(obj)){
return void 0;}


if(isEmpty(path)){
return obj;}

if(isString(path)){
return del(obj, path.split('.'));}


var currentPath=getKey(path[0]);
var oldVal=obj[currentPath];

if(path.length === 1){
if(oldVal !== void 0){
if(isArray(obj)){
obj.splice(currentPath, 1);}else 
{
delete obj[currentPath];}}}else 


{
if(obj[currentPath] !== void 0){
return del(obj[currentPath], path.slice(1));}}



return obj;}


var objectPath={};

objectPath.ensureExists = function(obj, path, value){
return set(obj, path, value, true);};


objectPath.set = function(obj, path, value, doNotReplace){
return set(obj, path, value, doNotReplace);};


objectPath.insert = function(obj, path, value, at){
var arr=objectPath.get(obj, path);
at = ~ ~at;
if(!isArray(arr)){
arr = [];
objectPath.set(obj, path, arr);}

arr.splice(at, 0, value);};


objectPath.empty = function(obj, path){
if(isEmpty(path)){
return obj;}

if(isEmpty(obj)){
return void 0;}


var value, i;
if(!(value = objectPath.get(obj, path))){
return obj;}


if(isString(value)){
return objectPath.set(obj, path, '');}else 
if(isBoolean(value)){
return objectPath.set(obj, path, false);}else 
if(isNumber(value)){
return objectPath.set(obj, path, 0);}else 
if(isArray(value)){
value.length = 0;}else 
if(isObject(value)){
for(i in value) {
if(_hasOwnProperty.call(value, i)){
delete value[i];}}}else 


{
return objectPath.set(obj, path, null);}};



objectPath.push = function(obj, path){
var arr=objectPath.get(obj, path);
if(!isArray(arr)){
arr = [];
objectPath.set(obj, path, arr);}


arr.push.apply(arr, Array.prototype.slice.call(arguments, 2));};


objectPath.coalesce = function(obj, paths, defaultValue){
var value;

for(var i=0, len=paths.length; i < len; i++) {
if((value = objectPath.get(obj, paths[i])) !== void 0){
return value;}}



return defaultValue;};


objectPath.get = function(obj, path, defaultValue){
if(isNumber(path)){
path = [path];}

if(isEmpty(path)){
return obj;}

if(isEmpty(obj)){
return defaultValue;}

if(isString(path)){
return objectPath.get(obj, path.split('.'), defaultValue);}


var currentPath=getKey(path[0]);

if(path.length === 1){
if(obj[currentPath] === void 0){
return defaultValue;}

return obj[currentPath];}


return objectPath.get(obj[currentPath], path.slice(1), defaultValue);};


objectPath.del = function(obj, path){
return del(obj, path);};


return objectPath;});});
__d('lodash/collection/reduce',["lodash/internal/arrayReduce","lodash/internal/baseEach","lodash/internal/createReduce"],function(global, require, requireDynamic, requireLazy, module, exports) {  var arrayReduce=require('lodash/internal/arrayReduce'), 
baseEach=require('lodash/internal/baseEach'), 
createReduce=require('lodash/internal/createReduce');





































var reduce=createReduce(arrayReduce, baseEach);

module.exports = reduce;});
__d('lodash/internal/arrayReduce',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 











arrayReduce(array, iteratee, accumulator, initFromArray){
var index=-1, 
length=array.length;

if(initFromArray && length){
accumulator = array[++index];}

while(++index < length) {
accumulator = iteratee(accumulator, array[index], index, array);}

return accumulator;}


module.exports = arrayReduce;});
__d('lodash/internal/createReduce',["lodash/internal/baseCallback","lodash/internal/baseReduce","lodash/lang/isArray"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseCallback=require('lodash/internal/baseCallback'), 
baseReduce=require('lodash/internal/baseReduce'), 
isArray=require('lodash/lang/isArray');









function createReduce(arrayFunc, eachFunc){
return function(collection, iteratee, accumulator, thisArg){
var initFromArray=arguments.length < 3;
return typeof iteratee == 'function' && thisArg === undefined && isArray(collection)?
arrayFunc(collection, iteratee, accumulator, initFromArray):
baseReduce(collection, baseCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);};}



module.exports = createReduce;});
__d('lodash/internal/baseReduce',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 













baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc){
eachFunc(collection, function(value, index, collection){
accumulator = initFromCollection?(
initFromCollection = false, value):
iteratee(accumulator, value, index, collection);});

return accumulator;}


module.exports = baseReduce;});
__d('lodash/lang/isFunction',["lodash/internal/baseIsFunction","lodash/internal/getNative"],function(global, require, requireDynamic, requireLazy, module, exports) {  var baseIsFunction=require('lodash/internal/baseIsFunction'), 
getNative=require('lodash/internal/getNative');


var funcTag='[object Function]';


var objectProto=Object.prototype;





var objToString=objectProto.toString;


var Uint8Array=getNative(global, 'Uint8Array');

















var isFunction=!(baseIsFunction(/x/) || Uint8Array && !baseIsFunction(Uint8Array))?baseIsFunction:function(value){



return objToString.call(value) == funcTag;};


module.exports = isFunction;});
__d('lodash/internal/baseIsFunction',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 







baseIsFunction(value){


return typeof value == 'function' || false;}


module.exports = baseIsFunction;});
__d('lodash/lang/isString',["lodash/internal/isObjectLike"],function(global, require, requireDynamic, requireLazy, module, exports) {  var isObjectLike=require('lodash/internal/isObjectLike');


var stringTag='[object String]';


var objectProto=Object.prototype;





var objToString=objectProto.toString;

















function isString(value){
return typeof value == 'string' || isObjectLike(value) && objToString.call(value) == stringTag;}


module.exports = isString;});
__d('fluxxor/lib/flux_mixin',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var FluxMixin=function(React){
return {
componentWillMount:function(){
if(!this.props.flux && (!this.context || !this.context.flux)){
var namePart=this.constructor.displayName?" of " + this.constructor.displayName:"";
throw new Error("Could not find flux on this.props or this.context" + namePart);}}, 



childContextTypes:{
flux:React.PropTypes.object}, 


contextTypes:{
flux:React.PropTypes.object}, 


getChildContext:function(){
return {
flux:this.getFlux()};}, 



getFlux:function(){
return this.props.flux || this.context && this.context.flux;}};};




FluxMixin.componentWillMount = function(){
throw new Error("Fluxxor.FluxMixin is a function that takes React as a " + 
"parameter and returns the mixin, e.g.: mixins: [Fluxxor.FluxMixin(React)]");};


module.exports = FluxMixin;});
__d('fluxxor/lib/flux_child_mixin',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var FluxChildMixin=function(React){
return {
componentWillMount:function(){
if(console && console.warn){
var namePart=this.constructor.displayName?" in " + this.constructor.displayName:"", 
message="Fluxxor.FluxChildMixin was found in use" + namePart + ", " + 
"but has been deprecated. Use Fluxxor.FluxMixin instead.";
console.warn(message);}}, 



contextTypes:{
flux:React.PropTypes.object}, 


getFlux:function(){
return this.context.flux;}};};




FluxChildMixin.componentWillMount = function(){
throw new Error("Fluxxor.FluxChildMixin is a function that takes React as a " + 
"parameter and returns the mixin, e.g.: mixins[Fluxxor.FluxChildMixin(React)]");};


module.exports = FluxChildMixin;});
__d('fluxxor/lib/store_watch_mixin',["lodash/collection/forEach"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _each=require("lodash/collection/forEach");

var StoreWatchMixin=function(){
var storeNames=Array.prototype.slice.call(arguments);
return {
componentDidMount:function(){
var flux=this.props.flux || this.context.flux;
_each(storeNames, function(store){
flux.store(store).on("change", this._setStateFromFlux);}, 
this);}, 


componentWillUnmount:function(){
var flux=this.props.flux || this.context.flux;
_each(storeNames, function(store){
flux.store(store).removeListener("change", this._setStateFromFlux);}, 
this);}, 


_setStateFromFlux:function(){
if(this.isMounted()){
this.setState(this.getStateFromFlux());}}, 



getInitialState:function(){
return this.getStateFromFlux();}};};




StoreWatchMixin.componentWillMount = function(){
throw new Error("Fluxxor.StoreWatchMixin is a function that takes one or more " + 
"store names as parameters and returns the mixin, e.g.: " + 
"mixins: [Fluxxor.StoreWatchMixin(\"Store1\", \"Store2\")]");};


module.exports = StoreWatchMixin;});
__d('fluxxor/lib/create_store',["lodash/collection/forEach","lodash/lang/isFunction","fluxxor/lib/store","fluxxor/lib/util/inherits"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _each=require("lodash/collection/forEach"), 
_isFunction=require("lodash/lang/isFunction"), 
Store=require("fluxxor/lib/store"), 
inherits=require("fluxxor/lib/util/inherits");

var RESERVED_KEYS=["flux", "waitFor"];

var createStore=function(spec){
_each(RESERVED_KEYS, function(key){
if(spec[key]){
throw new Error("Reserved key '" + key + "' found in store definition");}});



var constructor=function(options){
options = options || {};
Store.call(this);

for(var key in spec) {
if(key === "actions"){
this.bindActions(spec[key]);}else 
if(key === "initialize"){}else 

if(_isFunction(spec[key])){
this[key] = spec[key].bind(this);}else 
{
this[key] = spec[key];}}



if(spec.initialize){
spec.initialize.call(this, options);}};



inherits(constructor, Store);
return constructor;};


module.exports = createStore;});
__d('fluxxor/lib/store',["eventemitter3/index","fluxxor/lib/util/inherits","lodash/lang/isFunction","lodash/lang/isObject"],function(global, require, requireDynamic, requireLazy, module, exports) {  var EventEmitter=require("eventemitter3/index"), 
inherits=require("fluxxor/lib/util/inherits"), 
_isFunction=require("lodash/lang/isFunction"), 
_isObject=require("lodash/lang/isObject");

function Store(dispatcher){
this.dispatcher = dispatcher;
this.__actions__ = {};
EventEmitter.call(this);}


inherits(Store, EventEmitter);

Store.prototype.__handleAction__ = function(action){
var handler;
if(!!(handler = this.__actions__[action.type])){
if(_isFunction(handler)){
handler.call(this, action.payload, action.type);}else 
if(handler && _isFunction(this[handler])){
this[handler].call(this, action.payload, action.type);}else 
{
throw new Error("The handler for action type " + action.type + " is not a function");}

return true;}else 
{
return false;}};



Store.prototype.bindActions = function(){
var actions=Array.prototype.slice.call(arguments);

if(actions.length > 1 && actions.length % 2 !== 0){
throw new Error("bindActions must take an even number of arguments.");}


var bindAction=(function(type, handler){
if(!handler){
throw new Error("The handler for action type " + type + " is falsy");}


this.__actions__[type] = handler;}).
bind(this);

if(actions.length === 1 && _isObject(actions[0])){
actions = actions[0];
for(var key in actions) {
if(actions.hasOwnProperty(key)){
bindAction(key, actions[key]);}}}else 


{
for(var i=0; i < actions.length; i += 2) {
var type=actions[i], 
handler=actions[i + 1];

if(!type){
throw new Error("Argument " + (i + 1) + " to bindActions is a falsy value");}


bindAction(type, handler);}}};




Store.prototype.waitFor = function(stores, fn){
this.dispatcher.waitForStores(this, stores, fn.bind(this));};


module.exports = Store;});
__d('fluxxor/version',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = "1.5.4";});
__d('FastPaper/src/sidebar/index',["react-native/Libraries/react-native/react-native","Dimensions","FastPaper/src/sidebar/styles","FastPaper/src/sidebar/animations","Dimensions"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};

var React=require('react-native/Libraries/react-native/react-native');
var deviceScreen=require('Dimensions').get('window');
var styles=require('FastPaper/src/sidebar/styles');
var queueAnimation=require('FastPaper/src/sidebar/animations');
var deviceScreen=require('Dimensions').get('window');var 


PanResponder=

React.PanResponder;var View=React.View;






var MENU_LEFT_OFFSET=50;
var openMenuOffset=-1 * deviceScreen.width + MENU_LEFT_OFFSET;





var hiddenMenuOffset=0;






var barrierForward=deviceScreen.width / 4;







function shouldOpenMenu(dx){
return Math.abs(dx) > barrierForward;}



var SideMenu=React.createClass({displayName:'SideMenu', 




isOpen:false, 






left:0, 






prevLeft:0, 





createResponders:function(disableGestures){
if(disableGestures || false){
this.responder = PanResponder.create({});
return;}


this.responder = PanResponder.create({
onStartShouldSetPanResponder:function(){return true;}, 
onStartShouldSetPanResponderCapture:function(){return true;}, 
onMoveShouldSetPanResponder:function(){return true;}, 
onMoveShouldSetPanResponderCapture:function(){return true;}, 
onPanResponderMove:this.handlePanResponderMove, 
onPanResponderRelease:this.handlePanResponderEnd});}, 







componentWillMount:function(){
this.createResponders(this.props.disableGestures);}, 






componentWillReceiveProps:function(nextProps){
this.createResponders(nextProps.disableGestures);}, 







updatePosition:function(){
this.sideMenu.setNativeProps({left:this.left});

var dif=Math.abs(openMenuOffset) - Math.abs(this.left);
var percentage=1 - Math.abs(dif) / Math.abs(openMenuOffset);
percentage = Math.min(percentage, 0.75);

this.statusBar.setNativeProps({
backgroundColor:'rgba(0,0,0,' + percentage + ')'});}, 









handlePanResponderMove:function(e, gestureState){
this.left = this.prevLeft + gestureState.dx;

if(this.left < 0 && this.left > openMenuOffset){
this.updatePosition();}}, 







openMenu:function(){
queueAnimation(this.props.animation);
this.left = this.props.openMenuOffset || openMenuOffset;
this.updatePosition();
this.prevLeft = this.left;
this.isOpen = true;
this.forceUpdate();}, 






closeMenu:function(){
queueAnimation(this.props.animation);
this.left = this.props.hiddenMenuOffset || hiddenMenuOffset;
this.updatePosition();
this.prevLeft = this.left;
this.isOpen = false;
this.forceUpdate();}, 






toggleMenu:function(){
if(this.isOpen){
this.closeMenu();}else 
{
this.openMenu();}}, 









handlePanResponderEnd:function(e, gestureState){
if(this.isOpen){
this.closeMenu();
return;}


if(shouldOpenMenu(this.left + gestureState.dx)){
this.openMenu();}else 
{
this.closeMenu();}


this.updatePosition();
this.prevLeft = this.left;}, 






getContentView:function(){var _this=this;
var self=this;
return (
React.createElement(View, {style:styles.frontView, 
ref:function(sideMenu){return _this.sideMenu = sideMenu;}}, 

React.Children.map(this.props.children, function(child){
return React.cloneElement(child, {
menuActions:self.getMenuActions});}), 



React.createElement(View, _extends({style:[styles.touchHandler, this.isOpen && styles.fullWidth], 
accessible:true, 
ref:function(sideMenu){return _this.sideMenu = sideMenu;}}, 
this.responder.panHandlers))));}, 









getMenuActions:function(){
return {
close:this.closeMenu, 
toggle:this.toggleMenu, 
open:this.openMenu};}, 









getMenuView:function(){
var menuActions=this.getMenuActions();

return (
React.createElement(View, {style:[styles.menu, {left:MENU_LEFT_OFFSET}]}, 
React.addons.cloneWithProps(this.props.menu, {menuActions:menuActions})));}, 




getStatusBar:function(){var _this2=this;
return (
React.createElement(View, {ref:'statusBar', 
style:[styles.statusBarBase]}, 
React.createElement(View, {ref:function(statusBar){return _this2.statusBar = statusBar;}, 
style:[styles.statusBarOverlay]})));}, 








render:function(){
return (
React.createElement(View, {style:styles.container}, 
this.getMenuView(), 
this.getContentView(), 
this.getStatusBar()));}});





SideMenu.propTypes = {
toleranceX:React.PropTypes.number, 
toleranceY:React.PropTypes.number};


SideMenu.defaultProps = {
toleranceY:10, 
toleranceX:10};


module.exports = SideMenu;});
__d('FastPaper/src/sidebar/styles',["react-native/Libraries/react-native/react-native","Dimensions"],function(global, require, requireDynamic, requireLazy, module, exports) {  var React=require('react-native/Libraries/react-native/react-native');
var deviceScreen=require('Dimensions').get('window');var 


StyleSheet=
React.StyleSheet;

module.exports = StyleSheet.create({
container:{
flex:1, 
justifyContent:'center', 
alignItems:'center'}, 

statusBarBase:{
position:'absolute', 
left:0, 
right:0, 
top:0, 
height:20, 
backgroundColor:'transparent'}, 

statusBarOverlay:{
flex:1}, 

menu:{
flex:1, 
backgroundColor:'transparent', 
position:'absolute', 

top:0, 
bottom:0, 
right:0}, 

frontView:{
flex:1, 
position:'absolute', 
left:0, 
top:0, 
backgroundColor:'#ffffff', 
width:deviceScreen.width, 
height:deviceScreen.height}, 

touchHandler:{
position:'absolute', 
height:deviceScreen.height, 
flex:1, 
backgroundColor:'transparent', 
opacity:0.2, 
width:20, 
top:65, 
right:0}, 

fullWidth:{
width:deviceScreen.width}});});
__d('FastPaper/src/sidebar/animations',["react-native/Libraries/react-native/react-native"],function(global, require, requireDynamic, requireLazy, module, exports) {  var LayoutAnimation=require('react-native/Libraries/react-native/react-native').LayoutAnimation;
var DEFAULT_ANIMATION='linear';

var animations={
layout:{
spring:{
duration:300, 
create:{
duration:300, 
type:LayoutAnimation.Types.easeInEaseOut, 
property:LayoutAnimation.Properties.opacity}, 

update:{
type:LayoutAnimation.Types.spring, 
springDamping:0.8}}, 


linear:{
duration:150, 
create:{
type:LayoutAnimation.Types.linear, 
property:LayoutAnimation.Properties.opacity}, 

update:{
type:LayoutAnimation.Types.linear, 
springDamping:0.7}}, 


easeInEaseOut:{
duration:300, 
create:{
type:LayoutAnimation.Types.easeInEaseOut, 
property:LayoutAnimation.Properties.scaleXY}, 

update:{
delay:100, 
type:LayoutAnimation.Types.easeInEaseOut}}}};





var layoutAnimationConfigs={
'spring':animations.layout.spring, 
'linear':animations.layout.linear, 
'easeInOut':animations.layout.easeInEaseOut};


module.exports = function(animation){
var _animation=layoutAnimationConfigs[animation];
if(!_animation){
_animation = layoutAnimationConfigs[DEFAULT_ANIMATION];}


LayoutAnimation.configureNext(_animation);};});
__d('FastPaper/src/components/Menu',["react-native/Libraries/react-native/react-native","fluxxor/index","Dimensions","lodash/index","FAKIconImage","FastPaper/src/components/MyText","FastPaper/src/pages/LoginPage"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var React=require("react-native/Libraries/react-native/react-native");
var Fluxxor=require("fluxxor/index");
var window=require("Dimensions").get("window");
var _=require("lodash/index");
var Icon=require("FAKIconImage");var 


AppRegistry=





React.AppRegistry;var StyleSheet=React.StyleSheet;var View=React.View;var Image=React.Image;var TouchableOpacity=React.TouchableOpacity;var SliderIOS=React.SliderIOS;

var MyText=require("FastPaper/src/components/MyText");
var LoginPage=require("FastPaper/src/pages/LoginPage");

var WPM_STEP=10;
var Menu=React.createClass({displayName:"Menu", 
mixins:[
Fluxxor.FluxMixin(React), 
Fluxxor.StoreWatchMixin("text", "settings", "user")], 


propTypes:{
menuActions:React.PropTypes.object}, 


getStateFromFlux:function(){
return {
username:this.getFlux().stores.user.getUsername(), 
wpm:this.getFlux().stores.text.getWPM(), 
themes:this.getFlux().stores.settings.getAllThemes(), 
activeThemeName:this.getFlux().stores.settings.getColorThemeName()};}, 



_handleSliderChange:function(value){
value = parseInt(value * 1000);
var newWPM=parseInt(value / WPM_STEP) * WPM_STEP;
this.setState({
wpm:newWPM});}, 



_handleSlideComplete:function(value){
value = parseInt(value * 1000);
var newWPM=parseInt(value / WPM_STEP) * WPM_STEP;
this.setState({
wpm:newWPM});


this.getFlux().actions.text.setWPM(newWPM);}, 


_handleSelectTheme:function(theme){
this.getFlux().actions.settings.setColorTheme(theme);}, 


_handleLogout:function(){var _this=this;
this.getFlux().actions.user.
logout().
finally(function(){
_this.props.getNavigator().
resetTo({
title:"Login Page", 
component:LoginPage, 
passProps:{
toggleSidebar:_this.props.menuActions.toggle}});



setTimeout(function(){
_this.props.menuActions.close();}, 
1);}).

done(undefined, function(err){
console.log("[Error in Menu._handleLogout]:", err);});}, 



shouldComponentUpdate:function(nextProps, nextState){
return nextState.username !== this.state.username || 
nextState.wpm !== this.state.wpm || 
nextState.activeThemeName !== this.state.activeThemeName;}, 


render:function(){var _this2=this;
var colors=this.state.colors;

return (
React.createElement(View, {style:styles.menu}, 
React.createElement(View, {style:[styles.rowTitle]}, 
React.createElement(MyText, {style:[styles.rowTitleText]}, "Settings")), 




React.createElement(View, {style:[styles.row, styles.rowWPM]}, 
React.createElement(MyText, {style:[styles.rowWPMLabel]}, "Words per minute: ", this.state.wpm), 

React.createElement(SliderIOS, {style:styles.rowWPMSlider, 
value:parseInt(spritz.get("wpm")) / 1000, 
minimumValue:0.1, 
maximumValue:1, 
onValueChange:this._handleSliderChange, 
onSlidingComplete:this._handleSlideComplete})), 


React.createElement(View, {style:[styles.row, styles.rowColor]}, 
React.createElement(MyText, {style:[styles.rowColorLabel]}, "Color Theme:"), 

React.createElement(View, {style:styles.rowColorChoicesWrapper}, 
_.map(this.state.themes, function(colors, themeName){
return (
React.createElement(TouchableOpacity, {onPress:_this2._handleSelectTheme.bind(_this2, themeName), 
key:themeName}, 
React.createElement(View, {style:[styles.rowColorCircle, {
backgroundColor:colors.background}, 
_this2.state.activeThemeName === themeName && styles.rowColorCircleActive]})));}))), 






React.createElement(View, {style:[styles.footer]}, 
React.createElement(View, {style:[styles.row, styles.rowProfile]}, 
React.createElement(MyText, {numberOfLines:1, 
style:[styles.rowProfileUsername]}, this.state.username), 

React.createElement(TouchableOpacity, {onPress:this._handleLogout}, 
React.createElement(Icon, {name:"ion|log-out", 
size:24, 
color:"#fff", 
style:styles.rowProfileLogoutIcon}))))));}});








var styles=StyleSheet.create({
menu:{
paddingTop:20, 
flex:1, 
height:window.height, 
backgroundColor:"#3E4046", 
flexDirection:"column"}, 


row:{
marginBottom:25, 
paddingLeft:10, 
paddingRight:10}, 


rowTitle:{
height:60, 
justifyContent:"center", 
alignItems:"center", 

marginBottom:10}, 

rowTitleText:{
color:"#fff", 
fontSize:20}, 


rowWPM:{}, 


rowWPMLabel:{
color:"#fff", 
fontSize:22}, 


rowWPMSlider:{}, 


rowColor:{}, 


rowColorLabel:{
color:"#fff", 
fontSize:22}, 


rowColorChoicesWrapper:{
flexDirection:"row", 
justifyContent:"space-around"}, 


rowColorCircle:{
shadowColor:"#000", 
shadowOffset:{width:2, height:3}, 
shadowOpacity:0.6, 

width:40, 
height:40, 
borderRadius:80, 
margin:5, 
opacity:0.8}, 

rowColorCircleActive:{
shadowOffset:{width:3, height:4}, 
shadowOpacity:0.8, 
opacity:1}, 


footer:{
flex:1, 
flexDirection:"column", 
justifyContent:"flex-end"}, 


rowProfile:{
marginBottom:0, 
height:55, 
justifyContent:"space-between", 
alignItems:"center", 
flexDirection:"row"}, 

rowProfileUsername:{
color:"#fff", 
fontSize:22, 
flex:1}, 

rowProfileLogoutIcon:{
marginRight:-10, 
width:40, 
height:60, 
marginTop:4, 
alignSelf:"flex-end"}});



module.exports = Menu;});
__d('lodash/index',[],function(global, require, requireDynamic, requireLazy, module, exports) {  ;








(function(){


var undefined;


var VERSION='3.9.3';


var BIND_FLAG=1, 
BIND_KEY_FLAG=2, 
CURRY_BOUND_FLAG=4, 
CURRY_FLAG=8, 
CURRY_RIGHT_FLAG=16, 
PARTIAL_FLAG=32, 
PARTIAL_RIGHT_FLAG=64, 
ARY_FLAG=128, 
REARG_FLAG=256;


var DEFAULT_TRUNC_LENGTH=30, 
DEFAULT_TRUNC_OMISSION='...';


var HOT_COUNT=150, 
HOT_SPAN=16;


var LAZY_DROP_WHILE_FLAG=0, 
LAZY_FILTER_FLAG=1, 
LAZY_MAP_FLAG=2;


var FUNC_ERROR_TEXT='Expected a function';


var PLACEHOLDER='__lodash_placeholder__';


var argsTag='[object Arguments]', 
arrayTag='[object Array]', 
boolTag='[object Boolean]', 
dateTag='[object Date]', 
errorTag='[object Error]', 
funcTag='[object Function]', 
mapTag='[object Map]', 
numberTag='[object Number]', 
objectTag='[object Object]', 
regexpTag='[object RegExp]', 
setTag='[object Set]', 
stringTag='[object String]', 
weakMapTag='[object WeakMap]';

var arrayBufferTag='[object ArrayBuffer]', 
float32Tag='[object Float32Array]', 
float64Tag='[object Float64Array]', 
int8Tag='[object Int8Array]', 
int16Tag='[object Int16Array]', 
int32Tag='[object Int32Array]', 
uint8Tag='[object Uint8Array]', 
uint8ClampedTag='[object Uint8ClampedArray]', 
uint16Tag='[object Uint16Array]', 
uint32Tag='[object Uint32Array]';


var reEmptyStringLeading=/\b__p \+= '';/g, 
reEmptyStringMiddle=/\b(__p \+=) '' \+/g, 
reEmptyStringTrailing=/(__e\(.*?\)|\b__t\)) \+\n'';/g;


var reEscapedHtml=/&(?:amp|lt|gt|quot|#39|#96);/g, 
reUnescapedHtml=/[&<>"'`]/g, 
reHasEscapedHtml=RegExp(reEscapedHtml.source), 
reHasUnescapedHtml=RegExp(reUnescapedHtml.source);


var reEscape=/<%-([\s\S]+?)%>/g, 
reEvaluate=/<%([\s\S]+?)%>/g, 
reInterpolate=/<%=([\s\S]+?)%>/g;


var reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/, 
reIsPlainProp=/^\w*$/, 
rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g;






var reRegExpChars=/[.*+?^${}()|[\]\/\\]/g, 
reHasRegExpChars=RegExp(reRegExpChars.source);


var reComboMark=/[\u0300-\u036f\ufe20-\ufe23]/g;


var reEscapeChar=/\\(\\)?/g;


var reEsTemplate=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;


var reFlags=/\w*$/;


var reHasHexPrefix=/^0[xX]/;


var reIsHostCtor=/^\[object .+?Constructor\]$/;


var reIsUint=/^\d+$/;


var reLatin1=/[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g;


var reNoMatch=/($^)/;


var reUnescapedString=/['\n\r\u2028\u2029\\]/g;


var reWords=(function(){
var upper='[A-Z\\xc0-\\xd6\\xd8-\\xde]', 
lower='[a-z\\xdf-\\xf6\\xf8-\\xff]+';

return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');})();



var whitespace=

' \t\u000b\f ﻿' + 


'\n\r\u2028\u2029' + 


' ᠎             　';



var contextProps=[
'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array', 
'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number', 
'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'document', 
'isFinite', 'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array', 
'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', 'window'];



var templateCounter=-1;


var typedArrayTags={};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = 
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = 
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = 
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = 
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] = 
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = 
typedArrayTags[dateTag] = typedArrayTags[errorTag] = 
typedArrayTags[funcTag] = typedArrayTags[mapTag] = 
typedArrayTags[numberTag] = typedArrayTags[objectTag] = 
typedArrayTags[regexpTag] = typedArrayTags[setTag] = 
typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;


var cloneableTags={};
cloneableTags[argsTag] = cloneableTags[arrayTag] = 
cloneableTags[arrayBufferTag] = cloneableTags[boolTag] = 
cloneableTags[dateTag] = cloneableTags[float32Tag] = 
cloneableTags[float64Tag] = cloneableTags[int8Tag] = 
cloneableTags[int16Tag] = cloneableTags[int32Tag] = 
cloneableTags[numberTag] = cloneableTags[objectTag] = 
cloneableTags[regexpTag] = cloneableTags[stringTag] = 
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = 
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] = 
cloneableTags[mapTag] = cloneableTags[setTag] = 
cloneableTags[weakMapTag] = false;


var debounceOptions={
'leading':false, 
'maxWait':0, 
'trailing':false};



var deburredLetters={
'À':'A', 'Á':'A', 'Â':'A', 'Ã':'A', 'Ä':'A', 'Å':'A', 
'à':'a', 'á':'a', 'â':'a', 'ã':'a', 'ä':'a', 'å':'a', 
'Ç':'C', 'ç':'c', 
'Ð':'D', 'ð':'d', 
'È':'E', 'É':'E', 'Ê':'E', 'Ë':'E', 
'è':'e', 'é':'e', 'ê':'e', 'ë':'e', 
'Ì':'I', 'Í':'I', 'Î':'I', 'Ï':'I', 
'ì':'i', 'í':'i', 'î':'i', 'ï':'i', 
'Ñ':'N', 'ñ':'n', 
'Ò':'O', 'Ó':'O', 'Ô':'O', 'Õ':'O', 'Ö':'O', 'Ø':'O', 
'ò':'o', 'ó':'o', 'ô':'o', 'õ':'o', 'ö':'o', 'ø':'o', 
'Ù':'U', 'Ú':'U', 'Û':'U', 'Ü':'U', 
'ù':'u', 'ú':'u', 'û':'u', 'ü':'u', 
'Ý':'Y', 'ý':'y', 'ÿ':'y', 
'Æ':'Ae', 'æ':'ae', 
'Þ':'Th', 'þ':'th', 
'ß':'ss'};



var htmlEscapes={
'&':'&amp;', 
'<':'&lt;', 
'>':'&gt;', 
'"':'&quot;', 
'\'':'&#39;', 
'`':'&#96;'};



var htmlUnescapes={
'&amp;':'&', 
'&lt;':'<', 
'&gt;':'>', 
'&quot;':'"', 
'&#39;':'\'', 
'&#96;':'`'};



var objectTypes={
'function':true, 
'object':true};



var stringEscapes={
'\\':'\\', 
'\'':'\'', 
'\n':'n', 
'\r':'r', 
'\u2028':'u2028', 
'\u2029':'u2029'};



var freeExports=objectTypes[typeof exports] && exports && !exports.nodeType && exports;


var freeModule=objectTypes[typeof module] && module && !module.nodeType && module;


var freeGlobal=freeExports && freeModule && typeof global == 'object' && global && global.Object && global;


var freeSelf=objectTypes[typeof self] && self && self.Object && self;


var freeWindow=objectTypes[typeof window] && window && window.Object && window;


var moduleExports=freeModule && freeModule.exports === freeExports && freeExports;







var root=freeGlobal || freeWindow !== (this && this.window) && freeWindow || freeSelf || this;












function baseCompareAscending(value, other){
if(value !== other){
var valIsNull=value === null, 
valIsUndef=value === undefined, 
valIsReflexive=value === value;

var othIsNull=other === null, 
othIsUndef=other === undefined, 
othIsReflexive=other === other;

if(value > other && !othIsNull || !valIsReflexive || 
valIsNull && !othIsUndef && othIsReflexive || 
valIsUndef && othIsReflexive){
return 1;}

if(value < other && !valIsNull || !othIsReflexive || 
othIsNull && !valIsUndef && valIsReflexive || 
othIsUndef && valIsReflexive){
return -1;}}


return 0;}












function baseFindIndex(array, predicate, fromRight){
var length=array.length, 
index=fromRight?length:-1;

while(fromRight?index--:++index < length) {
if(predicate(array[index], index, array)){
return index;}}


return -1;}











function baseIndexOf(array, value, fromIndex){
if(value !== value){
return indexOfNaN(array, fromIndex);}

var index=fromIndex - 1, 
length=array.length;

while(++index < length) {
if(array[index] === value){
return index;}}


return -1;}










function baseIsFunction(value){


return typeof value == 'function' || false;}










function baseToString(value){
if(typeof value == 'string'){
return value;}

return value == null?'':value + '';}











function charsLeftIndex(string, chars){
var index=-1, 
length=string.length;

while(++index < length && chars.indexOf(string.charAt(index)) > -1) {}
return index;}











function charsRightIndex(string, chars){
var index=string.length;

while(index-- && chars.indexOf(string.charAt(index)) > -1) {}
return index;}











function compareAscending(object, other){
return baseCompareAscending(object.criteria, other.criteria) || object.index - other.index;}
















function compareMultiple(object, other, orders){
var index=-1, 
objCriteria=object.criteria, 
othCriteria=other.criteria, 
length=objCriteria.length, 
ordersLength=orders.length;

while(++index < length) {
var result=baseCompareAscending(objCriteria[index], othCriteria[index]);
if(result){
if(index >= ordersLength){
return result;}

return result * (orders[index]?1:-1);}}









return object.index - other.index;}









function deburrLetter(letter){
return deburredLetters[letter];}









function escapeHtmlChar(chr){
return htmlEscapes[chr];}










function escapeStringChar(chr){
return '\\' + stringEscapes[chr];}











function indexOfNaN(array, fromIndex, fromRight){
var length=array.length, 
index=fromIndex + (fromRight?0:-1);

while(fromRight?index--:++index < length) {
var other=array[index];
if(other !== other){
return index;}}


return -1;}









function isObjectLike(value){
return !!value && typeof value == 'object';}










function isSpace(charCode){
return charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160 || charCode == 5760 || charCode == 6158 || 
charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279);}











function replaceHolders(array, placeholder){
var index=-1, 
length=array.length, 
resIndex=-1, 
result=[];

while(++index < length) {
if(array[index] === placeholder){
array[index] = PLACEHOLDER;
result[++resIndex] = index;}}


return result;}











function sortedUniq(array, iteratee){
var seen, 
index=-1, 
length=array.length, 
resIndex=-1, 
result=[];

while(++index < length) {
var value=array[index], 
computed=iteratee?iteratee(value, index, array):value;

if(!index || seen !== computed){
seen = computed;
result[++resIndex] = value;}}


return result;}










function trimmedLeftIndex(string){
var index=-1, 
length=string.length;

while(++index < length && isSpace(string.charCodeAt(index))) {}
return index;}










function trimmedRightIndex(string){
var index=string.length;

while(index-- && isSpace(string.charCodeAt(index))) {}
return index;}









function unescapeHtmlChar(chr){
return htmlUnescapes[chr];}







































function runInContext(context){




context = context?_.defaults(root.Object(), context, _.pick(root, contextProps)):root;


var Array=context.Array, 
Date=context.Date, 
Error=context.Error, 
Function=context.Function, 
Math=context.Math, 
Number=context.Number, 
Object=context.Object, 
RegExp=context.RegExp, 
String=context.String, 
TypeError=context.TypeError;


var arrayProto=Array.prototype, 
objectProto=Object.prototype, 
stringProto=String.prototype;


var document=(document = context.window)?document.document:null;


var fnToString=Function.prototype.toString;


var hasOwnProperty=objectProto.hasOwnProperty;


var idCounter=0;





var objToString=objectProto.toString;


var oldDash=context._;


var reIsNative=RegExp('^' + 
escapeRegExp(fnToString.call(hasOwnProperty)).
replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');



var ArrayBuffer=getNative(context, 'ArrayBuffer'), 
bufferSlice=getNative(ArrayBuffer && new ArrayBuffer(0), 'slice'), 
ceil=Math.ceil, 
clearTimeout=context.clearTimeout, 
floor=Math.floor, 
getPrototypeOf=getNative(Object, 'getPrototypeOf'), 
parseFloat=context.parseFloat, 
push=arrayProto.push, 
Set=getNative(context, 'Set'), 
setTimeout=context.setTimeout, 
splice=arrayProto.splice, 
Uint8Array=getNative(context, 'Uint8Array'), 
WeakMap=getNative(context, 'WeakMap');


var Float64Array=(function(){



try{
var func=getNative(context, 'Float64Array'), 
result=new func(new ArrayBuffer(10), 0, 1) && func;}
catch(e) {}
return result || null;})();



var nativeCreate=getNative(Object, 'create'), 
nativeIsArray=getNative(Array, 'isArray'), 
nativeIsFinite=context.isFinite, 
nativeKeys=getNative(Object, 'keys'), 
nativeMax=Math.max, 
nativeMin=Math.min, 
nativeNow=getNative(Date, 'now'), 
nativeNumIsFinite=getNative(Number, 'isFinite'), 
nativeParseInt=context.parseInt, 
nativeRandom=Math.random;


var NEGATIVE_INFINITY=Number.NEGATIVE_INFINITY, 
POSITIVE_INFINITY=Number.POSITIVE_INFINITY;


var MAX_ARRAY_LENGTH=4294967295, 
MAX_ARRAY_INDEX=MAX_ARRAY_LENGTH - 1, 
HALF_MAX_ARRAY_LENGTH=MAX_ARRAY_LENGTH >>> 1;


var FLOAT64_BYTES_PER_ELEMENT=Float64Array?Float64Array.BYTES_PER_ELEMENT:0;





var MAX_SAFE_INTEGER=9007199254740991;


var metaMap=WeakMap && new WeakMap();


var realNames={};

































































































function lodash(value){
if(isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)){
if(value instanceof LodashWrapper){
return value;}

if(hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')){
return wrapperClone(value);}}


return new LodashWrapper(value);}







function baseLodash(){}











function LodashWrapper(value, chainAll, actions){
this.__wrapped__ = value;
this.__actions__ = actions || [];
this.__chain__ = !!chainAll;}









var support=lodash.support = {};

(function(x){
var Ctor=function(){this.x = x;}, 
object={'0':x, 'length':x}, 
props=[];

Ctor.prototype = {'valueOf':x, 'y':x};
for(var key in new Ctor()) {props.push(key);}







try{
support.dom = document.createDocumentFragment().nodeType === 11;}
catch(e) {
support.dom = false;}})(

1, 0);










lodash.templateSettings = {







'escape':reEscape, 







'evaluate':reEvaluate, 







'interpolate':reInterpolate, 







'variable':'', 







'imports':{







'_':lodash}};











function LazyWrapper(value){
this.__wrapped__ = value;
this.__actions__ = null;
this.__dir__ = 1;
this.__dropCount__ = 0;
this.__filtered__ = false;
this.__iteratees__ = null;
this.__takeCount__ = POSITIVE_INFINITY;
this.__views__ = null;}










function lazyClone(){
var actions=this.__actions__, 
iteratees=this.__iteratees__, 
views=this.__views__, 
result=new LazyWrapper(this.__wrapped__);

result.__actions__ = actions?arrayCopy(actions):null;
result.__dir__ = this.__dir__;
result.__filtered__ = this.__filtered__;
result.__iteratees__ = iteratees?arrayCopy(iteratees):null;
result.__takeCount__ = this.__takeCount__;
result.__views__ = views?arrayCopy(views):null;
return result;}










function lazyReverse(){
if(this.__filtered__){
var result=new LazyWrapper(this);
result.__dir__ = -1;
result.__filtered__ = true;}else 
{
result = this.clone();
result.__dir__ *= -1;}

return result;}










function lazyValue(){
var array=this.__wrapped__.value();
if(!isArray(array)){
return baseWrapperValue(array, this.__actions__);}

var dir=this.__dir__, 
isRight=dir < 0, 
view=getView(0, array.length, this.__views__), 
start=view.start, 
end=view.end, 
length=end - start, 
index=isRight?end:start - 1, 
takeCount=nativeMin(length, this.__takeCount__), 
iteratees=this.__iteratees__, 
iterLength=iteratees?iteratees.length:0, 
resIndex=0, 
result=[];

outer: 
while(length-- && resIndex < takeCount) {
index += dir;

var iterIndex=-1, 
value=array[index];

while(++iterIndex < iterLength) {
var data=iteratees[iterIndex], 
iteratee=data.iteratee, 
type=data.type;

if(type == LAZY_DROP_WHILE_FLAG){
if(data.done && (isRight?index > data.index:index < data.index)){
data.count = 0;
data.done = false;}

data.index = index;
if(!data.done){
var limit=data.limit;
if(!(data.done = limit > -1?data.count++ >= limit:!iteratee(value))){
continue outer;}}}else 


{
var computed=iteratee(value);
if(type == LAZY_MAP_FLAG){
value = computed;}else 
if(!computed){
if(type == LAZY_FILTER_FLAG){
continue outer;}else 
{
break outer;}}}}




result[resIndex++] = value;}

return result;}












function MapCache(){
this.__data__ = {};}











function mapDelete(key){
return this.has(key) && delete this.__data__[key];}











function mapGet(key){
return key == '__proto__'?undefined:this.__data__[key];}











function mapHas(key){
return key != '__proto__' && hasOwnProperty.call(this.__data__, key);}












function mapSet(key, value){
if(key != '__proto__'){
this.__data__[key] = value;}

return this;}











function SetCache(values){
var length=values?values.length:0;

this.data = {'hash':nativeCreate(null), 'set':new Set()};
while(length--) {
this.push(values[length]);}}












function cacheIndexOf(cache, value){
var data=cache.data, 
result=typeof value == 'string' || isObject(value)?data.set.has(value):data.hash[value];

return result?0:-1;}










function cachePush(value){
var data=this.data;
if(typeof value == 'string' || isObject(value)){
data.set.add(value);}else 
{
data.hash[value] = true;}}













function arrayCopy(source, array){
var index=-1, 
length=source.length;

array || (array = Array(length));
while(++index < length) {
array[index] = source[index];}

return array;}











function arrayEach(array, iteratee){
var index=-1, 
length=array.length;

while(++index < length) {
if(iteratee(array[index], index, array) === false){
break;}}


return array;}











function arrayEachRight(array, iteratee){
var length=array.length;

while(length--) {
if(iteratee(array[length], length, array) === false){
break;}}


return array;}












function arrayEvery(array, predicate){
var index=-1, 
length=array.length;

while(++index < length) {
if(!predicate(array[index], index, array)){
return false;}}


return true;}













function arrayExtremum(array, iteratee, comparator, exValue){
var index=-1, 
length=array.length, 
computed=exValue, 
result=computed;

while(++index < length) {
var value=array[index], 
current=+iteratee(value);

if(comparator(current, computed)){
computed = current;
result = value;}}


return result;}











function arrayFilter(array, predicate){
var index=-1, 
length=array.length, 
resIndex=-1, 
result=[];

while(++index < length) {
var value=array[index];
if(predicate(value, index, array)){
result[++resIndex] = value;}}


return result;}











function arrayMap(array, iteratee){
var index=-1, 
length=array.length, 
result=Array(length);

while(++index < length) {
result[index] = iteratee(array[index], index, array);}

return result;}














function arrayReduce(array, iteratee, accumulator, initFromArray){
var index=-1, 
length=array.length;

if(initFromArray && length){
accumulator = array[++index];}

while(++index < length) {
accumulator = iteratee(accumulator, array[index], index, array);}

return accumulator;}














function arrayReduceRight(array, iteratee, accumulator, initFromArray){
var length=array.length;
if(initFromArray && length){
accumulator = array[--length];}

while(length--) {
accumulator = iteratee(accumulator, array[length], length, array);}

return accumulator;}












function arraySome(array, predicate){
var index=-1, 
length=array.length;

while(++index < length) {
if(predicate(array[index], index, array)){
return true;}}


return false;}









function arraySum(array){
var length=array.length, 
result=0;

while(length--) {
result += +array[length] || 0;}

return result;}










function assignDefaults(objectValue, sourceValue){
return objectValue === undefined?sourceValue:objectValue;}















function assignOwnDefaults(objectValue, sourceValue, key, object){
return objectValue === undefined || !hasOwnProperty.call(object, key)?
sourceValue:
objectValue;}













function assignWith(object, source, customizer){
var index=-1, 
props=keys(source), 
length=props.length;

while(++index < length) {
var key=props[index], 
value=object[key], 
result=customizer(value, source[key], key, object, source);

if((result === result?result !== value:value === value) || 
value === undefined && !(key in object)){
object[key] = result;}}


return object;}











function baseAssign(object, source){
return source == null?
object:
baseCopy(source, keys(source), object);}











function baseAt(collection, props){
var index=-1, 
isNil=collection == null, 
isArr=!isNil && isArrayLike(collection), 
length=isArr?collection.length:0, 
propsLength=props.length, 
result=Array(propsLength);

while(++index < propsLength) {
var key=props[index];
if(isArr){
result[index] = isIndex(key, length)?collection[key]:undefined;}else 
{
result[index] = isNil?undefined:collection[key];}}


return result;}











function baseCopy(source, props, object){
object || (object = {});

var index=-1, 
length=props.length;

while(++index < length) {
var key=props[index];
object[key] = source[key];}

return object;}












function baseCallback(func, thisArg, argCount){
var type=typeof func;
if(type == 'function'){
return thisArg === undefined?
func:
bindCallback(func, thisArg, argCount);}

if(func == null){
return identity;}

if(type == 'object'){
return baseMatches(func);}

return thisArg === undefined?
property(func):
baseMatchesProperty(func, thisArg);}
















function baseClone(value, isDeep, customizer, key, object, stackA, stackB){
var result;
if(customizer){
result = object?customizer(value, key, object):customizer(value);}

if(result !== undefined){
return result;}

if(!isObject(value)){
return value;}

var isArr=isArray(value);
if(isArr){
result = initCloneArray(value);
if(!isDeep){
return arrayCopy(value, result);}}else 

{
var tag=objToString.call(value), 
isFunc=tag == funcTag;

if(tag == objectTag || tag == argsTag || isFunc && !object){
result = initCloneObject(isFunc?{}:value);
if(!isDeep){
return baseAssign(result, value);}}else 

{
return cloneableTags[tag]?
initCloneByTag(value, tag, isDeep):
object?value:{};}}



stackA || (stackA = []);
stackB || (stackB = []);

var length=stackA.length;
while(length--) {
if(stackA[length] == value){
return stackB[length];}}



stackA.push(value);
stackB.push(result);


(isArr?arrayEach:baseForOwn)(value, function(subValue, key){
result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);});

return result;}










var baseCreate=(function(){
function object(){}
return function(prototype){
if(isObject(prototype)){
object.prototype = prototype;
var result=new object();
object.prototype = null;}

return result || {};};})();













function baseDelay(func, wait, args){
if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

return setTimeout(function(){func.apply(undefined, args);}, wait);}











function baseDifference(array, values){
var length=array?array.length:0, 
result=[];

if(!length){
return result;}

var index=-1, 
indexOf=getIndexOf(), 
isCommon=indexOf == baseIndexOf, 
cache=isCommon && values.length >= 200?createCache(values):null, 
valuesLength=values.length;

if(cache){
indexOf = cacheIndexOf;
isCommon = false;
values = cache;}

outer: 
while(++index < length) {
var value=array[index];

if(isCommon && value === value){
var valuesIndex=valuesLength;
while(valuesIndex--) {
if(values[valuesIndex] === value){
continue outer;}}


result.push(value);}else 

if(indexOf(values, value, 0) < 0){
result.push(value);}}


return result;}











var baseEach=createBaseEach(baseForOwn);










var baseEachRight=createBaseEach(baseForOwnRight, true);











function baseEvery(collection, predicate){
var result=true;
baseEach(collection, function(value, index, collection){
result = !!predicate(value, index, collection);
return result;});

return result;}














function baseExtremum(collection, iteratee, comparator, exValue){
var computed=exValue, 
result=computed;

baseEach(collection, function(value, index, collection){
var current=+iteratee(value, index, collection);
if(comparator(current, computed) || current === exValue && current === result){
computed = current;
result = value;}});


return result;}












function baseFill(array, value, start, end){
var length=array.length;

start = start == null?0:+start || 0;
if(start < 0){
start = -start > length?0:length + start;}

end = end === undefined || end > length?length:+end || 0;
if(end < 0){
end += length;}

length = start > end?0:end >>> 0;
start >>>= 0;

while(start < length) {
array[start++] = value;}

return array;}











function baseFilter(collection, predicate){
var result=[];
baseEach(collection, function(value, index, collection){
if(predicate(value, index, collection)){
result.push(value);}});


return result;}















function baseFind(collection, predicate, eachFunc, retKey){
var result;
eachFunc(collection, function(value, key, collection){
if(predicate(value, key, collection)){
result = retKey?key:value;
return false;}});


return result;}












function baseFlatten(array, isDeep, isStrict){
var index=-1, 
length=array.length, 
resIndex=-1, 
result=[];

while(++index < length) {
var value=array[index];
if(isObjectLike(value) && isArrayLike(value) && (
isStrict || isArray(value) || isArguments(value))){
if(isDeep){

value = baseFlatten(value, isDeep, isStrict);}

var valIndex=-1, 
valLength=value.length;

while(++valIndex < valLength) {
result[++resIndex] = value[valIndex];}}else 

if(!isStrict){
result[++resIndex] = value;}}


return result;}














var baseFor=createBaseFor();











var baseForRight=createBaseFor(true);










function baseForIn(object, iteratee){
return baseFor(object, iteratee, keysIn);}











function baseForOwn(object, iteratee){
return baseFor(object, iteratee, keys);}











function baseForOwnRight(object, iteratee){
return baseForRight(object, iteratee, keys);}











function baseFunctions(object, props){
var index=-1, 
length=props.length, 
resIndex=-1, 
result=[];

while(++index < length) {
var key=props[index];
if(isFunction(object[key])){
result[++resIndex] = key;}}


return result;}












function baseGet(object, path, pathKey){
if(object == null){
return;}

if(pathKey !== undefined && pathKey in toObject(object)){
path = [pathKey];}

var index=0, 
length=path.length;

while(object != null && index < length) {
object = object[path[index++]];}

return index && index == length?object:undefined;}















function baseIsEqual(value, other, customizer, isLoose, stackA, stackB){
if(value === other){
return true;}

if(value == null || other == null || !isObject(value) && !isObjectLike(other)){
return value !== value && other !== other;}

return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);}

















function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB){
var objIsArr=isArray(object), 
othIsArr=isArray(other), 
objTag=arrayTag, 
othTag=arrayTag;

if(!objIsArr){
objTag = objToString.call(object);
if(objTag == argsTag){
objTag = objectTag;}else 
if(objTag != objectTag){
objIsArr = isTypedArray(object);}}


if(!othIsArr){
othTag = objToString.call(other);
if(othTag == argsTag){
othTag = objectTag;}else 
if(othTag != objectTag){
othIsArr = isTypedArray(other);}}


var objIsObj=objTag == objectTag, 
othIsObj=othTag == objectTag, 
isSameTag=objTag == othTag;

if(isSameTag && !(objIsArr || objIsObj)){
return equalByTag(object, other, objTag);}

if(!isLoose){
var objIsWrapped=objIsObj && hasOwnProperty.call(object, '__wrapped__'), 
othIsWrapped=othIsObj && hasOwnProperty.call(other, '__wrapped__');

if(objIsWrapped || othIsWrapped){
return equalFunc(objIsWrapped?object.value():object, othIsWrapped?other.value():other, customizer, isLoose, stackA, stackB);}}


if(!isSameTag){
return false;}



stackA || (stackA = []);
stackB || (stackB = []);

var length=stackA.length;
while(length--) {
if(stackA[length] == object){
return stackB[length] == other;}}



stackA.push(object);
stackB.push(other);

var result=(objIsArr?equalArrays:equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);

stackA.pop();
stackB.pop();

return result;}












function baseIsMatch(object, matchData, customizer){
var index=matchData.length, 
length=index, 
noCustomizer=!customizer;

if(object == null){
return !length;}

object = toObject(object);
while(index--) {
var data=matchData[index];
if(noCustomizer && data[2]?
data[1] !== object[data[0]]:
!(data[0] in object))
{
return false;}}


while(++index < length) {
data = matchData[index];
var key=data[0], 
objValue=object[key], 
srcValue=data[1];

if(noCustomizer && data[2]){
if(objValue === undefined && !(key in object)){
return false;}}else 

{
var result=customizer?customizer(objValue, srcValue, key):undefined;
if(!(result === undefined?baseIsEqual(srcValue, objValue, customizer, true):result)){
return false;}}}



return true;}











function baseMap(collection, iteratee){
var index=-1, 
result=isArrayLike(collection)?Array(collection.length):[];

baseEach(collection, function(value, key, collection){
result[++index] = iteratee(value, key, collection);});

return result;}









function baseMatches(source){
var matchData=getMatchData(source);
if(matchData.length == 1 && matchData[0][2]){
var key=matchData[0][0], 
value=matchData[0][1];

return function(object){
if(object == null){
return false;}

return object[key] === value && (value !== undefined || key in toObject(object));};}


return function(object){
return baseIsMatch(object, matchData);};}











function baseMatchesProperty(path, srcValue){
var isArr=isArray(path), 
isCommon=isKey(path) && isStrictComparable(srcValue), 
pathKey=path + '';

path = toPath(path);
return function(object){
if(object == null){
return false;}

var key=pathKey;
object = toObject(object);
if((isArr || !isCommon) && !(key in object)){
object = path.length == 1?object:baseGet(object, baseSlice(path, 0, -1));
if(object == null){
return false;}

key = last(path);
object = toObject(object);}

return object[key] === srcValue?
srcValue !== undefined || key in object:
baseIsEqual(srcValue, object[key], undefined, true);};}















function baseMerge(object, source, customizer, stackA, stackB){
if(!isObject(object)){
return object;}

var isSrcArr=isArrayLike(source) && (isArray(source) || isTypedArray(source)), 
props=isSrcArr?null:keys(source);

arrayEach(props || source, function(srcValue, key){
if(props){
key = srcValue;
srcValue = source[key];}

if(isObjectLike(srcValue)){
stackA || (stackA = []);
stackB || (stackB = []);
baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);}else 

{
var value=object[key], 
result=customizer?customizer(value, srcValue, key, object, source):undefined, 
isCommon=result === undefined;

if(isCommon){
result = srcValue;}

if((result !== undefined || isSrcArr && !(key in object)) && (
isCommon || (result === result?result !== value:value === value))){
object[key] = result;}}});



return object;}

















function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB){
var length=stackA.length, 
srcValue=source[key];

while(length--) {
if(stackA[length] == srcValue){
object[key] = stackB[length];
return;}}


var value=object[key], 
result=customizer?customizer(value, srcValue, key, object, source):undefined, 
isCommon=result === undefined;

if(isCommon){
result = srcValue;
if(isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))){
result = isArray(value)?
value:
isArrayLike(value)?arrayCopy(value):[];}else 

if(isPlainObject(srcValue) || isArguments(srcValue)){
result = isArguments(value)?
toPlainObject(value):
isPlainObject(value)?value:{};}else 

{
isCommon = false;}}




stackA.push(srcValue);
stackB.push(result);

if(isCommon){

object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);}else 
if(result === result?result !== value:value === value){
object[key] = result;}}










function baseProperty(key){
return function(object){
return object == null?undefined:object[key];};}










function basePropertyDeep(path){
var pathKey=path + '';
path = toPath(path);
return function(object){
return baseGet(object, path, pathKey);};}












function basePullAt(array, indexes){
var length=array?indexes.length:0;
while(length--) {
var index=indexes[length];
if(index != previous && isIndex(index)){
var previous=index;
splice.call(array, index, 1);}}


return array;}











function baseRandom(min, max){
return min + floor(nativeRandom() * (max - min + 1));}
















function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc){
eachFunc(collection, function(value, index, collection){
accumulator = initFromCollection?(
initFromCollection = false, value):
iteratee(accumulator, value, index, collection);});

return accumulator;}










var baseSetData=!metaMap?identity:function(func, data){
metaMap.set(func, data);
return func;};











function baseSlice(array, start, end){
var index=-1, 
length=array.length;

start = start == null?0:+start || 0;
if(start < 0){
start = -start > length?0:length + start;}

end = end === undefined || end > length?length:+end || 0;
if(end < 0){
end += length;}

length = start > end?0:end - start >>> 0;
start >>>= 0;

var result=Array(length);
while(++index < length) {
result[index] = array[index + start];}

return result;}












function baseSome(collection, predicate){
var result;

baseEach(collection, function(value, index, collection){
result = predicate(value, index, collection);
return !result;});

return !!result;}












function baseSortBy(array, comparer){
var length=array.length;

array.sort(comparer);
while(length--) {
array[length] = array[length].value;}

return array;}











function baseSortByOrder(collection, iteratees, orders){
var callback=getCallback(), 
index=-1;

iteratees = arrayMap(iteratees, function(iteratee){return callback(iteratee);});

var result=baseMap(collection, function(value){
var criteria=arrayMap(iteratees, function(iteratee){return iteratee(value);});
return {'criteria':criteria, 'index':++index, 'value':value};});


return baseSortBy(result, function(object, other){
return compareMultiple(object, other, orders);});}












function baseSum(collection, iteratee){
var result=0;
baseEach(collection, function(value, index, collection){
result += +iteratee(value, index, collection) || 0;});

return result;}











function baseUniq(array, iteratee){
var index=-1, 
indexOf=getIndexOf(), 
length=array.length, 
isCommon=indexOf == baseIndexOf, 
isLarge=isCommon && length >= 200, 
seen=isLarge?createCache():null, 
result=[];

if(seen){
indexOf = cacheIndexOf;
isCommon = false;}else 
{
isLarge = false;
seen = iteratee?[]:result;}

outer: 
while(++index < length) {
var value=array[index], 
computed=iteratee?iteratee(value, index, array):value;

if(isCommon && value === value){
var seenIndex=seen.length;
while(seenIndex--) {
if(seen[seenIndex] === computed){
continue outer;}}


if(iteratee){
seen.push(computed);}

result.push(value);}else 

if(indexOf(seen, computed, 0) < 0){
if(iteratee || isLarge){
seen.push(computed);}

result.push(value);}}


return result;}












function baseValues(object, props){
var index=-1, 
length=props.length, 
result=Array(length);

while(++index < length) {
result[index] = object[props[index]];}

return result;}













function baseWhile(array, predicate, isDrop, fromRight){
var length=array.length, 
index=fromRight?length:-1;

while((fromRight?index--:++index < length) && predicate(array[index], index, array)) {}
return isDrop?
baseSlice(array, fromRight?0:index, fromRight?index + 1:length):
baseSlice(array, fromRight?index + 1:0, fromRight?length:index);}












function baseWrapperValue(value, actions){
var result=value;
if(result instanceof LazyWrapper){
result = result.value();}

var index=-1, 
length=actions.length;

while(++index < length) {
var args=[result], 
action=actions[index];

push.apply(args, action.args);
result = action.func.apply(action.thisArg, args);}

return result;}













function binaryIndex(array, value, retHighest){
var low=0, 
high=array?array.length:low;

if(typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH){
while(low < high) {
var mid=low + high >>> 1, 
computed=array[mid];

if((retHighest?computed <= value:computed < value) && computed !== null){
low = mid + 1;}else 
{
high = mid;}}


return high;}

return binaryIndexBy(array, value, identity, retHighest);}















function binaryIndexBy(array, value, iteratee, retHighest){
value = iteratee(value);

var low=0, 
high=array?array.length:0, 
valIsNaN=value !== value, 
valIsNull=value === null, 
valIsUndef=value === undefined;

while(low < high) {
var mid=floor((low + high) / 2), 
computed=iteratee(array[mid]), 
isDef=computed !== undefined, 
isReflexive=computed === computed;

if(valIsNaN){
var setLow=isReflexive || retHighest;}else 
if(valIsNull){
setLow = isReflexive && isDef && (retHighest || computed != null);}else 
if(valIsUndef){
setLow = isReflexive && (retHighest || isDef);}else 
if(computed == null){
setLow = false;}else 
{
setLow = retHighest?computed <= value:computed < value;}

if(setLow){
low = mid + 1;}else 
{
high = mid;}}


return nativeMin(high, MAX_ARRAY_INDEX);}












function bindCallback(func, thisArg, argCount){
if(typeof func != 'function'){
return identity;}

if(thisArg === undefined){
return func;}

switch(argCount){
case 1:return function(value){
return func.call(thisArg, value);};

case 3:return function(value, index, collection){
return func.call(thisArg, value, index, collection);};

case 4:return function(accumulator, value, index, collection){
return func.call(thisArg, accumulator, value, index, collection);};

case 5:return function(value, other, key, object, source){
return func.call(thisArg, value, other, key, object, source);};}


return function(){
return func.apply(thisArg, arguments);};}










function bufferClone(buffer){
return bufferSlice.call(buffer, 0);}

if(!bufferSlice){

bufferClone = !(ArrayBuffer && Uint8Array)?constant(null):function(buffer){
var byteLength=buffer.byteLength, 
floatLength=Float64Array?floor(byteLength / FLOAT64_BYTES_PER_ELEMENT):0, 
offset=floatLength * FLOAT64_BYTES_PER_ELEMENT, 
result=new ArrayBuffer(byteLength);

if(floatLength){
var view=new Float64Array(result, 0, floatLength);
view.set(new Float64Array(buffer, 0, floatLength));}

if(byteLength != offset){
view = new Uint8Array(result, offset);
view.set(new Uint8Array(buffer, offset));}

return result;};}













function composeArgs(args, partials, holders){
var holdersLength=holders.length, 
argsIndex=-1, 
argsLength=nativeMax(args.length - holdersLength, 0), 
leftIndex=-1, 
leftLength=partials.length, 
result=Array(argsLength + leftLength);

while(++leftIndex < leftLength) {
result[leftIndex] = partials[leftIndex];}

while(++argsIndex < holdersLength) {
result[holders[argsIndex]] = args[argsIndex];}

while(argsLength--) {
result[leftIndex++] = args[argsIndex++];}

return result;}












function composeArgsRight(args, partials, holders){
var holdersIndex=-1, 
holdersLength=holders.length, 
argsIndex=-1, 
argsLength=nativeMax(args.length - holdersLength, 0), 
rightIndex=-1, 
rightLength=partials.length, 
result=Array(argsLength + rightLength);

while(++argsIndex < argsLength) {
result[argsIndex] = args[argsIndex];}

var offset=argsIndex;
while(++rightIndex < rightLength) {
result[offset + rightIndex] = partials[rightIndex];}

while(++holdersIndex < holdersLength) {
result[offset + holders[holdersIndex]] = args[argsIndex++];}

return result;}















function createAggregator(setter, initializer){
return function(collection, iteratee, thisArg){
var result=initializer?initializer():{};
iteratee = getCallback(iteratee, thisArg, 3);

if(isArray(collection)){
var index=-1, 
length=collection.length;

while(++index < length) {
var value=collection[index];
setter(result, value, iteratee(value, index, collection), collection);}}else 

{
baseEach(collection, function(value, key, collection){
setter(result, value, iteratee(value, key, collection), collection);});}


return result;};}













function createAssigner(assigner){
return restParam(function(object, sources){
var index=-1, 
length=object == null?0:sources.length, 
customizer=length > 2?sources[length - 2]:undefined, 
guard=length > 2?sources[2]:undefined, 
thisArg=length > 1?sources[length - 1]:undefined;

if(typeof customizer == 'function'){
customizer = bindCallback(customizer, thisArg, 5);
length -= 2;}else 
{
customizer = typeof thisArg == 'function'?thisArg:undefined;
length -= customizer?1:0;}

if(guard && isIterateeCall(sources[0], sources[1], guard)){
customizer = length < 3?undefined:customizer;
length = 1;}

while(++index < length) {
var source=sources[index];
if(source){
assigner(object, source, customizer);}}


return object;});}











function createBaseEach(eachFunc, fromRight){
return function(collection, iteratee){
var length=collection?getLength(collection):0;
if(!isLength(length)){
return eachFunc(collection, iteratee);}

var index=fromRight?length:-1, 
iterable=toObject(collection);

while(fromRight?index--:++index < length) {
if(iteratee(iterable[index], index, iterable) === false){
break;}}


return collection;};}










function createBaseFor(fromRight){
return function(object, iteratee, keysFunc){
var iterable=toObject(object), 
props=keysFunc(object), 
length=props.length, 
index=fromRight?length:-1;

while(fromRight?index--:++index < length) {
var key=props[index];
if(iteratee(iterable[key], key, iterable) === false){
break;}}


return object;};}












function createBindWrapper(func, thisArg){
var Ctor=createCtorWrapper(func);

function wrapper(){
var fn=this && this !== root && this instanceof wrapper?Ctor:func;
return fn.apply(thisArg, arguments);}

return wrapper;}









var createCache=!(nativeCreate && Set)?constant(null):function(values){
return new SetCache(values);};










function createCompounder(callback){
return function(string){
var index=-1, 
array=words(deburr(string)), 
length=array.length, 
result='';

while(++index < length) {
result = callback(result, array[index], index);}

return result;};}











function createCtorWrapper(Ctor){
return function(){



var args=arguments;
switch(args.length){
case 0:return new Ctor();
case 1:return new Ctor(args[0]);
case 2:return new Ctor(args[0], args[1]);
case 3:return new Ctor(args[0], args[1], args[2]);
case 4:return new Ctor(args[0], args[1], args[2], args[3]);
case 5:return new Ctor(args[0], args[1], args[2], args[3], args[4]);}

var thisBinding=baseCreate(Ctor.prototype), 
result=Ctor.apply(thisBinding, args);



return isObject(result)?result:thisBinding;};}










function createCurry(flag){
function curryFunc(func, arity, guard){
if(guard && isIterateeCall(func, arity, guard)){
arity = null;}

var result=createWrapper(func, flag, null, null, null, null, null, arity);
result.placeholder = curryFunc.placeholder;
return result;}

return curryFunc;}










function createExtremum(comparator, exValue){
return function(collection, iteratee, thisArg){
if(thisArg && isIterateeCall(collection, iteratee, thisArg)){
iteratee = null;}

iteratee = getCallback(iteratee, thisArg, 3);
if(iteratee.length == 1){
collection = toIterable(collection);
var result=arrayExtremum(collection, iteratee, comparator, exValue);
if(!(collection.length && result === exValue)){
return result;}}


return baseExtremum(collection, iteratee, comparator, exValue);};}











function createFind(eachFunc, fromRight){
return function(collection, predicate, thisArg){
predicate = getCallback(predicate, thisArg, 3);
if(isArray(collection)){
var index=baseFindIndex(collection, predicate, fromRight);
return index > -1?collection[index]:undefined;}

return baseFind(collection, predicate, eachFunc);};}










function createFindIndex(fromRight){
return function(array, predicate, thisArg){
if(!(array && array.length)){
return -1;}

predicate = getCallback(predicate, thisArg, 3);
return baseFindIndex(array, predicate, fromRight);};}










function createFindKey(objectFunc){
return function(object, predicate, thisArg){
predicate = getCallback(predicate, thisArg, 3);
return baseFind(object, predicate, objectFunc, true);};}










function createFlow(fromRight){
return function(){
var wrapper, 
length=arguments.length, 
index=fromRight?length:-1, 
leftIndex=0, 
funcs=Array(length);

while(fromRight?index--:++index < length) {
var func=funcs[leftIndex++] = arguments[index];
if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

if(!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper'){
wrapper = new LodashWrapper([]);}}


index = wrapper?-1:length;
while(++index < length) {
func = funcs[index];

var funcName=getFuncName(func), 
data=funcName == 'wrapper'?getData(func):null;

if(data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1){
wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);}else 
{
wrapper = func.length == 1 && isLaziable(func)?wrapper[funcName]():wrapper.thru(func);}}


return function(){
var args=arguments;
if(wrapper && args.length == 1 && isArray(args[0])){
return wrapper.plant(args[0]).value();}

var index=0, 
result=length?funcs[index].apply(this, args):args[0];

while(++index < length) {
result = funcs[index].call(this, result);}

return result;};};}












function createForEach(arrayFunc, eachFunc){
return function(collection, iteratee, thisArg){
return typeof iteratee == 'function' && thisArg === undefined && isArray(collection)?
arrayFunc(collection, iteratee):
eachFunc(collection, bindCallback(iteratee, thisArg, 3));};}










function createForIn(objectFunc){
return function(object, iteratee, thisArg){
if(typeof iteratee != 'function' || thisArg !== undefined){
iteratee = bindCallback(iteratee, thisArg, 3);}

return objectFunc(object, iteratee, keysIn);};}










function createForOwn(objectFunc){
return function(object, iteratee, thisArg){
if(typeof iteratee != 'function' || thisArg !== undefined){
iteratee = bindCallback(iteratee, thisArg, 3);}

return objectFunc(object, iteratee);};}










function createObjectMapper(isMapKeys){
return function(object, iteratee, thisArg){
var result={};
iteratee = getCallback(iteratee, thisArg, 3);

baseForOwn(object, function(value, key, object){
var mapped=iteratee(value, key, object);
key = isMapKeys?mapped:key;
value = isMapKeys?value:mapped;
result[key] = value;});

return result;};}










function createPadDir(fromRight){
return function(string, length, chars){
string = baseToString(string);
return (fromRight?string:'') + createPadding(string, length, chars) + (fromRight?'':string);};}










function createPartial(flag){
var partialFunc=restParam(function(func, partials){
var holders=replaceHolders(partials, partialFunc.placeholder);
return createWrapper(func, flag, null, partials, holders);});

return partialFunc;}










function createReduce(arrayFunc, eachFunc){
return function(collection, iteratee, accumulator, thisArg){
var initFromArray=arguments.length < 3;
return typeof iteratee == 'function' && thisArg === undefined && isArray(collection)?
arrayFunc(collection, iteratee, accumulator, initFromArray):
baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);};}




















function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity){
var isAry=bitmask & ARY_FLAG, 
isBind=bitmask & BIND_FLAG, 
isBindKey=bitmask & BIND_KEY_FLAG, 
isCurry=bitmask & CURRY_FLAG, 
isCurryBound=bitmask & CURRY_BOUND_FLAG, 
isCurryRight=bitmask & CURRY_RIGHT_FLAG, 
Ctor=isBindKey?null:createCtorWrapper(func);

function wrapper(){


var length=arguments.length, 
index=length, 
args=Array(length);

while(index--) {
args[index] = arguments[index];}

if(partials){
args = composeArgs(args, partials, holders);}

if(partialsRight){
args = composeArgsRight(args, partialsRight, holdersRight);}

if(isCurry || isCurryRight){
var placeholder=wrapper.placeholder, 
argsHolders=replaceHolders(args, placeholder);

length -= argsHolders.length;
if(length < arity){
var newArgPos=argPos?arrayCopy(argPos):null, 
newArity=nativeMax(arity - length, 0), 
newsHolders=isCurry?argsHolders:null, 
newHoldersRight=isCurry?null:argsHolders, 
newPartials=isCurry?args:null, 
newPartialsRight=isCurry?null:args;

bitmask |= isCurry?PARTIAL_FLAG:PARTIAL_RIGHT_FLAG;
bitmask &= ~(isCurry?PARTIAL_RIGHT_FLAG:PARTIAL_FLAG);

if(!isCurryBound){
bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);}

var newData=[func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity], 
result=createHybridWrapper.apply(undefined, newData);

if(isLaziable(func)){
setData(result, newData);}

result.placeholder = placeholder;
return result;}}


var thisBinding=isBind?thisArg:this, 
fn=isBindKey?thisBinding[func]:func;

if(argPos){
args = reorder(args, argPos);}

if(isAry && ary < args.length){
args.length = ary;}

if(this && this !== root && this instanceof wrapper){
fn = Ctor || createCtorWrapper(func);}

return fn.apply(thisBinding, args);}

return wrapper;}












function createPadding(string, length, chars){
var strLength=string.length;
length = +length;

if(strLength >= length || !nativeIsFinite(length)){
return '';}

var padLength=length - strLength;
chars = chars == null?' ':chars + '';
return repeat(chars, ceil(padLength / chars.length)).slice(0, padLength);}














function createPartialWrapper(func, bitmask, thisArg, partials){
var isBind=bitmask & BIND_FLAG, 
Ctor=createCtorWrapper(func);

function wrapper(){


var argsIndex=-1, 
argsLength=arguments.length, 
leftIndex=-1, 
leftLength=partials.length, 
args=Array(argsLength + leftLength);

while(++leftIndex < leftLength) {
args[leftIndex] = partials[leftIndex];}

while(argsLength--) {
args[leftIndex++] = arguments[++argsIndex];}

var fn=this && this !== root && this instanceof wrapper?Ctor:func;
return fn.apply(isBind?thisArg:this, args);}

return wrapper;}









function createSortedIndex(retHighest){
return function(array, value, iteratee, thisArg){
var callback=getCallback(iteratee);
return iteratee == null && callback === baseCallback?
binaryIndex(array, value, retHighest):
binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);};}




























function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity){
var isBindKey=bitmask & BIND_KEY_FLAG;
if(!isBindKey && typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

var length=partials?partials.length:0;
if(!length){
bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);
partials = holders = null;}

length -= holders?holders.length:0;
if(bitmask & PARTIAL_RIGHT_FLAG){
var partialsRight=partials, 
holdersRight=holders;

partials = holders = null;}

var data=isBindKey?null:getData(func), 
newData=[func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];

if(data){
mergeData(newData, data);
bitmask = newData[1];
arity = newData[9];}

newData[9] = arity == null?
isBindKey?0:func.length:
nativeMax(arity - length, 0) || 0;

if(bitmask == BIND_FLAG){
var result=createBindWrapper(newData[0], newData[2]);}else 
if((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length){
result = createPartialWrapper.apply(undefined, newData);}else 
{
result = createHybridWrapper.apply(undefined, newData);}

var setter=data?baseSetData:setData;
return setter(result, newData);}
















function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB){
var index=-1, 
arrLength=array.length, 
othLength=other.length;

if(arrLength != othLength && !(isLoose && othLength > arrLength)){
return false;}


while(++index < arrLength) {
var arrValue=array[index], 
othValue=other[index], 
result=customizer?customizer(isLoose?othValue:arrValue, isLoose?arrValue:othValue, index):undefined;

if(result !== undefined){
if(result){
continue;}

return false;}


if(isLoose){
if(!arraySome(other, function(othValue){
return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);}))
{
return false;}}else 

if(!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))){
return false;}}


return true;}















function equalByTag(object, other, tag){
switch(tag){
case boolTag:
case dateTag:


return +object == +other;

case errorTag:
return object.name == other.name && object.message == other.message;

case numberTag:

return object != +object?
other != +other:
object == +other;

case regexpTag:
case stringTag:


return object == other + '';}

return false;}
















function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB){
var objProps=keys(object), 
objLength=objProps.length, 
othProps=keys(other), 
othLength=othProps.length;

if(objLength != othLength && !isLoose){
return false;}

var index=objLength;
while(index--) {
var key=objProps[index];
if(!(isLoose?key in other:hasOwnProperty.call(other, key))){
return false;}}


var skipCtor=isLoose;
while(++index < objLength) {
key = objProps[index];
var objValue=object[key], 
othValue=other[key], 
result=customizer?customizer(isLoose?othValue:objValue, isLoose?objValue:othValue, key):undefined;


if(!(result === undefined?equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB):result)){
return false;}

skipCtor || (skipCtor = key == 'constructor');}

if(!skipCtor){
var objCtor=object.constructor, 
othCtor=other.constructor;


if(objCtor != othCtor && (
'constructor' in object && 'constructor' in other) && 
!(typeof objCtor == 'function' && objCtor instanceof objCtor && 
typeof othCtor == 'function' && othCtor instanceof othCtor)){
return false;}}


return true;}











function getCallback(func, thisArg, argCount){
var result=lodash.callback || callback;
result = result === callback?baseCallback:result;
return argCount?result(func, thisArg, argCount):result;}









var getData=!metaMap?noop:function(func){
return metaMap.get(func);};









function getFuncName(func){
var result=func.name, 
array=realNames[result], 
length=array?array.length:0;

while(length--) {
var data=array[length], 
otherFunc=data.func;
if(otherFunc == null || otherFunc == func){
return data.name;}}


return result;}











function getIndexOf(collection, target, fromIndex){
var result=lodash.indexOf || indexOf;
result = result === indexOf?baseIndexOf:result;
return collection?result(collection, target, fromIndex):result;}












var getLength=baseProperty('length');








function getMatchData(object){
var result=pairs(object), 
length=result.length;

while(length--) {
result[length][2] = isStrictComparable(result[length][1]);}

return result;}










function getNative(object, key){
var value=object == null?undefined:object[key];
return isNative(value)?value:undefined;}












function getView(start, end, transforms){
var index=-1, 
length=transforms?transforms.length:0;

while(++index < length) {
var data=transforms[index], 
size=data.size;

switch(data.type){
case 'drop':start += size;break;
case 'dropRight':end -= size;break;
case 'take':end = nativeMin(end, start + size);break;
case 'takeRight':start = nativeMax(start, end - size);break;}}


return {'start':start, 'end':end};}









function initCloneArray(array){
var length=array.length, 
result=new array.constructor(length);


if(length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')){
result.index = array.index;
result.input = array.input;}

return result;}









function initCloneObject(object){
var Ctor=object.constructor;
if(!(typeof Ctor == 'function' && Ctor instanceof Ctor)){
Ctor = Object;}

return new Ctor();}














function initCloneByTag(object, tag, isDeep){
var Ctor=object.constructor;
switch(tag){
case arrayBufferTag:
return bufferClone(object);

case boolTag:
case dateTag:
return new Ctor(+object);

case float32Tag:case float64Tag:
case int8Tag:case int16Tag:case int32Tag:
case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:
var buffer=object.buffer;
return new Ctor(isDeep?bufferClone(buffer):buffer, object.byteOffset, object.length);

case numberTag:
case stringTag:
return new Ctor(object);

case regexpTag:
var result=new Ctor(object.source, reFlags.exec(object));
result.lastIndex = object.lastIndex;}

return result;}











function invokePath(object, path, args){
if(object != null && !isKey(path, object)){
path = toPath(path);
object = path.length == 1?object:baseGet(object, baseSlice(path, 0, -1));
path = last(path);}

var func=object == null?object:object[path];
return func == null?undefined:func.apply(object, args);}









function isArrayLike(value){
return value != null && isLength(getLength(value));}










function isIndex(value, length){
value = typeof value == 'number' || reIsUint.test(value)?+value:-1;
length = length == null?MAX_SAFE_INTEGER:length;
return value > -1 && value % 1 == 0 && value < length;}











function isIterateeCall(value, index, object){
if(!isObject(object)){
return false;}

var type=typeof index;
if(type == 'number'?
isArrayLike(object) && isIndex(index, object.length):
type == 'string' && index in object){
var other=object[index];
return value === value?value === other:other !== other;}

return false;}










function isKey(value, object){
var type=typeof value;
if(type == 'string' && reIsPlainProp.test(value) || type == 'number'){
return true;}

if(isArray(value)){
return false;}

var result=!reIsDeepProp.test(value);
return result || object != null && value in toObject(object);}









function isLaziable(func){
var funcName=getFuncName(func);
if(!(funcName in LazyWrapper.prototype)){
return false;}

var other=lodash[funcName];
if(func === other){
return true;}

var data=getData(other);
return !!data && func === data[0];}











function isLength(value){
return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;}










function isStrictComparable(value){
return value === value && !isObject(value);}

















function mergeData(data, source){
var bitmask=data[1], 
srcBitmask=source[1], 
newBitmask=bitmask | srcBitmask, 
isCommon=newBitmask < ARY_FLAG;

var isCombo=
srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG || 
srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8] || 
srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG;


if(!(isCommon || isCombo)){
return data;}


if(srcBitmask & BIND_FLAG){
data[2] = source[2];

newBitmask |= bitmask & BIND_FLAG?0:CURRY_BOUND_FLAG;}


var value=source[3];
if(value){
var partials=data[3];
data[3] = partials?composeArgs(partials, value, source[4]):arrayCopy(value);
data[4] = partials?replaceHolders(data[3], PLACEHOLDER):arrayCopy(source[4]);}


value = source[5];
if(value){
partials = data[5];
data[5] = partials?composeArgsRight(partials, value, source[6]):arrayCopy(value);
data[6] = partials?replaceHolders(data[5], PLACEHOLDER):arrayCopy(source[6]);}


value = source[7];
if(value){
data[7] = arrayCopy(value);}


if(srcBitmask & ARY_FLAG){
data[8] = data[8] == null?source[8]:nativeMin(data[8], source[8]);}


if(data[9] == null){
data[9] = source[9];}


data[0] = source[0];
data[1] = newBitmask;

return data;}











function pickByArray(object, props){
object = toObject(object);

var index=-1, 
length=props.length, 
result={};

while(++index < length) {
var key=props[index];
if(key in object){
result[key] = object[key];}}


return result;}











function pickByCallback(object, predicate){
var result={};
baseForIn(object, function(value, key, object){
if(predicate(value, key, object)){
result[key] = value;}});


return result;}












function reorder(array, indexes){
var arrLength=array.length, 
length=nativeMin(indexes.length, arrLength), 
oldArray=arrayCopy(array);

while(length--) {
var index=indexes[length];
array[length] = isIndex(index, arrLength)?oldArray[index]:undefined;}

return array;}















var setData=(function(){
var count=0, 
lastCalled=0;

return function(key, value){
var stamp=now(), 
remaining=HOT_SPAN - (stamp - lastCalled);

lastCalled = stamp;
if(remaining > 0){
if(++count >= HOT_COUNT){
return key;}}else 

{
count = 0;}

return baseSetData(key, value);};})();












function shimIsPlainObject(value){
var Ctor, 
support=lodash.support;


if(!(isObjectLike(value) && objToString.call(value) == objectTag) || 
!hasOwnProperty.call(value, 'constructor') && (
Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor))){
return false;}




var result;



baseForIn(value, function(subValue, key){
result = key;});

return result === undefined || hasOwnProperty.call(value, result);}










function shimKeys(object){
var props=keysIn(object), 
propsLength=props.length, 
length=propsLength && object.length;

var allowIndexes=!!length && isLength(length) && (
isArray(object) || isArguments(object));

var index=-1, 
result=[];

while(++index < propsLength) {
var key=props[index];
if(allowIndexes && isIndex(key, length) || hasOwnProperty.call(object, key)){
result.push(key);}}


return result;}









function toIterable(value){
if(value == null){
return [];}

if(!isArrayLike(value)){
return values(value);}

return isObject(value)?value:Object(value);}









function toObject(value){
return isObject(value)?value:Object(value);}









function toPath(value){
if(isArray(value)){
return value;}

var result=[];
baseToString(value).replace(rePropName, function(match, number, quote, string){
result.push(quote?string.replace(reEscapeChar, '$1'):number || match);});

return result;}









function wrapperClone(wrapper){
return wrapper instanceof LazyWrapper?
wrapper.clone():
new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));}
























function chunk(array, size, guard){
if(guard?isIterateeCall(array, size, guard):size == null){
size = 1;}else 
{
size = nativeMax(+size || 1, 1);}

var index=0, 
length=array?array.length:0, 
resIndex=-1, 
result=Array(ceil(length / size));

while(index < length) {
result[++resIndex] = baseSlice(array, index, index += size);}

return result;}
















function compact(array){
var index=-1, 
length=array?array.length:0, 
resIndex=-1, 
result=[];

while(++index < length) {
var value=array[index];
if(value){
result[++resIndex] = value;}}


return result;}


















var difference=restParam(function(array, values){
return isArrayLike(array)?
baseDifference(array, baseFlatten(values, false, true)):
[];});


























function drop(array, n, guard){
var length=array?array.length:0;
if(!length){
return [];}

if(guard?isIterateeCall(array, n, guard):n == null){
n = 1;}

return baseSlice(array, n < 0?0:n);}


























function dropRight(array, n, guard){
var length=array?array.length:0;
if(!length){
return [];}

if(guard?isIterateeCall(array, n, guard):n == null){
n = 1;}

n = length - (+n || 0);
return baseSlice(array, 0, n < 0?0:n);}



















































function dropRightWhile(array, predicate, thisArg){
return array && array.length?
baseWhile(array, getCallback(predicate, thisArg, 3), true, true):
[];}



















































function dropWhile(array, predicate, thisArg){
return array && array.length?
baseWhile(array, getCallback(predicate, thisArg, 3), true):
[];}






























function fill(array, value, start, end){
var length=array?array.length:0;
if(!length){
return [];}

if(start && typeof start != 'number' && isIterateeCall(array, value, start)){
start = 0;
end = length;}

return baseFill(array, value, start, end);}


















































var findIndex=createFindIndex();

















































var findLastIndex=createFindIndex(true);


















function first(array){
return array?array[0]:undefined;}






















function flatten(array, isDeep, guard){
var length=array?array.length:0;
if(guard && isIterateeCall(array, isDeep, guard)){
isDeep = false;}

return length?baseFlatten(array, isDeep):[];}















function flattenDeep(array){
var length=array?array.length:0;
return length?baseFlatten(array, true):[];}






























function indexOf(array, value, fromIndex){
var length=array?array.length:0;
if(!length){
return -1;}

if(typeof fromIndex == 'number'){
fromIndex = fromIndex < 0?nativeMax(length + fromIndex, 0):fromIndex;}else 
if(fromIndex){
var index=binaryIndex(array, value), 
other=array[index];

if(value === value?value === other:other !== other){
return index;}

return -1;}

return baseIndexOf(array, value, fromIndex || 0);}















function initial(array){
return dropRight(array, 1);}
















var intersection=restParam(function(arrays){
var othLength=arrays.length, 
othIndex=othLength, 
caches=Array(length), 
indexOf=getIndexOf(), 
isCommon=indexOf == baseIndexOf, 
result=[];

while(othIndex--) {
var value=arrays[othIndex] = isArrayLike(value = arrays[othIndex])?value:[];
caches[othIndex] = isCommon && value.length >= 120?createCache(othIndex && value):null;}

var array=arrays[0], 
index=-1, 
length=array?array.length:0, 
seen=caches[0];

outer: 
while(++index < length) {
value = array[index];
if((seen?cacheIndexOf(seen, value):indexOf(result, value, 0)) < 0){
var othIndex=othLength;
while(--othIndex) {
var cache=caches[othIndex];
if((cache?cacheIndexOf(cache, value):indexOf(arrays[othIndex], value, 0)) < 0){
continue outer;}}


if(seen){
seen.push(value);}

result.push(value);}}


return result;});















function last(array){
var length=array?array.length:0;
return length?array[length - 1]:undefined;}



























function lastIndexOf(array, value, fromIndex){
var length=array?array.length:0;
if(!length){
return -1;}

var index=length;
if(typeof fromIndex == 'number'){
index = (fromIndex < 0?nativeMax(length + fromIndex, 0):nativeMin(fromIndex || 0, length - 1)) + 1;}else 
if(fromIndex){
index = binaryIndex(array, value, true) - 1;
var other=array[index];
if(value === value?value === other:other !== other){
return index;}

return -1;}

if(value !== value){
return indexOfNaN(array, index, true);}

while(index--) {
if(array[index] === value){
return index;}}


return -1;}























function pull(){
var args=arguments, 
array=args[0];

if(!(array && array.length)){
return array;}

var index=0, 
indexOf=getIndexOf(), 
length=args.length;

while(++index < length) {
var fromIndex=0, 
value=args[index];

while((fromIndex = indexOf(array, value, fromIndex)) > -1) {
splice.call(array, fromIndex, 1);}}


return array;}



























var pullAt=restParam(function(array, indexes){
indexes = baseFlatten(indexes);

var result=baseAt(array, indexes);
basePullAt(array, indexes.sort(baseCompareAscending));
return result;});









































function remove(array, predicate, thisArg){
var result=[];
if(!(array && array.length)){
return result;}

var index=-1, 
indexes=[], 
length=array.length;

predicate = getCallback(predicate, thisArg, 3);
while(++index < length) {
var value=array[index];
if(predicate(value, index, array)){
result.push(value);
indexes.push(index);}}


basePullAt(array, indexes);
return result;}
















function rest(array){
return drop(array, 1);}
















function slice(array, start, end){
var length=array?array.length:0;
if(!length){
return [];}

if(end && typeof end != 'number' && isIterateeCall(array, start, end)){
start = 0;
end = length;}

return baseSlice(array, start, end);}


















































var sortedIndex=createSortedIndex();





















var sortedLastIndex=createSortedIndex(true);

























function take(array, n, guard){
var length=array?array.length:0;
if(!length){
return [];}

if(guard?isIterateeCall(array, n, guard):n == null){
n = 1;}

return baseSlice(array, 0, n < 0?0:n);}


























function takeRight(array, n, guard){
var length=array?array.length:0;
if(!length){
return [];}

if(guard?isIterateeCall(array, n, guard):n == null){
n = 1;}

n = length - (+n || 0);
return baseSlice(array, n < 0?0:n);}



















































function takeRightWhile(array, predicate, thisArg){
return array && array.length?
baseWhile(array, getCallback(predicate, thisArg, 3), false, true):
[];}



















































function takeWhile(array, predicate, thisArg){
return array && array.length?
baseWhile(array, getCallback(predicate, thisArg, 3)):
[];}

















var union=restParam(function(arrays){
return baseUniq(baseFlatten(arrays, false, true));});



















































function uniq(array, isSorted, iteratee, thisArg){
var length=array?array.length:0;
if(!length){
return [];}

if(isSorted != null && typeof isSorted != 'boolean'){
thisArg = iteratee;
iteratee = isIterateeCall(array, isSorted, thisArg)?null:isSorted;
isSorted = false;}

var callback=getCallback();
if(!(iteratee == null && callback === baseCallback)){
iteratee = callback(iteratee, thisArg, 3);}

return isSorted && getIndexOf() == baseIndexOf?
sortedUniq(array, iteratee):
baseUniq(array, iteratee);}




















function unzip(array){
if(!(array && array.length)){
return [];}

var index=-1, 
length=0;

array = arrayFilter(array, function(group){
if(isArrayLike(group)){
length = nativeMax(group.length, length);
return true;}});


var result=Array(length);
while(++index < length) {
result[index] = arrayMap(array, baseProperty(index));}

return result;}






















function unzipWith(array, iteratee, thisArg){
var length=array?array.length:0;
if(!length){
return [];}

var result=unzip(array);
if(iteratee == null){
return result;}

iteratee = bindCallback(iteratee, thisArg, 4);
return arrayMap(result, function(group){
return arrayReduce(group, iteratee, undefined, true);});}



















var without=restParam(function(array, values){
return isArrayLike(array)?
baseDifference(array, values):
[];});
















function xor(){
var index=-1, 
length=arguments.length;

while(++index < length) {
var array=arguments[index];
if(isArrayLike(array)){
var result=result?
baseDifference(result, array).concat(baseDifference(array, result)):
array;}}


return result?baseUniq(result):[];}

















var zip=restParam(unzip);






















function zipObject(props, values){
var index=-1, 
length=props?props.length:0, 
result={};

if(length && !values && !isArray(props[0])){
values = [];}

while(++index < length) {
var key=props[index];
if(values){
result[key] = values[index];}else 
if(key){
result[key[0]] = key[1];}}


return result;}



















var zipWith=restParam(function(arrays){
var length=arrays.length, 
iteratee=length > 2?arrays[length - 2]:undefined, 
thisArg=length > 1?arrays[length - 1]:undefined;

if(length > 2 && typeof iteratee == 'function'){
length -= 2;}else 
{
iteratee = length > 1 && typeof thisArg == 'function'?(--length, thisArg):undefined;
thisArg = undefined;}

arrays.length = length;
return unzipWith(arrays, iteratee, thisArg);});






























function chain(value){
var result=lodash(value);
result.__chain__ = true;
return result;}

























function tap(value, interceptor, thisArg){
interceptor.call(thisArg, value);
return value;}























function thru(value, interceptor, thisArg){
return interceptor.call(thisArg, value);}



























function wrapperChain(){
return chain(this);}



























function wrapperCommit(){
return new LodashWrapper(this.value(), this.__chain__);}

























function wrapperPlant(value){
var result, 
parent=this;

while(parent instanceof baseLodash) {
var clone=wrapperClone(parent);
if(result){
previous.__wrapped__ = clone;}else 
{
result = clone;}

var previous=clone;
parent = parent.__wrapped__;}

previous.__wrapped__ = value;
return result;}






















function wrapperReverse(){
var value=this.__wrapped__;
if(value instanceof LazyWrapper){
if(this.__actions__.length){
value = new LazyWrapper(this);}

return new LodashWrapper(value.reverse(), this.__chain__);}

return this.thru(function(value){
return value.reverse();});}















function wrapperToString(){
return this.value() + '';}















function wrapperValue(){
return baseWrapperValue(this.__wrapped__, this.__actions__);}
























var at=restParam(function(collection, props){
return baseAt(collection, baseFlatten(props));});











































var countBy=createAggregator(function(result, value, key){
hasOwnProperty.call(result, key)?++result[key]:result[key] = 1;});


















































function every(collection, predicate, thisArg){
var func=isArray(collection)?arrayEvery:baseEvery;
if(thisArg && isIterateeCall(collection, predicate, thisArg)){
predicate = null;}

if(typeof predicate != 'function' || thisArg !== undefined){
predicate = getCallback(predicate, thisArg, 3);}

return func(collection, predicate);}



















































function filter(collection, predicate, thisArg){
var func=isArray(collection)?arrayFilter:baseFilter;
predicate = getCallback(predicate, thisArg, 3);
return func(collection, predicate);}




















































var find=createFind(baseEach);




















var findLast=createFind(baseEachRight, true);






























function findWhere(collection, source){
return find(collection, baseMatches(source));}
































var forEach=createForEach(arrayEach, baseEach);




















var forEachRight=createForEach(arrayEachRight, baseEachRight);











































var groupBy=createAggregator(function(result, value, key){
if(hasOwnProperty.call(result, key)){
result[key].push(value);}else 
{
result[key] = [value];}});
































function includes(collection, target, fromIndex, guard){
var length=collection?getLength(collection):0;
if(!isLength(length)){
collection = values(collection);
length = collection.length;}

if(!length){
return false;}

if(typeof fromIndex != 'number' || guard && isIterateeCall(target, fromIndex, guard)){
fromIndex = 0;}else 
{
fromIndex = fromIndex < 0?nativeMax(length + fromIndex, 0):fromIndex || 0;}

return typeof collection == 'string' || !isArray(collection) && isString(collection)?
fromIndex < length && collection.indexOf(target, fromIndex) > -1:
getIndexOf(collection, target, fromIndex) > -1;}
















































var indexBy=createAggregator(function(result, value, key){
result[key] = value;});
























var invoke=restParam(function(collection, path, args){
var index=-1, 
isFunc=typeof path == 'function', 
isProp=isKey(path), 
result=isArrayLike(collection)?Array(collection.length):[];

baseEach(collection, function(value){
var func=isFunc?path:isProp && value != null?value[path]:null;
result[++index] = func?func.apply(value, args):invokePath(value, path, args);});

return result;});


























































function map(collection, iteratee, thisArg){
var func=isArray(collection)?arrayMap:baseMap;
iteratee = getCallback(iteratee, thisArg, 3);
return func(collection, iteratee);}





























































var partition=createAggregator(function(result, value, key){
result[key?0:1].push(value);}, 
function(){return [[], []];});
























function pluck(collection, path){
return map(collection, property(path));}






































var reduce=createReduce(arrayReduce, baseEach);























var reduceRight=createReduce(arrayReduceRight, baseEachRight);





































function reject(collection, predicate, thisArg){
var func=isArray(collection)?arrayFilter:baseFilter;
predicate = getCallback(predicate, thisArg, 3);
return func(collection, function(value, index, collection){
return !predicate(value, index, collection);});}





















function sample(collection, n, guard){
if(guard?isIterateeCall(collection, n, guard):n == null){
collection = toIterable(collection);
var length=collection.length;
return length > 0?collection[baseRandom(0, length - 1)]:undefined;}

var index=-1, 
result=toArray(collection), 
length=result.length, 
lastIndex=length - 1;

n = nativeMin(n < 0?0:+n || 0, length);
while(++index < n) {
var rand=baseRandom(index, lastIndex), 
value=result[rand];

result[rand] = result[index];
result[index] = value;}

result.length = n;
return result;}
















function shuffle(collection){
return sample(collection, POSITIVE_INFINITY);}






















function size(collection){
var length=collection?getLength(collection):0;
return isLength(length)?length:keys(collection).length;}



















































function some(collection, predicate, thisArg){
var func=isArray(collection)?arraySome:baseSome;
if(thisArg && isIterateeCall(collection, predicate, thisArg)){
predicate = null;}

if(typeof predicate != 'function' || thisArg !== undefined){
predicate = getCallback(predicate, thisArg, 3);}

return func(collection, predicate);}


















































function sortBy(collection, iteratee, thisArg){
if(collection == null){
return [];}

if(thisArg && isIterateeCall(collection, iteratee, thisArg)){
iteratee = null;}

var index=-1;
iteratee = getCallback(iteratee, thisArg, 3);

var result=baseMap(collection, function(value, key, collection){
return {'criteria':iteratee(value, key, collection), 'index':++index, 'value':value};});

return baseSortBy(result, compareAscending);}





































var sortByAll=restParam(function(collection, iteratees){
if(collection == null){
return [];}

var guard=iteratees[2];
if(guard && isIterateeCall(iteratees[0], iteratees[1], guard)){
iteratees.length = 1;}

return baseSortByOrder(collection, baseFlatten(iteratees), []);});




































function sortByOrder(collection, iteratees, orders, guard){
if(collection == null){
return [];}

if(guard && isIterateeCall(iteratees, orders, guard)){
orders = null;}

if(!isArray(iteratees)){
iteratees = iteratees == null?[]:[iteratees];}

if(!isArray(orders)){
orders = orders == null?[]:[orders];}

return baseSortByOrder(collection, iteratees, orders);}































function where(collection, source){
return filter(collection, baseMatches(source));}


















var now=nativeNow || function(){
return new Date().getTime();};



























function after(n, func){
if(typeof func != 'function'){
if(typeof n == 'function'){
var temp=n;
n = func;
func = temp;}else 
{
throw new TypeError(FUNC_ERROR_TEXT);}}


n = nativeIsFinite(n = +n)?n:0;
return function(){
if(--n < 1){
return func.apply(this, arguments);}};}




















function ary(func, n, guard){
if(guard && isIterateeCall(func, n, guard)){
n = null;}

n = func && n == null?func.length:nativeMax(+n || 0, 0);
return createWrapper(func, ARY_FLAG, null, null, null, null, n);}


















function before(n, func){
var result;
if(typeof func != 'function'){
if(typeof n == 'function'){
var temp=n;
n = func;
func = temp;}else 
{
throw new TypeError(FUNC_ERROR_TEXT);}}


return function(){
if(--n > 0){
result = func.apply(this, arguments);}

if(n <= 1){
func = null;}

return result;};}






































var bind=restParam(function(func, thisArg, partials){
var bitmask=BIND_FLAG;
if(partials.length){
var holders=replaceHolders(partials, bind.placeholder);
bitmask |= PARTIAL_FLAG;}

return createWrapper(func, bitmask, thisArg, partials, holders);});






























var bindAll=restParam(function(object, methodNames){
methodNames = methodNames.length?baseFlatten(methodNames):functions(object);

var index=-1, 
length=methodNames.length;

while(++index < length) {
var key=methodNames[index];
object[key] = createWrapper(object[key], BIND_FLAG, object);}

return object;});














































var bindKey=restParam(function(object, key, partials){
var bitmask=BIND_FLAG | BIND_KEY_FLAG;
if(partials.length){
var holders=replaceHolders(partials, bindKey.placeholder);
bitmask |= PARTIAL_FLAG;}

return createWrapper(key, bitmask, object, partials, holders);});










































var curry=createCurry(CURRY_FLAG);






































var curryRight=createCurry(CURRY_RIGHT_FLAG);
































































function debounce(func, wait, options){
var args, 
maxTimeoutId, 
result, 
stamp, 
thisArg, 
timeoutId, 
trailingCall, 
lastCalled=0, 
maxWait=false, 
trailing=true;

if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

wait = wait < 0?0:+wait || 0;
if(options === true){
var leading=true;
trailing = false;}else 
if(isObject(options)){
leading = options.leading;
maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);
trailing = 'trailing' in options?options.trailing:trailing;}


function cancel(){
if(timeoutId){
clearTimeout(timeoutId);}

if(maxTimeoutId){
clearTimeout(maxTimeoutId);}

maxTimeoutId = timeoutId = trailingCall = undefined;}


function delayed(){
var remaining=wait - (now() - stamp);
if(remaining <= 0 || remaining > wait){
if(maxTimeoutId){
clearTimeout(maxTimeoutId);}

var isCalled=trailingCall;
maxTimeoutId = timeoutId = trailingCall = undefined;
if(isCalled){
lastCalled = now();
result = func.apply(thisArg, args);
if(!timeoutId && !maxTimeoutId){
args = thisArg = null;}}}else 


{
timeoutId = setTimeout(delayed, remaining);}}



function maxDelayed(){
if(timeoutId){
clearTimeout(timeoutId);}

maxTimeoutId = timeoutId = trailingCall = undefined;
if(trailing || maxWait !== wait){
lastCalled = now();
result = func.apply(thisArg, args);
if(!timeoutId && !maxTimeoutId){
args = thisArg = null;}}}




function debounced(){
args = arguments;
stamp = now();
thisArg = this;
trailingCall = trailing && (timeoutId || !leading);

if(maxWait === false){
var leadingCall=leading && !timeoutId;}else 
{
if(!maxTimeoutId && !leading){
lastCalled = stamp;}

var remaining=maxWait - (stamp - lastCalled), 
isCalled=remaining <= 0 || remaining > maxWait;

if(isCalled){
if(maxTimeoutId){
maxTimeoutId = clearTimeout(maxTimeoutId);}

lastCalled = stamp;
result = func.apply(thisArg, args);}else 

if(!maxTimeoutId){
maxTimeoutId = setTimeout(maxDelayed, remaining);}}


if(isCalled && timeoutId){
timeoutId = clearTimeout(timeoutId);}else 

if(!timeoutId && wait !== maxWait){
timeoutId = setTimeout(delayed, wait);}

if(leadingCall){
isCalled = true;
result = func.apply(thisArg, args);}

if(isCalled && !timeoutId && !maxTimeoutId){
args = thisArg = null;}

return result;}

debounced.cancel = cancel;
return debounced;}



















var defer=restParam(function(func, args){
return baseDelay(func, 1, args);});




















var delay=restParam(function(func, wait, args){
return baseDelay(func, wait, args);});






















var flow=createFlow();





















var flowRight=createFlow(true);




















































function memoize(func, resolver){
if(typeof func != 'function' || resolver && typeof resolver != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

var memoized=function(){
var args=arguments, 
key=resolver?resolver.apply(this, args):args[0], 
cache=memoized.cache;

if(cache.has(key)){
return cache.get(key);}

var result=func.apply(this, args);
memoized.cache = cache.set(key, result);
return result;};

memoized.cache = new memoize.Cache();
return memoized;}





















function negate(predicate){
if(typeof predicate != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

return function(){
return !predicate.apply(this, arguments);};}




















function once(func){
return before(2, func);}


































var partial=createPartial(PARTIAL_FLAG);
































var partialRight=createPartial(PARTIAL_RIGHT_FLAG);





























var rearg=restParam(function(func, indexes){
return createWrapper(func, REARG_FLAG, null, null, null, baseFlatten(indexes));});
























function restParam(func, start){
if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

start = nativeMax(start === undefined?func.length - 1:+start || 0, 0);
return function(){
var args=arguments, 
index=-1, 
length=nativeMax(args.length - start, 0), 
rest=Array(length);

while(++index < length) {
rest[index] = args[start + index];}

switch(start){
case 0:return func.call(this, rest);
case 1:return func.call(this, args[0], rest);
case 2:return func.call(this, args[0], args[1], rest);}

var otherArgs=Array(start + 1);
index = -1;
while(++index < start) {
otherArgs[index] = args[index];}

otherArgs[start] = rest;
return func.apply(this, otherArgs);};}


































function spread(func){
if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

return function(array){
return func.apply(this, array);};}










































function throttle(func, wait, options){
var leading=true, 
trailing=true;

if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

if(options === false){
leading = false;}else 
if(isObject(options)){
leading = 'leading' in options?!!options.leading:leading;
trailing = 'trailing' in options?!!options.trailing:trailing;}

debounceOptions.leading = leading;
debounceOptions.maxWait = +wait;
debounceOptions.trailing = trailing;
return debounce(func, wait, debounceOptions);}























function wrap(value, wrapper){
wrapper = wrapper == null?identity:wrapper;
return createWrapper(wrapper, PARTIAL_FLAG, null, [value], []);}























































function clone(value, isDeep, customizer, thisArg){
if(isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)){
isDeep = false;}else 

if(typeof isDeep == 'function'){
thisArg = customizer;
customizer = isDeep;
isDeep = false;}

return typeof customizer == 'function'?
baseClone(value, isDeep, bindCallback(customizer, thisArg, 1)):
baseClone(value, isDeep);}















































function cloneDeep(value, customizer, thisArg){
return typeof customizer == 'function'?
baseClone(value, true, bindCallback(customizer, thisArg, 1)):
baseClone(value, true);}






















function gt(value, other){
return value > other;}






















function gte(value, other){
return value >= other;}


















function isArguments(value){
return isObjectLike(value) && isArrayLike(value) && objToString.call(value) == argsTag;}


















var isArray=nativeIsArray || function(value){
return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;};


















function isBoolean(value){
return value === true || value === false || isObjectLike(value) && objToString.call(value) == boolTag;}


















function isDate(value){
return isObjectLike(value) && objToString.call(value) == dateTag;}


















function isElement(value){
return !!value && value.nodeType === 1 && isObjectLike(value) && 
objToString.call(value).indexOf('Element') > -1;}


if(!support.dom){
isElement = function(value){
return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);};}






























function isEmpty(value){
if(value == null){
return true;}

if(isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) || 
isObjectLike(value) && isFunction(value.splice))){
return !value.length;}

return !keys(value).length;}














































function isEqual(value, other, customizer, thisArg){
customizer = typeof customizer == 'function'?bindCallback(customizer, thisArg, 3):undefined;
var result=customizer?customizer(value, other):undefined;
return result === undefined?baseIsEqual(value, other, customizer):!!result;}



















function isError(value){
return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;}





























var isFinite=nativeNumIsFinite || function(value){
return typeof value == 'number' && nativeIsFinite(value);};


















var isFunction=!(baseIsFunction(/x/) || Uint8Array && !baseIsFunction(Uint8Array))?baseIsFunction:function(value){



return objToString.call(value) == funcTag;};






















function isObject(value){


var type=typeof value;
return !!value && (type == 'object' || type == 'function');}









































function isMatch(object, source, customizer, thisArg){
customizer = typeof customizer == 'function'?bindCallback(customizer, thisArg, 3):undefined;
return baseIsMatch(object, getMatchData(source), customizer);}



























function isNaN(value){


return isNumber(value) && value != +value;}


















function isNative(value){
if(value == null){
return false;}

if(objToString.call(value) == funcTag){
return reIsNative.test(fnToString.call(value));}

return isObjectLike(value) && reIsHostCtor.test(value);}


















function isNull(value){
return value === null;}
























function isNumber(value){
return typeof value == 'number' || isObjectLike(value) && objToString.call(value) == numberTag;}
































var isPlainObject=!getPrototypeOf?shimIsPlainObject:function(value){
if(!(value && objToString.call(value) == objectTag)){
return false;}

var valueOf=getNative(value, 'valueOf'), 
objProto=valueOf && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);

return objProto?
value == objProto || getPrototypeOf(value) == objProto:
shimIsPlainObject(value);};


















function isRegExp(value){
return isObjectLike(value) && objToString.call(value) == regexpTag;}


















function isString(value){
return typeof value == 'string' || isObjectLike(value) && objToString.call(value) == stringTag;}


















function isTypedArray(value){
return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];}


















function isUndefined(value){
return value === undefined;}






















function lt(value, other){
return value < other;}






















function lte(value, other){
return value <= other;}

















function toArray(value){
var length=value?getLength(value):0;
if(!isLength(length)){
return values(value);}

if(!length){
return [];}

return arrayCopy(value);}

























function toPlainObject(value){
return baseCopy(value, keysIn(value));}




































var assign=createAssigner(function(object, source, customizer){
return customizer?
assignWith(object, source, customizer):
baseAssign(object, source);});




































function create(prototype, properties, guard){
var result=baseCreate(prototype);
if(guard && isIterateeCall(prototype, properties, guard)){
properties = null;}

return properties?baseAssign(result, properties):result;}




















var defaults=restParam(function(args){
var object=args[0];
if(object == null){
return object;}

args.push(assignDefaults);
return assign.apply(undefined, args);});


















































var findKey=createFindKey(baseForOwn);

















































var findLastKey=createFindKey(baseForOwnRight);




























var forIn=createForIn(baseFor);


























var forInRight=createForIn(baseForRight);




























var forOwn=createForOwn(baseForOwn);


























var forOwnRight=createForOwn(baseForOwnRight);
















function functions(object){
return baseFunctions(object, keysIn(object));}


























function get(object, path, defaultValue){
var result=object == null?undefined:baseGet(object, toPath(path), path + '');
return result === undefined?defaultValue:result;}
























function has(object, path){
if(object == null){
return false;}

var result=hasOwnProperty.call(object, path);
if(!result && !isKey(path)){
path = toPath(path);
object = path.length == 1?object:baseGet(object, baseSlice(path, 0, -1));
if(object == null){
return false;}

path = last(path);
result = hasOwnProperty.call(object, path);}

return result || isLength(object.length) && isIndex(path, object.length) && (
isArray(object) || isArguments(object));}

























function invert(object, multiValue, guard){
if(guard && isIterateeCall(object, multiValue, guard)){
multiValue = null;}

var index=-1, 
props=keys(object), 
length=props.length, 
result={};

while(++index < length) {
var key=props[index], 
value=object[key];

if(multiValue){
if(hasOwnProperty.call(result, value)){
result[value].push(key);}else 
{
result[value] = [key];}}else 


{
result[value] = key;}}


return result;}





























var keys=!nativeKeys?shimKeys:function(object){
var Ctor=object == null?null:object.constructor;
if(typeof Ctor == 'function' && Ctor.prototype === object || 
typeof object != 'function' && isArrayLike(object)){
return shimKeys(object);}

return isObject(object)?nativeKeys(object):[];};
























function keysIn(object){
if(object == null){
return [];}

if(!isObject(object)){
object = Object(object);}

var length=object.length;
length = length && isLength(length) && (
isArray(object) || isArguments(object)) && length || 0;

var Ctor=object.constructor, 
index=-1, 
isProto=typeof Ctor == 'function' && Ctor.prototype === object, 
result=Array(length), 
skipIndexes=length > 0;

while(++index < length) {
result[index] = index + '';}

for(var key in object) {
if(!(skipIndexes && isIndex(key, length)) && 
!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))){
result.push(key);}}


return result;}






















var mapKeys=createObjectMapper(true);










































var mapValues=createObjectMapper();

















































var merge=createAssigner(baseMerge);
























var omit=restParam(function(object, props){
if(object == null){
return {};}

if(typeof props[0] != 'function'){
var props=arrayMap(baseFlatten(props), String);
return pickByArray(object, baseDifference(keysIn(object), props));}

var predicate=bindCallback(props[0], props[1], 3);
return pickByCallback(object, function(value, key, object){
return !predicate(value, key, object);});});

















function pairs(object){
object = toObject(object);

var index=-1, 
props=keys(object), 
length=props.length, 
result=Array(length);

while(++index < length) {
var key=props[index];
result[index] = [key, object[key]];}

return result;}




























var pick=restParam(function(object, props){
if(object == null){
return {};}

return typeof props[0] == 'function'?
pickByCallback(object, bindCallback(props[0], props[1], 3)):
pickByArray(object, baseFlatten(props));});






























function result(object, path, defaultValue){
var result=object == null?undefined:object[path];
if(result === undefined){
if(object != null && !isKey(path, object)){
path = toPath(path);
object = path.length == 1?object:baseGet(object, baseSlice(path, 0, -1));
result = object == null?undefined:object[last(path)];}

result = result === undefined?defaultValue:result;}

return isFunction(result)?result.call(object):result;}

























function set(object, path, value){
if(object == null){
return object;}

var pathKey=path + '';
path = object[pathKey] != null || isKey(path, object)?[pathKey]:toPath(path);

var index=-1, 
length=path.length, 
lastIndex=length - 1, 
nested=object;

while(nested != null && ++index < length) {
var key=path[index];
if(isObject(nested)){
if(index == lastIndex){
nested[key] = value;}else 
if(nested[key] == null){
nested[key] = isIndex(path[index + 1])?[]:{};}}


nested = nested[key];}

return object;}































function transform(object, iteratee, accumulator, thisArg){
var isArr=isArray(object) || isTypedArray(object);
iteratee = getCallback(iteratee, thisArg, 4);

if(accumulator == null){
if(isArr || isObject(object)){
var Ctor=object.constructor;
if(isArr){
accumulator = isArray(object)?new Ctor():[];}else 
{
accumulator = baseCreate(isFunction(Ctor)?Ctor.prototype:null);}}else 

{
accumulator = {};}}


(isArr?arrayEach:baseForOwn)(object, function(value, index, object){
return iteratee(accumulator, value, index, object);});

return accumulator;}



























function values(object){
return baseValues(object, keys(object));}

























function valuesIn(object){
return baseValues(object, keysIn(object));}



































function inRange(value, start, end){
start = +start || 0;
if(typeof end === 'undefined'){
end = start;
start = 0;}else 
{
end = +end || 0;}

return value >= nativeMin(start, end) && value < nativeMax(start, end);}





























function random(min, max, floating){
if(floating && isIterateeCall(min, max, floating)){
max = floating = null;}

var noMin=min == null, 
noMax=max == null;

if(floating == null){
if(noMax && typeof min == 'boolean'){
floating = min;
min = 1;}else 

if(typeof max == 'boolean'){
floating = max;
noMax = true;}}


if(noMin && noMax){
max = 1;
noMax = false;}

min = +min || 0;
if(noMax){
max = min;
min = 0;}else 
{
max = +max || 0;}

if(floating || min % 1 || max % 1){
var rand=nativeRandom();
return nativeMin(min + rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1))), max);}

return baseRandom(min, max);}























var camelCase=createCompounder(function(result, word, index){
word = word.toLowerCase();
return result + (index?word.charAt(0).toUpperCase() + word.slice(1):word);});















function capitalize(string){
string = baseToString(string);
return string && string.charAt(0).toUpperCase() + string.slice(1);}
















function deburr(string){
string = baseToString(string);
return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');}























function endsWith(string, target, position){
string = baseToString(string);
target = target + '';

var length=string.length;
position = position === undefined?
length:
nativeMin(position < 0?0:+position || 0, length);

position -= target.length;
return position >= 0 && string.indexOf(target, position) == position;}


































function escape(string){

string = baseToString(string);
return string && reHasUnescapedHtml.test(string)?
string.replace(reUnescapedHtml, escapeHtmlChar):
string;}
















function escapeRegExp(string){
string = baseToString(string);
return string && reHasRegExpChars.test(string)?
string.replace(reRegExpChars, '\\$&'):
string;}





















var kebabCase=createCompounder(function(result, word, index){
return result + (index?'-':'') + word.toLowerCase();});
























function pad(string, length, chars){
string = baseToString(string);
length = +length;

var strLength=string.length;
if(strLength >= length || !nativeIsFinite(length)){
return string;}

var mid=(length - strLength) / 2, 
leftLength=floor(mid), 
rightLength=ceil(mid);

chars = createPadding('', rightLength, chars);
return chars.slice(0, leftLength) + string + chars;}
























var padLeft=createPadDir();























var padRight=createPadDir(true);
























function parseInt(string, radix, guard){
if(guard && isIterateeCall(string, radix, guard)){
radix = 0;}

return nativeParseInt(string, radix);}


if(nativeParseInt(whitespace + '08') != 8){
parseInt = function(string, radix, guard){



if(guard?isIterateeCall(string, radix, guard):radix == null){
radix = 0;}else 
if(radix){
radix = +radix;}

string = trim(string);
return nativeParseInt(string, radix || (reHasHexPrefix.test(string)?16:10));};}























function repeat(string, n){
var result='';
string = baseToString(string);
n = +n;
if(n < 1 || !string || !nativeIsFinite(n)){
return result;}



do {
if(n % 2){
result += string;}

n = floor(n / 2);
string += string;}while(
n);

return result;}





















var snakeCase=createCompounder(function(result, word, index){
return result + (index?'_':'') + word.toLowerCase();});





















var startCase=createCompounder(function(result, word, index){
return result + (index?' ':'') + (word.charAt(0).toUpperCase() + word.slice(1));});























function startsWith(string, target, position){
string = baseToString(string);
position = position == null?
0:
nativeMin(position < 0?0:+position || 0, string.length);

return string.lastIndexOf(target, position) == position;}


































































































function template(string, options, otherOptions){


var settings=lodash.templateSettings;

if(otherOptions && isIterateeCall(string, options, otherOptions)){
options = otherOptions = null;}

string = baseToString(string);
options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);

var imports=assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults), 
importsKeys=keys(imports), 
importsValues=baseValues(imports, importsKeys);

var isEscaping, 
isEvaluating, 
index=0, 
interpolate=options.interpolate || reNoMatch, 
source='__p += \'';


var reDelimiters=RegExp(
(options.escape || reNoMatch).source + '|' + 
interpolate.source + '|' + 
(interpolate === reInterpolate?reEsTemplate:reNoMatch).source + '|' + 
(options.evaluate || reNoMatch).source + '|$', 
'g');


var sourceURL='//# sourceURL=' + (
'sourceURL' in options?
options.sourceURL:
'lodash.templateSources[' + ++templateCounter + ']') + 
'\n';

string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset){
interpolateValue || (interpolateValue = esTemplateValue);


source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);


if(escapeValue){
isEscaping = true;
source += '\' +\n__e(' + escapeValue + ') +\n\'';}

if(evaluateValue){
isEvaluating = true;
source += '\';\n' + evaluateValue + ';\n__p += \'';}

if(interpolateValue){
source += '\' +\n((__t = (' + interpolateValue + ')) == null ? \'\' : __t) +\n\'';}

index = offset + match.length;



return match;});


source += '\';\n';



var variable=options.variable;
if(!variable){
source = 'with (obj) {\n' + source + '\n}\n';}


source = (isEvaluating?source.replace(reEmptyStringLeading, ''):source).
replace(reEmptyStringMiddle, '$1').
replace(reEmptyStringTrailing, '$1;');


source = 'function(' + (variable || 'obj') + ') {\n' + (
variable?
'':
'obj || (obj = {});\n') + 

'var __t, __p = \'\'' + (
isEscaping?
', __e = _.escape':
'') + (

isEvaluating?
', __j = Array.prototype.join;\n' + 
'function print() { __p += __j.call(arguments, \'\') }\n':
';\n') + 

source + 
'return __p\n}';

var result=attempt(function(){
return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);});




result.source = source;
if(isError(result)){
throw result;}

return result;}























function trim(string, chars, guard){
var value=string;
string = baseToString(string);
if(!string){
return string;}

if(guard?isIterateeCall(value, chars, guard):chars == null){
return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);}

chars = chars + '';
return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);}




















function trimLeft(string, chars, guard){
var value=string;
string = baseToString(string);
if(!string){
return string;}

if(guard?isIterateeCall(value, chars, guard):chars == null){
return string.slice(trimmedLeftIndex(string));}

return string.slice(charsLeftIndex(string, chars + ''));}




















function trimRight(string, chars, guard){
var value=string;
string = baseToString(string);
if(!string){
return string;}

if(guard?isIterateeCall(value, chars, guard):chars == null){
return string.slice(0, trimmedRightIndex(string) + 1);}

return string.slice(0, charsRightIndex(string, chars + '') + 1);}










































function trunc(string, options, guard){
if(guard && isIterateeCall(string, options, guard)){
options = null;}

var length=DEFAULT_TRUNC_LENGTH, 
omission=DEFAULT_TRUNC_OMISSION;

if(options != null){
if(isObject(options)){
var separator='separator' in options?options.separator:separator;
length = 'length' in options?+options.length || 0:length;
omission = 'omission' in options?baseToString(options.omission):omission;}else 
{
length = +options || 0;}}


string = baseToString(string);
if(length >= string.length){
return string;}

var end=length - omission.length;
if(end < 1){
return omission;}

var result=string.slice(0, end);
if(separator == null){
return result + omission;}

if(isRegExp(separator)){
if(string.slice(end).search(separator)){
var match, 
newEnd, 
substring=string.slice(0, end);

if(!separator.global){
separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');}

separator.lastIndex = 0;
while(match = separator.exec(substring)) {
newEnd = match.index;}

result = result.slice(0, newEnd == null?end:newEnd);}}else 

if(string.indexOf(separator, end) != end){
var index=result.lastIndexOf(separator);
if(index > -1){
result = result.slice(0, index);}}


return result + omission;}




















function unescape(string){
string = baseToString(string);
return string && reHasEscapedHtml.test(string)?
string.replace(reEscapedHtml, unescapeHtmlChar):
string;}




















function words(string, pattern, guard){
if(guard && isIterateeCall(string, pattern, guard)){
pattern = null;}

string = baseToString(string);
return string.match(pattern || reWords) || [];}
























var attempt=restParam(function(func, args){
try{
return func.apply(undefined, args);}
catch(e) {
return isError(e)?e:new Error(e);}});









































function callback(func, thisArg, guard){
if(guard && isIterateeCall(func, thisArg, guard)){
thisArg = null;}

return isObjectLike(func)?
matches(func):
baseCallback(func, thisArg);}


















function constant(value){
return function(){
return value;};}


















function identity(value){
return value;}



























function matches(source){
return baseMatches(baseClone(source, true));}


























function matchesProperty(path, srcValue){
return baseMatchesProperty(path, baseClone(srcValue, true));}

























var method=restParam(function(path, args){
return function(object){
return invokePath(object, path, args);};});

























var methodOf=restParam(function(object, args){
return function(path){
return invokePath(object, path, args);};});







































function mixin(object, source, options){
if(options == null){
var isObj=isObject(source), 
props=isObj?keys(source):null, 
methodNames=props && props.length?baseFunctions(source, props):null;

if(!(methodNames?methodNames.length:isObj)){
methodNames = false;
options = source;
source = object;
object = this;}}


if(!methodNames){
methodNames = baseFunctions(source, keys(source));}

var chain=true, 
index=-1, 
isFunc=isFunction(object), 
length=methodNames.length;

if(options === false){
chain = false;}else 
if(isObject(options) && 'chain' in options){
chain = options.chain;}

while(++index < length) {
var methodName=methodNames[index], 
func=source[methodName];

object[methodName] = func;
if(isFunc){
object.prototype[methodName] = (function(func){
return function(){
var chainAll=this.__chain__;
if(chain || chainAll){
var result=object(this.__wrapped__), 
actions=result.__actions__ = arrayCopy(this.__actions__);

actions.push({'func':func, 'args':arguments, 'thisArg':object});
result.__chain__ = chainAll;
return result;}

var args=[this.value()];
push.apply(args, arguments);
return func.apply(object, args);};})(

func);}}


return object;}














function noConflict(){
context._ = oldDash;
return this;}
















function noop(){}

























function property(path){
return isKey(path)?baseProperty(path):basePropertyDeep(path);}






















function propertyOf(object){
return function(path){
return baseGet(object, toPath(path), path + '');};}




































function range(start, end, step){
if(step && isIterateeCall(start, end, step)){
end = step = null;}

start = +start || 0;
step = step == null?1:+step || 0;

if(end == null){
end = start;
start = 0;}else 
{
end = +end || 0;}



var index=-1, 
length=nativeMax(ceil((end - start) / (step || 1)), 0), 
result=Array(length);

while(++index < length) {
result[index] = start;
start += step;}

return result;}





























function times(n, iteratee, thisArg){
n = floor(n);



if(n < 1 || !nativeIsFinite(n)){
return [];}

var index=-1, 
result=Array(nativeMin(n, MAX_ARRAY_LENGTH));

iteratee = bindCallback(iteratee, thisArg, 1);
while(++index < n) {
if(index < MAX_ARRAY_LENGTH){
result[index] = iteratee(index);}else 
{
iteratee(index);}}


return result;}


















function uniqueId(prefix){
var id=++idCounter;
return baseToString(prefix) + id;}


















function add(augend, addend){
return (+augend || 0) + (+addend || 0);}

















































var max=createExtremum(gt, NEGATIVE_INFINITY);
















































var min=createExtremum(lt, POSITIVE_INFINITY);

































function sum(collection, iteratee, thisArg){
if(thisArg && isIterateeCall(collection, iteratee, thisArg)){
iteratee = null;}

var callback=getCallback(), 
noIteratee=iteratee == null;

if(!(noIteratee && callback === baseCallback)){
noIteratee = false;
iteratee = callback(iteratee, thisArg, 3);}

return noIteratee?
arraySum(isArray(collection)?collection:toIterable(collection)):
baseSum(collection, iteratee);}





lodash.prototype = baseLodash.prototype;

LodashWrapper.prototype = baseCreate(baseLodash.prototype);
LodashWrapper.prototype.constructor = LodashWrapper;

LazyWrapper.prototype = baseCreate(baseLodash.prototype);
LazyWrapper.prototype.constructor = LazyWrapper;


MapCache.prototype['delete'] = mapDelete;
MapCache.prototype.get = mapGet;
MapCache.prototype.has = mapHas;
MapCache.prototype.set = mapSet;


SetCache.prototype.push = cachePush;


memoize.Cache = MapCache;


lodash.after = after;
lodash.ary = ary;
lodash.assign = assign;
lodash.at = at;
lodash.before = before;
lodash.bind = bind;
lodash.bindAll = bindAll;
lodash.bindKey = bindKey;
lodash.callback = callback;
lodash.chain = chain;
lodash.chunk = chunk;
lodash.compact = compact;
lodash.constant = constant;
lodash.countBy = countBy;
lodash.create = create;
lodash.curry = curry;
lodash.curryRight = curryRight;
lodash.debounce = debounce;
lodash.defaults = defaults;
lodash.defer = defer;
lodash.delay = delay;
lodash.difference = difference;
lodash.drop = drop;
lodash.dropRight = dropRight;
lodash.dropRightWhile = dropRightWhile;
lodash.dropWhile = dropWhile;
lodash.fill = fill;
lodash.filter = filter;
lodash.flatten = flatten;
lodash.flattenDeep = flattenDeep;
lodash.flow = flow;
lodash.flowRight = flowRight;
lodash.forEach = forEach;
lodash.forEachRight = forEachRight;
lodash.forIn = forIn;
lodash.forInRight = forInRight;
lodash.forOwn = forOwn;
lodash.forOwnRight = forOwnRight;
lodash.functions = functions;
lodash.groupBy = groupBy;
lodash.indexBy = indexBy;
lodash.initial = initial;
lodash.intersection = intersection;
lodash.invert = invert;
lodash.invoke = invoke;
lodash.keys = keys;
lodash.keysIn = keysIn;
lodash.map = map;
lodash.mapKeys = mapKeys;
lodash.mapValues = mapValues;
lodash.matches = matches;
lodash.matchesProperty = matchesProperty;
lodash.memoize = memoize;
lodash.merge = merge;
lodash.method = method;
lodash.methodOf = methodOf;
lodash.mixin = mixin;
lodash.negate = negate;
lodash.omit = omit;
lodash.once = once;
lodash.pairs = pairs;
lodash.partial = partial;
lodash.partialRight = partialRight;
lodash.partition = partition;
lodash.pick = pick;
lodash.pluck = pluck;
lodash.property = property;
lodash.propertyOf = propertyOf;
lodash.pull = pull;
lodash.pullAt = pullAt;
lodash.range = range;
lodash.rearg = rearg;
lodash.reject = reject;
lodash.remove = remove;
lodash.rest = rest;
lodash.restParam = restParam;
lodash.set = set;
lodash.shuffle = shuffle;
lodash.slice = slice;
lodash.sortBy = sortBy;
lodash.sortByAll = sortByAll;
lodash.sortByOrder = sortByOrder;
lodash.spread = spread;
lodash.take = take;
lodash.takeRight = takeRight;
lodash.takeRightWhile = takeRightWhile;
lodash.takeWhile = takeWhile;
lodash.tap = tap;
lodash.throttle = throttle;
lodash.thru = thru;
lodash.times = times;
lodash.toArray = toArray;
lodash.toPlainObject = toPlainObject;
lodash.transform = transform;
lodash.union = union;
lodash.uniq = uniq;
lodash.unzip = unzip;
lodash.unzipWith = unzipWith;
lodash.values = values;
lodash.valuesIn = valuesIn;
lodash.where = where;
lodash.without = without;
lodash.wrap = wrap;
lodash.xor = xor;
lodash.zip = zip;
lodash.zipObject = zipObject;
lodash.zipWith = zipWith;


lodash.backflow = flowRight;
lodash.collect = map;
lodash.compose = flowRight;
lodash.each = forEach;
lodash.eachRight = forEachRight;
lodash.extend = assign;
lodash.iteratee = callback;
lodash.methods = functions;
lodash.object = zipObject;
lodash.select = filter;
lodash.tail = rest;
lodash.unique = uniq;


mixin(lodash, lodash);




lodash.add = add;
lodash.attempt = attempt;
lodash.camelCase = camelCase;
lodash.capitalize = capitalize;
lodash.clone = clone;
lodash.cloneDeep = cloneDeep;
lodash.deburr = deburr;
lodash.endsWith = endsWith;
lodash.escape = escape;
lodash.escapeRegExp = escapeRegExp;
lodash.every = every;
lodash.find = find;
lodash.findIndex = findIndex;
lodash.findKey = findKey;
lodash.findLast = findLast;
lodash.findLastIndex = findLastIndex;
lodash.findLastKey = findLastKey;
lodash.findWhere = findWhere;
lodash.first = first;
lodash.get = get;
lodash.gt = gt;
lodash.gte = gte;
lodash.has = has;
lodash.identity = identity;
lodash.includes = includes;
lodash.indexOf = indexOf;
lodash.inRange = inRange;
lodash.isArguments = isArguments;
lodash.isArray = isArray;
lodash.isBoolean = isBoolean;
lodash.isDate = isDate;
lodash.isElement = isElement;
lodash.isEmpty = isEmpty;
lodash.isEqual = isEqual;
lodash.isError = isError;
lodash.isFinite = isFinite;
lodash.isFunction = isFunction;
lodash.isMatch = isMatch;
lodash.isNaN = isNaN;
lodash.isNative = isNative;
lodash.isNull = isNull;
lodash.isNumber = isNumber;
lodash.isObject = isObject;
lodash.isPlainObject = isPlainObject;
lodash.isRegExp = isRegExp;
lodash.isString = isString;
lodash.isTypedArray = isTypedArray;
lodash.isUndefined = isUndefined;
lodash.kebabCase = kebabCase;
lodash.last = last;
lodash.lastIndexOf = lastIndexOf;
lodash.lt = lt;
lodash.lte = lte;
lodash.max = max;
lodash.min = min;
lodash.noConflict = noConflict;
lodash.noop = noop;
lodash.now = now;
lodash.pad = pad;
lodash.padLeft = padLeft;
lodash.padRight = padRight;
lodash.parseInt = parseInt;
lodash.random = random;
lodash.reduce = reduce;
lodash.reduceRight = reduceRight;
lodash.repeat = repeat;
lodash.result = result;
lodash.runInContext = runInContext;
lodash.size = size;
lodash.snakeCase = snakeCase;
lodash.some = some;
lodash.sortedIndex = sortedIndex;
lodash.sortedLastIndex = sortedLastIndex;
lodash.startCase = startCase;
lodash.startsWith = startsWith;
lodash.sum = sum;
lodash.template = template;
lodash.trim = trim;
lodash.trimLeft = trimLeft;
lodash.trimRight = trimRight;
lodash.trunc = trunc;
lodash.unescape = unescape;
lodash.uniqueId = uniqueId;
lodash.words = words;


lodash.all = every;
lodash.any = some;
lodash.contains = includes;
lodash.eq = isEqual;
lodash.detect = find;
lodash.foldl = reduce;
lodash.foldr = reduceRight;
lodash.head = first;
lodash.include = includes;
lodash.inject = reduce;

mixin(lodash, (function(){
var source={};
baseForOwn(lodash, function(func, methodName){
if(!lodash.prototype[methodName]){
source[methodName] = func;}});


return source;})(), 
false);




lodash.sample = sample;

lodash.prototype.sample = function(n){
if(!this.__chain__ && n == null){
return sample(this.value());}

return this.thru(function(value){
return sample(value, n);});};












lodash.VERSION = VERSION;


arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName){
lodash[methodName].placeholder = lodash;});



arrayEach(['dropWhile', 'filter', 'map', 'takeWhile'], function(methodName, type){
var isFilter=type != LAZY_MAP_FLAG, 
isDropWhile=type == LAZY_DROP_WHILE_FLAG;

LazyWrapper.prototype[methodName] = function(iteratee, thisArg){
var filtered=this.__filtered__, 
result=filtered && isDropWhile?new LazyWrapper(this):this.clone(), 
iteratees=result.__iteratees__ || (result.__iteratees__ = []);

iteratees.push({
'done':false, 
'count':0, 
'index':0, 
'iteratee':getCallback(iteratee, thisArg, 1), 
'limit':-1, 
'type':type});


result.__filtered__ = filtered || isFilter;
return result;};});




arrayEach(['drop', 'take'], function(methodName, index){
var whileName=methodName + 'While';

LazyWrapper.prototype[methodName] = function(n){
var filtered=this.__filtered__, 
result=filtered && !index?this.dropWhile():this.clone();

n = n == null?1:nativeMax(floor(n) || 0, 0);
if(filtered){
if(index){
result.__takeCount__ = nativeMin(result.__takeCount__, n);}else 
{
last(result.__iteratees__).limit = n;}}else 

{
var views=result.__views__ || (result.__views__ = []);
views.push({'size':n, 'type':methodName + (result.__dir__ < 0?'Right':'')});}

return result;};


LazyWrapper.prototype[methodName + 'Right'] = function(n){
return this.reverse()[methodName](n).reverse();};


LazyWrapper.prototype[methodName + 'RightWhile'] = function(predicate, thisArg){
return this.reverse()[whileName](predicate, thisArg).reverse();};});




arrayEach(['first', 'last'], function(methodName, index){
var takeName='take' + (index?'Right':'');

LazyWrapper.prototype[methodName] = function(){
return this[takeName](1).value()[0];};});




arrayEach(['initial', 'rest'], function(methodName, index){
var dropName='drop' + (index?'':'Right');

LazyWrapper.prototype[methodName] = function(){
return this[dropName](1);};});




arrayEach(['pluck', 'where'], function(methodName, index){
var operationName=index?'filter':'map', 
createCallback=index?baseMatches:property;

LazyWrapper.prototype[methodName] = function(value){
return this[operationName](createCallback(value));};});



LazyWrapper.prototype.compact = function(){
return this.filter(identity);};


LazyWrapper.prototype.reject = function(predicate, thisArg){
predicate = getCallback(predicate, thisArg, 1);
return this.filter(function(value){
return !predicate(value);});};



LazyWrapper.prototype.slice = function(start, end){
start = start == null?0:+start || 0;

var result=this;
if(start < 0){
result = this.takeRight(-start);}else 
if(start){
result = this.drop(start);}

if(end !== undefined){
end = +end || 0;
result = end < 0?result.dropRight(-end):result.take(end - start);}

return result;};


LazyWrapper.prototype.toArray = function(){
return this.drop(0);};



baseForOwn(LazyWrapper.prototype, function(func, methodName){
var lodashFunc=lodash[methodName];
if(!lodashFunc){
return;}

var checkIteratee=/^(?:filter|map|reject)|While$/.test(methodName), 
retUnwrapped=/^(?:first|last)$/.test(methodName);

lodash.prototype[methodName] = function(){
var args=arguments, 
chainAll=this.__chain__, 
value=this.__wrapped__, 
isHybrid=!!this.__actions__.length, 
isLazy=value instanceof LazyWrapper, 
iteratee=args[0], 
useLazy=isLazy || isArray(value);

if(useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1){

isLazy = useLazy = false;}

var onlyLazy=isLazy && !isHybrid;
if(retUnwrapped && !chainAll){
return onlyLazy?
func.call(value):
lodashFunc.call(lodash, this.value());}

var interceptor=function(value){
var otherArgs=[value];
push.apply(otherArgs, args);
return lodashFunc.apply(lodash, otherArgs);};

if(useLazy){
var wrapper=onlyLazy?value:new LazyWrapper(this), 
result=func.apply(wrapper, args);

if(!retUnwrapped && (isHybrid || result.__actions__)){
var actions=result.__actions__ || (result.__actions__ = []);
actions.push({'func':thru, 'args':[interceptor], 'thisArg':lodash});}

return new LodashWrapper(result, chainAll);}

return this.thru(interceptor);};});




arrayEach(['concat', 'join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName){
var func=(/^(?:replace|split)$/.test(methodName)?stringProto:arrayProto)[methodName], 
chainName=/^(?:push|sort|unshift)$/.test(methodName)?'tap':'thru', 
retUnwrapped=/^(?:join|pop|replace|shift)$/.test(methodName);

lodash.prototype[methodName] = function(){
var args=arguments;
if(retUnwrapped && !this.__chain__){
return func.apply(this.value(), args);}

return this[chainName](function(value){
return func.apply(value, args);});};});





baseForOwn(LazyWrapper.prototype, function(func, methodName){
var lodashFunc=lodash[methodName];
if(lodashFunc){
var key=lodashFunc.name, 
names=realNames[key] || (realNames[key] = []);

names.push({'name':methodName, 'func':lodashFunc});}});



realNames[createHybridWrapper(null, BIND_KEY_FLAG).name] = [{'name':'wrapper', 'func':null}];


LazyWrapper.prototype.clone = lazyClone;
LazyWrapper.prototype.reverse = lazyReverse;
LazyWrapper.prototype.value = lazyValue;


lodash.prototype.chain = wrapperChain;
lodash.prototype.commit = wrapperCommit;
lodash.prototype.plant = wrapperPlant;
lodash.prototype.reverse = wrapperReverse;
lodash.prototype.toString = wrapperToString;
lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;


lodash.prototype.collect = lodash.prototype.map;
lodash.prototype.head = lodash.prototype.first;
lodash.prototype.select = lodash.prototype.filter;
lodash.prototype.tail = lodash.prototype.rest;

return lodash;}





var _=runInContext();


if(typeof define == 'function' && typeof define.amd == 'object' && define.amd){




root._ = _;



define(function(){
return _;});}else 



if(freeExports && freeModule){

if(moduleExports){
(freeModule.exports = _)._ = _;}else 


{
freeExports._ = _;}}else 


{

root._ = _;}}).

call(this);});
__d('FAKIconImage',["EdgeInsetsPropType","NativeMethodsMixin","NativeModules","ReactPropTypes","ImageResizeMode","ImageStylePropTypes","React","ReactNativeViewAttributes","StyleSheet","StyleSheetPropType","createReactNativeComponentClass","flattenStyle","insetsDiffer","invariant","merge","warning","deepDiffer"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






var EdgeInsetsPropType=require('EdgeInsetsPropType');
var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var ImageResizeMode=require('ImageResizeMode');
var ImageStylePropTypes=require('ImageStylePropTypes');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var flattenStyle=require('flattenStyle');
var insetsDiffer=require('insetsDiffer');
var invariant=require('invariant');
var merge=require('merge');
var warning=require('warning');
var deepDiffer=require('deepDiffer');

var FAKIconImage=React.createClass({displayName:'FAKIconImage', 
propTypes:{
name:PropTypes.string, 
size:PropTypes.number, 
color:PropTypes.string, 





accessible:PropTypes.bool, 



accessibilityLabel:PropTypes.string, 

style:StyleSheetPropType(ImageStylePropTypes), 




testID:PropTypes.string}, 


mixins:[NativeMethodsMixin], 





viewConfig:{
uiViewClassName:'UIView', 
validAttributes:ReactNativeViewAttributes.UIView}, 


render:function(){

var style=flattenStyle([styles.base, this.props.style]);
invariant(style, 'style must be initialized');

var name=this.props.name;
invariant(name, 'name must be initialized');

var size=this.props.size;
invariant(size, 'size must be initialized');

var color=this.props.color;


var nativeProps=merge(this.props, {
style:style, 
icon:{
name:name, 
size:size, 
color:color}});


return React.createElement(FAKIconImageView, nativeProps);}});



var styles=StyleSheet.create({
base:{
overflow:'hidden'}});



var CommonImageViewAttributes=merge(ReactNativeViewAttributes.UIView, {
accessible:true, 
accessibilityLabel:true, 
icon:{diff:deepDiffer}, 
testID:PropTypes.string});


var FAKIconImageView=createReactNativeComponentClass({
validAttributes:CommonImageViewAttributes, 
uiViewClassName:'FAKIconImage'});


module.exports = FAKIconImage;});
__d('FastPaper/src/components/MyText',["react-native/Libraries/react-native/react-native"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};var React=require("react-native/Libraries/react-native/react-native");var 

StyleSheet=

React.StyleSheet;var Text=React.Text;

var MyText=React.createClass({displayName:"MyText", 
propTypes:{
subText:React.PropTypes.bool, 
mono:React.PropTypes.bool, 
style:React.PropTypes.array}, 


measure:function(callback){
this.refs.root.measure(callback);}, 


handleLayout:function(){}, 



render:function(){
return (
React.createElement(Text, _extends({}, this.props, {
ref:"root", 
style:[styles.root, 
this.props.style, 
this.props.subText && styles.subText, 
this.props.mono && styles.mono]}), 
this.props.children));}});





var styles=StyleSheet.create({
root:{
fontFamily:"Roboto", 
fontWeight:"100", 
color:"#222"}, 

subText:{
color:"#929292"}, 

mono:{
fontFamily:"Roboto Mono"}});




module.exports = MyText;});
__d('FastPaper/src/pages/LoginPage',["react-native/Libraries/react-native/react-native","fluxxor/index","FastPaper/src/pages/ArticlesPage","FastPaper/src/components/MyText","image!logo-white","image!pocket"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var React=require("react-native/Libraries/react-native/react-native");var 

StyleSheet=




React.StyleSheet;var View=React.View;var Image=React.Image;var Text=React.Text;var TouchableOpacity=React.TouchableOpacity;

var Fluxxor=require("fluxxor/index");

var ArticlesPage=require("FastPaper/src/pages/ArticlesPage");
var MyText=require("FastPaper/src/components/MyText");

var LoginPage=React.createClass({displayName:"LoginPage", 
propTypes:{
toggleSidebar:React.PropTypes.func.isRequired}, 


mixins:[
Fluxxor.FluxMixin(React)], 


_handleLoginWithPocket:function(){var _this=this;
this.getFlux().actions.user.
login().
done(function(data){
if(data.isLoggedIn){
_this.props.navigator.resetTo({
title:"Articles Page", 
component:ArticlesPage, 
passProps:{
toggleSidebar:_this.props.toggleSidebar}});}}, 



function(err){
console.log("[Error in LoginPage._handleLoginWithPocket]:", err);});}, 



componentWillMount:function(){
this.getFlux().actions.page.setPage("LOGIN_PAGE");}, 


render:function(){
return (
React.createElement(View, {style:styles.container}, 
React.createElement(View, {style:styles.logo}, 
React.createElement(Image, {style:styles.logoIcon, 
source:require("image!logo-white")}), 

React.createElement(MyText, {style:[styles.logoText]}, "Fast Paper")), 

React.createElement(TouchableOpacity, {onPress:this._handleLoginWithPocket}, 
React.createElement(View, {style:styles.loginButton}, 
React.createElement(Image, {style:styles.loginIcon, 
source:require("image!pocket")}), 

React.createElement(MyText, {style:[styles.loginText]}, "Log in with Pocket")))));}});







var styles=StyleSheet.create({
container:{
flex:1, 
backgroundColor:"#009DDD", 
padding:50, 
paddingTop:100, 
paddingBottom:100}, 

logo:{
flex:1, 

alignItems:"center"}, 

logoIcon:{
width:150, 
height:100, 
marginBottom:10}, 

logoText:{
fontWeight:"100", 
fontSize:46, 
fontStyle:"italic", 
color:"#fff"}, 

loginButton:{
padding:5, 
paddingRight:15, 
alignSelf:"center", 
alignItems:"center", 


flexDirection:"row"}, 


loginIcon:{
width:35, 
height:33, 
marginRight:5}, 


loginText:{
fontSize:22, 
color:"#fff", 
fontWeight:"400"}});



module.exports = LoginPage;});
__d('FastPaper/src/pages/ArticlesPage',["react-native/Libraries/react-native/react-native","fluxxor/index","lodash/index","react-native-refreshable-listview/index","FastPaper/src/pages/ReaderPage","FastPaper/src/components/ArticleItem","FastPaper/src/components/MyText","FastPaper/src/components/Header","FastPaper/src/components/Loader","FastPaper/src/components/SettingsButton"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var React=require("react-native/Libraries/react-native/react-native");var 

StyleSheet=


React.StyleSheet;var View=React.View;var ListView=React.ListView;
var Fluxxor=require("fluxxor/index");
var _=require("lodash/index");
var RefreshableListView=require("react-native-refreshable-listview/index");

var ReaderPage=require("FastPaper/src/pages/ReaderPage");
var ArticleItem=require("FastPaper/src/components/ArticleItem");
var MyText=require("FastPaper/src/components/MyText");
var Header=require("FastPaper/src/components/Header");
var Loader=require("FastPaper/src/components/Loader");
var SettingsButton=require("FastPaper/src/components/SettingsButton");

var ArticlesPage=React.createClass({displayName:"ArticlesPage", 
propTypes:{
toggleSidebar:React.PropTypes.func.isRequired}, 


mixins:[
Fluxxor.FluxMixin(React), 
Fluxxor.StoreWatchMixin("articles")], 


rows:[], 

getStateFromFlux:function(){







var ds=new ListView.DataSource({
rowHasChanged:function(r1, r2){return r1 !== r2;}});


var articles=this.getFlux().stores.articles.getArticles();
return {
articlesDS:ds.cloneWithRows(articles), 
articles:articles};}, 



componentWillMount:function(){
this.getFlux().actions.page.setPage("ARTICLES_PAGE");}, 


componentDidMount:function(){var _this=this;
this.getFlux().actions.articles.
fetch(true).
finally(function(){
if(_this.refs && _this.refs.loader){
_this.refs.loader.hide();}}).


done(undefined, function(err){
console.log("[Error in ArticlesPage.componentDidMount]:", err);});}, 




_handleSelectArticle:function(article){
this.props.navigator.push({
title:article.resolved_title, 
component:ReaderPage, 
passProps:{
article:article, 
toggleSidebar:this.props.toggleSidebar}});}, 




_handleStartSwipe:function(article){var _this2=this;
_.each(this.state.articles, function(a){
if(a.item_id !== article.item_id && _this2.rows["article_" + a.item_id]){
_this2.rows["article_" + a.item_id].swipeToInitialState();}});}, 




_handleRefresh:function(){
this.getFlux().actions.articles.
fetch().
done(undefined, function(err){
console.log("[Error in ArticlesPage._handleRefresh]:", err);});}, 




render:function(){var _this3=this;
return (
React.createElement(View, {style:styles.container}, 
React.createElement(Header, {ref:"header", 
title:"Fast Paper", 
rightButton:React.createElement(SettingsButton, {onPress:this.props.toggleSidebar})}), 

React.createElement(View, {style:styles.container}, 
this.state.articles.length <= 0?
React.createElement(View, {style:styles.noArticlesMsgView}, 
React.createElement(MyText, {style:[styles.noArticlesMsgText]}, "Your list is empty")):

undefined, 

React.createElement(RefreshableListView, {dataSource:this.state.articlesDS, 
style:styles.listView, 
loadData:this._handleRefresh, 
automaticallyAdjustContentInsets:false, 
refreshDescription:"Refreshing articles", 
renderRow:function(a){
return (
React.createElement(ArticleItem, {ref:function(row){return _this3.rows["article_" + a.item_id] = row;}, 
article:a, 
onStartSwipe:_this3._handleStartSwipe.bind(_this3, a), 
onSelect:_this3._handleSelectArticle.bind(_this3, a)}));}}), 


this.state.articles.length <= 0?
React.createElement(Loader, {ref:"loader", 
isVisible:true, 
overlayStyle:{backgroundColor:"transparent"}, 
spinnerColor:"#222"}):
undefined)));}});






var styles=StyleSheet.create({
container:{
flex:1, 
backgroundColor:"#f8f8f8"}, 

listView:{}, 

noArticlesMsgView:{}, 



noArticlesMsgText:{
color:"#222", 
textAlign:"center", 
fontSize:18, 
marginTop:35}});



module.exports = ArticlesPage;});
__d('react-native-refreshable-listview/index',["react-native-refreshable-listview/lib/RefreshableListView"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = require('react-native-refreshable-listview/lib/RefreshableListView');});
__d('react-native-refreshable-listview/lib/RefreshableListView',["react-native/Libraries/react-native/react-native","is-promise/index","react-native-refreshable-listview/lib/delay","react-native-refreshable-listview/lib/ListView","react-native-refreshable-listview/lib/RefreshingIndicator","react-native-refreshable-listview/lib/ControlledRefreshableListView"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};var React=require('react-native/Libraries/react-native/react-native');var 

PropTypes=
React.PropTypes;
var isPromise=require('is-promise/index');
var delay=require('react-native-refreshable-listview/lib/delay');
var ListView=require('react-native-refreshable-listview/lib/ListView');
var RefreshingIndicator=require('react-native-refreshable-listview/lib/RefreshingIndicator');
var ControlledRefreshableListView=require('react-native-refreshable-listview/lib/ControlledRefreshableListView');

const LISTVIEW_REF='listview';

var RefreshableListView=React.createClass({displayName:'RefreshableListView', 
propTypes:{
loadData:PropTypes.func.isRequired, 
minDisplayTime:PropTypes.number, 
minBetweenTime:PropTypes.number, 

refreshDescription:PropTypes.oneOfType([PropTypes.string, PropTypes.element]), 
refreshingIndictatorComponent:PropTypes.oneOfType([PropTypes.func, PropTypes.element]), 
minPulldownDistance:PropTypes.number, 
renderHeaderWrapper:PropTypes.func}, 

getDefaultProps:function(){
return {
minDisplayTime:300, 
minBetweenTime:300, 
minPulldownDistance:40, 
refreshingIndictatorComponent:RefreshingIndicator};}, 


getInitialState:function(){
return {
isRefreshing:false};}, 


handleRefresh:function(){var _this=this;
if(this.willRefresh)return;

this.willRefresh = true;

var loadingDataPromise=new Promise(function(resolve){
var loadDataReturnValue=_this.props.loadData(resolve);

if(isPromise(loadDataReturnValue)){
loadingDataPromise = loadDataReturnValue;}


Promise.all([
loadingDataPromise, 
new Promise(function(resolve){return _this.setState({isRefreshing:true}, resolve);}), 
delay(_this.props.minDisplayTime)]).

then(function(){return delay(_this.props.minBetweenTime);}).
then(function(){
_this.willRefresh = false;
_this.setState({isRefreshing:false});});});}, 



getScrollResponder:function(){
return this.refs[LISTVIEW_REF].getScrollResponder();}, 

setNativeProps:function(props){
this.refs[LISTVIEW_REF].setNativeProps(props);}, 

render:function(){
return (
React.createElement(ControlledRefreshableListView, _extends({}, 
this.props, {
ref:LISTVIEW_REF, 
onRefresh:this.handleRefresh, 
isRefreshing:this.state.isRefreshing})));}});





RefreshableListView.DataSource = ListView.DataSource;
RefreshableListView.RefreshingIndicator = RefreshingIndicator;

module.exports = RefreshableListView;});
__d('is-promise/index',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = isPromise;

function isPromise(obj){
return obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';}});
__d('react-native-refreshable-listview/lib/delay',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function delay(time){
return new Promise(function(resolve){return setTimeout(resolve, time);});}


module.exports = delay;});
__d('react-native-refreshable-listview/lib/ListView',["react-native/Libraries/react-native/react-native"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _require=require('react-native/Libraries/react-native/react-native');var ListView=_require.ListView;

module.exports = ListView;});
__d('react-native-refreshable-listview/lib/RefreshingIndicator',["react-native/Libraries/react-native/react-native"],function(global, require, requireDynamic, requireLazy, module, exports) {  var React=require('react-native/Libraries/react-native/react-native');var 

View=






React.View;var Text=React.Text;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;var PropTypes=React.PropTypes;var StyleSheet=React.StyleSheet;var isValidElement=React.isValidElement;var createElement=React.createElement;

var RefreshingIndicator=React.createClass({displayName:'RefreshingIndicator', 
propTypes:{
activityIndicatorComponent:PropTypes.oneOfType([PropTypes.func, PropTypes.element]), 
stylesheet:PropTypes.object, 
description:PropTypes.oneOfType([PropTypes.string, PropTypes.element])}, 

getDefaultProps:function(){
return {
activityIndicatorComponent:ActivityIndicatorIOS};}, 


renderActivityIndicator:function(style){
var activityIndicator=this.props.activityIndicatorComponent;

if(isValidElement(activityIndicator)){
return activityIndicator;}else 
{
return createElement(activityIndicator, {style:style});}}, 


render:function(){
var styles=Object.assign({}, stylesheet, this.props.stylesheet);

return (
React.createElement(View, {style:[styles.container, styles.wrapper]}, 
React.createElement(View, {style:[styles.container, styles.loading, styles.content]}, 
React.createElement(Text, {style:styles.description}, 
this.props.description), 

this.renderActivityIndicator(styles.activityIndicator))));}});






var stylesheet=StyleSheet.create({
container:{
flex:1, 
justifyContent:'space-around', 
alignItems:'center'}, 

wrapper:{
height:60, 
marginTop:10}, 

content:{
marginTop:10, 
height:60}});



module.exports = RefreshingIndicator;});
__d('react-native-refreshable-listview/lib/ControlledRefreshableListView',["react-native/Libraries/react-native/react-native","react-native-refreshable-listview/lib/ListView","react-native-refreshable-listview/lib/createElementFrom","react-native-refreshable-listview/lib/RefreshingIndicator"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};var React=require('react-native/Libraries/react-native/react-native');var 

PropTypes=
React.PropTypes;
var ListView=require('react-native-refreshable-listview/lib/ListView');
var createElementFrom=require('react-native-refreshable-listview/lib/createElementFrom');
var RefreshingIndicator=require('react-native-refreshable-listview/lib/RefreshingIndicator');

const SCROLL_EVENT_THROTTLE=32;
const MIN_PULLDOWN_DISTANCE=40;

const LISTVIEW_REF='listview';

var ControlledRefreshableListView=React.createClass({displayName:'ControlledRefreshableListView', 
propTypes:{
onRefresh:PropTypes.func.isRequired, 
isRefreshing:PropTypes.bool.isRequired, 
refreshDescription:PropTypes.oneOfType([PropTypes.string, PropTypes.element]), 
refreshingIndictatorComponent:PropTypes.oneOfType([PropTypes.func, PropTypes.element]), 
minPulldownDistance:PropTypes.number, 
ignoreInertialScroll:PropTypes.bool, 
scrollEventThrottle:PropTypes.number, 
onScroll:PropTypes.func, 
renderHeader:PropTypes.func, 
renderHeaderWrapper:PropTypes.func, 
onResponderGrant:PropTypes.func, 
onResponderRelease:PropTypes.func}, 

getDefaultProps:function(){
return {
minPulldownDistance:MIN_PULLDOWN_DISTANCE, 
scrollEventThrottle:SCROLL_EVENT_THROTTLE, 
ignoreInertialScroll:true, 
refreshingIndictatorComponent:RefreshingIndicator};}, 


handleScroll:function(e){
var scrollY=e.nativeEvent.contentInset.top + e.nativeEvent.contentOffset.y;

if(!(this.props.ignoreInertialScroll && this.isTouching)){
if(scrollY < -this.props.minPulldownDistance){
if(!this.props.isRefreshing){
if(this.props.onRefresh){
this.props.onRefresh();}}}}





this.props.onScroll && this.props.onScroll(e);}, 

handleResponderGrant:function(){
this.isTouching = true;
if(this.props.onResponderGrant){
this.props.onResponderGrant.apply(null, arguments);}}, 


handleResponderRelease:function(){
this.isTouching = false;
if(this.props.onResponderRelease){
this.props.onResponderRelease.apply(null, arguments);}}, 


getScrollResponder:function(){
return this.refs[LISTVIEW_REF].getScrollResponder();}, 

setNativeProps:function(props){
this.refs[LISTVIEW_REF].setNativeProps(props);}, 

renderHeader:function(){
var description=this.props.refreshDescription;

var refreshingIndictator;
if(this.props.isRefreshing){
refreshingIndictator = createElementFrom(this.props.refreshingIndictatorComponent, {description:description});}else 
{
refreshingIndictator = null;}


if(this.props.renderHeaderWrapper){
return this.props.renderHeaderWrapper(refreshingIndictator);}else 
if(this.props.renderHeader){
console.warn('renderHeader is deprecated. Use renderHeaderWrapper instead.');
return this.props.renderHeader(refreshingIndictator);}else 
{
return refreshingIndictator;}}, 


render:function(){
return (
React.createElement(ListView, _extends({}, 
this.props, {
ref:LISTVIEW_REF, 
onScroll:this.handleScroll, 
renderHeader:this.renderHeader, 
scrollEventThrottle:this.props.scrollEventThrottle, 
onResponderGrant:this.handleResponderGrant, 
onResponderRelease:this.handleResponderRelease})));}});





ControlledRefreshableListView.DataSource = ListView.DataSource;
ControlledRefreshableListView.RefreshingIndicator = RefreshingIndicator;

module.exports = ControlledRefreshableListView;});
__d('react-native-refreshable-listview/lib/createElementFrom',["react-native/Libraries/react-native/react-native"],function(global, require, requireDynamic, requireLazy, module, exports) {  var React=require('react-native/Libraries/react-native/react-native');var 

cloneElement=


React.cloneElement;var createElement=React.createElement;var isValidElement=React.isValidElement;

function createElementFrom(elementOrClass, props){
if(isValidElement(elementOrClass)){
return cloneElement(elementOrClass, props);}else 
{
return createElement(elementOrClass, props);}}



module.exports = createElementFrom;});
__d('FastPaper/src/pages/ReaderPage',["react-native/Libraries/react-native/react-native","AnimationExperimental","fluxxor/index","FAKIconImage","Dimensions","FastPaper/src/components/MyText","FastPaper/src/components/Header","FastPaper/src/components/Spritz","FastPaper/src/components/Loader","FastPaper/src/components/SettingsButton"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};

var React=require("react-native/Libraries/react-native/react-native");var 

StyleSheet=




React.StyleSheet;var View=React.View;var TouchableWithoutFeedback=React.TouchableWithoutFeedback;var PanResponder=React.PanResponder;var StatusBarIOS=React.StatusBarIOS;

var AnimationExperimental=require("AnimationExperimental");
var Fluxxor=require("fluxxor/index");
var Icon=require("FAKIconImage");
var deviceScreen=require("Dimensions").get("window");

var MyText=require("FastPaper/src/components/MyText");
var Header=require("FastPaper/src/components/Header");
var Spritz=require("FastPaper/src/components/Spritz");
var Loader=require("FastPaper/src/components/Loader");
var SettingsButton=require("FastPaper/src/components/SettingsButton");

var ReaderPage=React.createClass({displayName:"ReaderPage", 
propTypes:{
article:React.PropTypes.object, 
toggleSidebar:React.PropTypes.func.isRequired}, 


mixins:[
Fluxxor.FluxMixin(React), 
Fluxxor.StoreWatchMixin("text", "settings")], 


getStateFromFlux:function(){
return {
isTextReady:this.getFlux().stores.text.isReady(), 
isPlaying:this.getFlux().stores.text.isPlaying(), 
context:this.getFlux().stores.text.getContext(), 
colors:this.getFlux().stores.settings.getThemeColors()};}, 



componentWillMount:function(){var _this=this;
this.getFlux().actions.page.setPage("ARTICLE_PAGE");

this._panResponder = PanResponder.create({
onStartShouldSetPanResponder:function(evt, gestureState){return true;}, 
onStartShouldSetPanResponderCapture:function(evt, gestureState){return true;}, 
onMoveShouldSetPanResponder:function(evt, gestureState){return true;}, 
onMoveShouldSetPanResponderCapture:function(evt, gestureState){return true;}, 
onPanResponderGrant:function(evt, gestureState){
_this.dy = gestureState.dy;

if(_this.state.isPlaying){
_this._handlePause();}}, 


onPanResponderMove:function(evt, gestureState){
if(gestureState.dy < _this.dy){
_this.getFlux().actions.text.toNextSentence();}else 
{
_this.getFlux().actions.text.toPrevSentence();}

_this.dy = gestureState.dy;}});}, 




componentDidMount:function(){
this.refs.loader.show();
this.getFlux().actions.text.
fetchText(this.props.article.item_id).
done(undefined, function(err){
console.log("[Error in ReaderPage.componentDidMount]:", err);});}, 



componentDidUpdate:function(){
if(this.state.isTextReady){
this.refs.loader.hide();}}, 




_handlePlay:function(){
if(!this.state.isTextReady){
return;}


this.getFlux().actions.text.play();
StatusBarIOS.setHidden(true, "fade");
this.refs.header.hide();

AnimationExperimental.startAnimation({
node:this.refs.playButton, 
duration:200, 
easing:"easeInQuad", 
property:"opacity", 
toValue:0});}, 



_handlePause:function(){
this.getFlux().actions.text.pause();
this.refs.header.show();
StatusBarIOS.setHidden(false, "fade");

AnimationExperimental.startAnimation({
node:this.refs.playButton, 
duration:200, 
easing:"easeInQuad", 
property:"opacity", 
toValue:1});}, 



_handleList:function(){
this.props.navigator.pop();}, 



render:function(){
var colors=this.state.colors;
var context=this.state.context;

return (
React.createElement(View, {style:[styles.rootView, {
backgroundColor:colors.background}]}, 


React.createElement(Header, {ref:"header", 
title:this.props.article.resolved_title, 
showBackButton:true, 
navigator:this.props.navigator, 
rightButton:React.createElement(SettingsButton, {onPress:this.props.toggleSidebar})}), 

React.createElement(View, {style:{flex:1}}, 
React.createElement(View, _extends({style:[styles.mainView, this.state.isPlaying && styles.mainViewPlaying]}, 
this._panResponder.panHandlers), 
React.createElement(View, {style:[styles.contextViewShared, styles.contextBeforeView]}, 
!this.state.isPlaying && 
React.createElement(MyText, {style:[styles.contextViewTextShared, 
styles.contextBeforeText, {
color:colors.contextText}]}, 

context.before)), 



React.createElement(View, {style:styles.spritzWraperView}, 
React.createElement(Spritz, {ref:"spritz", 
flux:this.props.flux})), 


React.createElement(View, {style:[styles.contextViewShared, 
styles.contextAfterView]}, 
!this.state.isPlaying && 
React.createElement(MyText, {style:[styles.contextViewTextShared, {
color:colors.contextText}]}, 

context.after))), 




React.createElement(TouchableWithoutFeedback, {onPress:this._handlePlay}, 
React.createElement(View, {ref:"playButton", 
style:[styles.buttonPlay]}, 
React.createElement(Icon, {name:"ion|play", 
size:28, 
color:"#fff", 
style:styles.iconPlay}))), 



React.createElement(Loader, {ref:"loader", spinnerStyle:{marginBottom:40}}))));}});






var TEXT_PADDING=27;
var FOOTER_HEIGHT=45;
var styles=StyleSheet.create({
rootView:{
flex:1, 
justifyContent:"space-between"}, 


mainView:{
flex:1, 
justifyContent:"space-between", 
overflow:"hidden"}, 

mainViewPlaying:{
paddingBottom:FOOTER_HEIGHT}, 





contextViewShared:{
paddingLeft:TEXT_PADDING, 
paddingRight:TEXT_PADDING}, 

contextViewTextShared:{
fontSize:20}, 


contextBeforeView:{
height:140}, 

contextBeforeText:{
position:"absolute", 
bottom:0}, 

spritzWraperView:{
flexDirection:"row", 
alignItems:"center"}, 

contextAfterView:{
flex:1}, 

buttonPlay:{
position:"absolute", 
bottom:40, 
right:30, 
backgroundColor:"#E91E63", 

width:70, 
height:70, 
borderRadius:70, 
margin:5, 

shadowColor:"#000", 
shadowOffset:{width:2, height:3}, 
shadowOpacity:0.6}, 

iconPlay:{
marginLeft:2, 
backgroundColor:"transparent", 
flex:1}});



module.exports = ReaderPage;});
__d('AnimationExperimental',["NativeModules","React","AnimationUtils"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTAnimationManager=require('NativeModules').AnimationExperimentalManager;
var React=require('React');
var AnimationUtils=require('AnimationUtils');



var Properties={
opacity:true, 
position:true, 
positionX:true, 
positionY:true, 
rotation:true, 
scaleXY:true};











var AnimationExperimental={
startAnimation:function(
anim, 








callback)
{
var nodeHandle=React.findNodeHandle(anim.node);
var easingSample=AnimationUtils.evaluateEasingFunction(
anim.duration, 
anim.easing);

var tag=AnimationUtils.allocateTag();
var props={};
props[anim.property] = {to:anim.toValue};
RCTAnimationManager.startAnimation(
nodeHandle, 
tag, 
anim.duration, 
anim.delay, 
easingSample, 
props, 
callback);

return tag;}, 


stopAnimation:function(tag){
RCTAnimationManager.stopAnimation(tag);}};



if(__DEV__){
if(RCTAnimationManager && RCTAnimationManager.Properties){
var a=Object.keys(Properties);
var b=RCTAnimationManager.Properties;
var diff=a.filter(function(i){return b.indexOf(i) < 0;}).concat(
b.filter(function(i){return a.indexOf(i) < 0;}));

if(diff.length > 0){
throw new Error('JS animation properties don\'t match native properties.' + 
JSON.stringify(diff, null, '  '));}}}




module.exports = AnimationExperimental;});
__d('AnimationUtils',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















var defaults={
linear:function(t){
return t;}, 

easeInQuad:function(t){
return t * t;}, 

easeOutQuad:function(t){
return -t * (t - 2);}, 

easeInOutQuad:function(t){
t = t * 2;
if(t < 1){
return 0.5 * t * t;}

return -((t - 1) * (t - 3) - 1) / 2;}, 

easeInCubic:function(t){
return t * t * t;}, 

easeOutCubic:function(t){
t -= 1;
return t * t * t + 1;}, 

easeInOutCubic:function(t){
t *= 2;
if(t < 1){
return 0.5 * t * t * t;}

t -= 2;
return (t * t * t + 2) / 2;}, 

easeInQuart:function(t){
return t * t * t * t;}, 

easeOutQuart:function(t){
t -= 1;
return -(t * t * t * t - 1);}, 

easeInOutQuart:function(t){
t *= 2;
if(t < 1){
return 0.5 * t * t * t * t;}

t -= 2;
return -(t * t * t * t - 2) / 2;}, 

easeInQuint:function(t){
return t * t * t * t * t;}, 

easeOutQuint:function(t){
t -= 1;
return t * t * t * t * t + 1;}, 

easeInOutQuint:function(t){
t *= 2;
if(t < 1){
return t * t * t * t * t / 2;}

t -= 2;
return (t * t * t * t * t + 2) / 2;}, 

easeInSine:function(t){
return -Math.cos(t * (Math.PI / 2)) + 1;}, 

easeOutSine:function(t){
return Math.sin(t * (Math.PI / 2));}, 

easeInOutSine:function(t){
return -(Math.cos(Math.PI * t) - 1) / 2;}, 

easeInExpo:function(t){
return t === 0?0:Math.pow(2, 10 * (t - 1));}, 

easeOutExpo:function(t){
return t === 1?1:-Math.pow(2, -10 * t) + 1;}, 

easeInOutExpo:function(t){
if(t === 0){
return 0;}

if(t === 1){
return 1;}

t *= 2;
if(t < 1){
return 0.5 * Math.pow(2, 10 * (t - 1));}

return (-Math.pow(2, -10 * (t - 1)) + 2) / 2;}, 

easeInCirc:function(t){
return -(Math.sqrt(1 - t * t) - 1);}, 

easeOutCirc:function(t){
t -= 1;
return Math.sqrt(1 - t * t);}, 

easeInOutCirc:function(t){
t *= 2;
if(t < 1){
return -(Math.sqrt(1 - t * t) - 1) / 2;}

t -= 2;
return (Math.sqrt(1 - t * t) + 1) / 2;}, 

easeInElastic:function(t){
var s=1.70158;
var p=0.3;
if(t === 0){
return 0;}

if(t === 1){
return 1;}

var s=p / (2 * Math.PI) * Math.asin(1);
t -= 1;
return -(Math.pow(2, 10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));}, 

easeOutElastic:function(t){
var s=1.70158;
var p=0.3;
if(t === 0){
return 0;}

if(t === 1){
return 1;}

var s=p / (2 * Math.PI) * Math.asin(1);
return Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;}, 

easeInOutElastic:function(t){
var s=1.70158;
var p=0.3 * 1.5;
if(t === 0){
return 0;}

t *= 2;
if(t === 2){
return 1;}

var s=p / (2 * Math.PI) * Math.asin(1);
if(t < 1){
t -= 1;
return -(Math.pow(2, 10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p)) / 2;}

t -= 1;
return Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) / 2 + 1;}, 

easeInBack:function(t){
var s=1.70158;
return t * t * ((s + 1) * t - s);}, 

easeOutBack:function(t){
var s=1.70158;
t -= 1;
return t * t * ((s + 1) * t + s) + 1;}, 

easeInOutBack:function(t){
var s=1.70158 * 1.525;
t *= 2;
if(t < 1){
return t * t * ((s + 1) * t - s) / 2;}

t -= 2;
return (t * t * ((s + 1) * t + s) + 2) / 2;}, 

easeInBounce:function(t){
return 1 - this.easeOutBounce(1 - t);}, 

easeOutBounce:function(t){
if(t < 1 / 2.75){
return 7.5625 * t * t;}else 
if(t < 2 / 2.75){
t -= 1.5 / 2.75;
return 7.5625 * t * t + 0.75;}else 
if(t < 2.5 / 2.75){
t -= 2.25 / 2.75;
return 7.5625 * t * t + 0.9375;}else 
{
t -= 2.625 / 2.75;
return 7.5625 * t * t + 0.984375;}}, 


easeInOutBounce:function(t){
if(t < 0.5){
return this.easeInBounce(t * 2) / 2;}

return this.easeOutBounce(t * 2 - 1) / 2 + 0.5;}};



var ticksPerSecond=60;
var lastUsedTag=0;

module.exports = {



allocateTag:function(){
return ++lastUsedTag;}, 





evaluateEasingFunction:function(duration, easing){
if(typeof easing === 'string'){
easing = defaults[easing] || defaults.easeOutQuad;}


var tickCount=Math.round(duration * ticksPerSecond / 1000);
var samples=[];
if(tickCount > 0){
for(var i=0; i <= tickCount; i++) {
samples.push(easing.call(defaults, i / tickCount));}}



return samples;}, 


Defaults:defaults};});
__d('FastPaper/src/components/Header',["react-native/Libraries/react-native/react-native","AnimationExperimental","FastPaper/src/components/MyText","fluxxor/index","FAKIconImage"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var React=require("react-native/Libraries/react-native/react-native");var 

StyleSheet=



React.StyleSheet;var View=React.View;var TouchableWithoutFeedback=React.TouchableWithoutFeedback;var TouchableOpacity=React.TouchableOpacity;

var AnimationExperimental=require("AnimationExperimental");
var MyText=require("FastPaper/src/components/MyText");
var Fluxxor=require("fluxxor/index");
var Icon=require("FAKIconImage");

var Header=React.createClass({displayName:"Header", 
propTypes:{
showBackButton:React.PropTypes.bool, 
navigator:React.PropTypes.object, 
rightButton:React.PropTypes.object, 
onRightButton:React.PropTypes.func, 
title:React.PropTypes.string}, 


mixins:[
Fluxxor.FluxMixin(React)], 


getInitialState:function(){
return {
isHidden:false};}, 




_handleBack:function(){
this.props.navigator.pop();}, 


_handleRightButton:function(){
if(this.props.onRightButton){
this.props.onRightButton();}}, 



hide:function(){
AnimationExperimental.startAnimation({
node:this.refs.root, 
duration:200, 
easing:"easeIn", 
property:"opacity", 
toValue:0});}, 



show:function(){
AnimationExperimental.startAnimation({
node:this.refs.root, 
duration:200, 
easing:"easeIn", 
property:"opacity", 
toValue:1});}, 




render:function(){
return (
React.createElement(View, {ref:"root", 
style:[styles.container]}, 
this.props.showBackButton?
React.createElement(TouchableOpacity, {onPress:this._handleBack}, 
React.createElement(Icon, {name:"ion|ios-arrow-back", 
size:24, 
color:"#fff", 
style:styles.button})):

React.createElement(View, {style:styles.button}), 

React.createElement(MyText, {style:[styles.title], 
numberOfLines:1}, 
this.props.title), 


this.props.rightButton?
React.createElement(TouchableWithoutFeedback, {onPress:this._handleRightButton, 
style:styles.button}, 
this.props.rightButton):

React.createElement(View, {style:styles.button})));}});





var HEIGHT=80;
var styles=StyleSheet.create({
container:{
paddingTop:20, 

backgroundColor:"#009DDD", 
borderColor:"#999", 
borderBottomWidth:0.5, 
height:HEIGHT, 
flexDirection:"row", 
alignItems:"center", 
justifyContent:"space-between"}, 

button:{
width:50, 
height:55, 
margin:0}, 

title:{
flex:2, 
textAlign:"center", 
fontSize:20, 
color:"#fff"}, 

hidden:{
opacity:0}});



module.exports = Header;});
__d('FastPaper/src/components/Spritz',["react-native/Libraries/react-native/react-native","FastPaper/src/components/MyText","lodash/index","fluxxor/index","pubsub-js/src/pubsub"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var React=require("react-native/Libraries/react-native/react-native");var 

StyleSheet=



React.StyleSheet;var View=React.View;var ListView=React.ListView;var TouchableHighlight=React.TouchableHighlight;

var MyText=require("FastPaper/src/components/MyText");
var _=require("lodash/index");
var Fluxxor=require("fluxxor/index");
var PubSub=require("pubsub-js/src/pubsub");
window.PubSub = PubSub;

var Spritz=React.createClass({displayName:"Spritz", 
mixins:[
Fluxxor.FluxMixin(React), 
Fluxxor.StoreWatchMixin("text", "settings")], 


propTypes:{
onContextUpdate:React.PropTypes.func}, 


getStateFromFlux:function(){
return {
text:this.getFlux().stores.text.getText(), 
word:this.getFlux().stores.text.getWord(), 
colors:this.getFlux().stores.settings.getThemeColors()};}, 



componentWillUnmount:function(){
this.getFlux().actions.text.destroyReader();}, 



render:function(){
var word=this.state.word || [];
var colors=this.state.colors;

return (
React.createElement(View, {style:[styles.container, {
borderColor:colors.line}]}, 

React.createElement(View, {style:styles.pivotWrapper}, 
React.createElement(View, {style:[styles.pivot,, {
backgroundColor:colors.line}]}), 

React.createElement(View, {style:[styles.pivot,, {
backgroundColor:colors.line}]})), 



React.createElement(View, {style:styles.word}, 
React.createElement(MyText, {mono:true, 
style:[styles.wordPart1, 
this.state.pivotLetterWidth && {
width:LEFT_PIVOT_OFFSET - this.state.pivotLetterWidth / 2}, 
{
color:colors.text}]}, 

word[0]), 


React.createElement(MyText, {mono:true, 
style:[styles.wordPart2, {
color:colors.pivot}]}, 

word[1]), 


React.createElement(MyText, {mono:true, 
style:[styles.wordPart3, {
color:colors.text}]}, 

word[2]))));}});







var HEIGHT=75;
var BORDER_WIDTH=2;
var LEFT_PIVOT_OFFSET=120;
var PIVOT_HEIGTH=10;
var FONT_SIZE=32;
var SPRITZ_MARGIN=25;
var styles=StyleSheet.create({
container:{
height:HEIGHT, 
borderBottomWidth:BORDER_WIDTH, 
borderTopWidth:BORDER_WIDTH, 
flex:1, 
marginBottom:SPRITZ_MARGIN, 
marginTop:SPRITZ_MARGIN, 
justifyContent:"center"}, 

pivotWrapper:{
position:"absolute", 
top:0, 
left:LEFT_PIVOT_OFFSET, 
width:BORDER_WIDTH, 
height:HEIGHT - BORDER_WIDTH * 2, 
flexDirection:"column", 
justifyContent:"space-between"}, 

pivot:{
width:BORDER_WIDTH, 
height:PIVOT_HEIGTH}, 

word:{
marginTop:-5, 
padding:0, 
flexDirection:"row"}, 

wordPart1:{
fontSize:FONT_SIZE, 
width:LEFT_PIVOT_OFFSET - 10, 
textAlign:"right"}, 

wordPart2:{
fontSize:FONT_SIZE}, 

wordPart3:{
fontSize:FONT_SIZE}, 

hidden:{
position:"absolute", 
opacity:0}});




module.exports = Spritz;});
__d('pubsub-js/src/pubsub',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (





function(root, factory){
'use strict';

if(typeof define === 'function' && define.amd){

define(['exports'], factory);}else 

if(typeof exports === 'object'){

factory(exports);}else 

{

var PubSub={};
root.PubSub = PubSub;
factory(PubSub);}})(

typeof window === 'object' && window || this, function(PubSub){
'use strict';

var messages={}, 
lastUid=-1;

function hasKeys(obj){
var key;

for(key in obj) {
if(obj.hasOwnProperty(key)){
return true;}}


return false;}






function throwException(ex){
return function reThrowException(){
throw ex;};}



function callSubscriberWithDelayedExceptions(subscriber, message, data){
try{
subscriber(message, data);}
catch(ex) {
setTimeout(throwException(ex), 0);}}



function callSubscriberWithImmediateExceptions(subscriber, message, data){
subscriber(message, data);}


function deliverMessage(originalMessage, matchedMessage, data, immediateExceptions){
var subscribers=messages[matchedMessage], 
callSubscriber=immediateExceptions?callSubscriberWithImmediateExceptions:callSubscriberWithDelayedExceptions, 
s;

if(!messages.hasOwnProperty(matchedMessage)){
return;}


for(s in subscribers) {
if(subscribers.hasOwnProperty(s)){
callSubscriber(subscribers[s], originalMessage, data);}}}




function createDeliveryFunction(message, data, immediateExceptions){
return function deliverNamespaced(){
var topic=String(message), 
position=topic.lastIndexOf('.');


deliverMessage(message, message, data, immediateExceptions);


while(position !== -1) {
topic = topic.substr(0, position);
position = topic.lastIndexOf('.');
deliverMessage(message, topic, data, immediateExceptions);}};}




function messageHasSubscribers(message){
var topic=String(message), 
found=Boolean(messages.hasOwnProperty(topic) && hasKeys(messages[topic])), 
position=topic.lastIndexOf('.');

while(!found && position !== -1) {
topic = topic.substr(0, position);
position = topic.lastIndexOf('.');
found = Boolean(messages.hasOwnProperty(topic) && hasKeys(messages[topic]));}


return found;}


function publish(message, data, sync, immediateExceptions){
var deliver=createDeliveryFunction(message, data, immediateExceptions), 
hasSubscribers=messageHasSubscribers(message);

if(!hasSubscribers){
return false;}


if(sync === true){
deliver();}else 
{
setTimeout(deliver, 0);}

return true;}








PubSub.publish = function(message, data){
return publish(message, data, false, PubSub.immediateExceptions);};








PubSub.publishSync = function(message, data){
return publish(message, data, true, PubSub.immediateExceptions);};









PubSub.subscribe = function(message, func){
if(typeof func !== 'function'){
return false;}



if(!messages.hasOwnProperty(message)){
messages[message] = {};}




var token='uid_' + String(++lastUid);
messages[message][token] = func;


return token;};




PubSub.clearAllSubscriptions = function clearAllSubscriptions(){
messages = {};};




PubSub.clearSubscriptions = function clearSubscriptions(topic){
var m;
for(m in messages) {
if(messages.hasOwnProperty(m) && m.indexOf(topic) === 0){
delete messages[m];}}};























PubSub.unsubscribe = function(value){
var isTopic=typeof value === 'string' && messages.hasOwnProperty(value), 
isToken=!isTopic && typeof value === 'string', 
isFunction=typeof value === 'function', 
result=false, 
m, message, t;

if(isTopic){
delete messages[value];
return;}


for(m in messages) {
if(messages.hasOwnProperty(m)){
message = messages[m];

if(isToken && message[value]){
delete message[value];
result = value;

break;}


if(isFunction){
for(t in message) {
if(message.hasOwnProperty(t) && message[t] === value){
delete message[t];
result = true;}}}}}






return result;};});});
__d('FastPaper/src/components/Loader',["react-native/Libraries/react-native/react-native"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var React=require("react-native/Libraries/react-native/react-native");var 

StyleSheet=


React.StyleSheet;var View=React.View;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;

var Loader=React.createClass({displayName:"Loader", 
propTypes:{
isVisible:React.PropTypes.bool, 
overlayStyle:React.PropTypes.object, 
spinnerStyle:React.PropTypes.object, 
showOverlay:React.PropTypes.bool, 
spinnerColor:React.PropTypes.string}, 


getDefaultProps:function(){
return {
spinnerColor:"white"};}, 



getInitialState:function(){
return {
isVisible:this.props.isVisible};}, 



show:function(){
this.setState({
isVisible:true});}, 



hide:function(){
this.setState({
isVisible:false});}, 



render:function(){
if(!this.state.isVisible){
return React.createElement(View, null);}


return (
React.createElement(View, {style:[styles.overlay, this.props.overlayStyle]}, 
React.createElement(ActivityIndicatorIOS, {style:[styles.spinner, this.props.spinnerStyle], 
color:this.props.spinnerColor, 
size:"large"})));}});





var styles=StyleSheet.create({
overlay:{
alignItems:"center", 
justifyContent:"center", 
flex:1, 
position:"absolute", 
top:0, 
left:0, 
right:0, 
bottom:0, 
backgroundColor:"rgba(0, 0, 0, 0.4)"}, 

box:{
justifyContent:"center", 
alignItems:"center", 
width:100, 
height:100, 
borderRadius:16, 
backgroundColor:"#FFFFFF"}, 

spinner:{
alignItems:"center", 
justifyContent:"center", 
width:50, 
height:50, 
borderRadius:50 / 2}});



module.exports = Loader;});
__d('FastPaper/src/components/SettingsButton',["react-native/Libraries/react-native/react-native","FAKIconImage"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};

var React=require("react-native/Libraries/react-native/react-native");var 

StyleSheet=

React.StyleSheet;var TouchableOpacity=React.TouchableOpacity;
var Icon=require("FAKIconImage");

var SettingsButton=React.createClass({displayName:"SettingsButton", 
propTypes:{
onPress:React.PropTypes.func}, 


_handleRightButton:function(){
if(this.props.onPress){
this.props.onPress();}}, 



render:function(){
return (
React.createElement(TouchableOpacity, _extends({}, this.props, {onPress:this._handleRightButton}), 
React.createElement(Icon, {name:"ion|ios-settings-strong", 
size:24, 
color:"#fff", 
style:styles.root})));}});





var styles=StyleSheet.create({
root:{
width:50, 
height:55}});



module.exports = SettingsButton;});
__d('FastPaper/src/components/ArticleItem',["react-native/Libraries/react-native/react-native","react-native-swiper/dist/index","FastPaper/src/components/MyText","url-parse/index","fluxxor/index","FAKIconImage"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var React=require("react-native/Libraries/react-native/react-native");var 

StyleSheet=






React.StyleSheet;var View=React.View;var Image=React.Image;var ListView=React.ListView;var TouchableOpacity=React.TouchableOpacity;var TouchableWithoutFeedback=React.TouchableWithoutFeedback;var AlertIOS=React.AlertIOS;

var Swiper=require("react-native-swiper/dist/index");
var MyText=require("FastPaper/src/components/MyText");
var parse=require("url-parse/index");
var Fluxxor=require("fluxxor/index");
var Icon=require("FAKIconImage");

var ArticleItem=React.createClass({displayName:"ArticleItem", 
propTypes:{
article:React.PropTypes.object.isRequired, 
onSelect:React.PropTypes.func.isRequired, 
onStartSwipe:React.PropTypes.func.isRequired}, 


mixins:[
Fluxxor.FluxMixin(React)], 



swipeToInitialState:function(){
this.refs.swiper.scrollTo(this.refs.swiper.state.index * -1);}, 



_handleSelectArticle:function(){
this.props.onSelect();}, 


_handleFavorite:function(){
if(this.props.article.favorite === "1"){
this.getFlux().actions.articles.unfavorite(this.props.article.item_id);}else 
{
this.getFlux().actions.articles.favorite(this.props.article.item_id);}}, 



_handleArchive:function(){
this.swipeToInitialState();
this.getFlux().actions.articles.archive(this.props.article.item_id);}, 


_handleDelete:function(){var _this=this;
AlertIOS.alert(
"Are you sure?", 
"Are you sure you want to delete this article? This cannot be undone.", 
[
{text:"Cancel"}, 
{text:"Delete", onPress:function(){
_this.swipeToInitialState();
_this.getFlux().actions.articles.delete(_this.props.article.item_id);}}]);}, 







render:function(){
var article=this.props.article || {};
var host=parse(article.resolved_url, true).host.replace("www.", "");
var image_src=article.image?article.image.src:"";
var title=article.resolved_title.replace(/\s+/g, " ");

return (
React.createElement(Swiper, {ref:"swiper", 
style:styles.container, 
height:HEIGHT, 
showsPagination:false, 
onTouchStart:this.props.onStartSwipe.bind(this, this.props.article.item_id), 
loop:false, 
index:0}, 
React.createElement(TouchableOpacity, {activeOpacity:0.5, 
onPress:this._handleSelectArticle}, 
React.createElement(View, {style:styles.swipeInfoPart}, 
React.createElement(View, {style:styles.columnStar}, 
article.favorite === "1" && 
React.createElement(Icon, {name:"ion|android-star", 
size:18, 
color:"#fc8", 
style:styles.starIcon})), 


React.createElement(View, {style:styles.columnInfo}, 
React.createElement(MyText, {style:[styles.title], 
numberOfLines:3}, 
title), 


React.createElement(MyText, {style:[styles.host], subText:true}, 
host)), 



image_src?
React.createElement(View, {style:styles.columnImage}, 
React.createElement(Image, {source:{uri:image_src}, style:styles.image})):

undefined)), 



React.createElement(View, {style:styles.swipeActionsPart}, 
React.createElement(TouchableOpacity, {onPress:this._handleArchive}, 
React.createElement(Icon, {name:"ion|checkmark-round", 
size:32, 
color:"#000", 
style:styles.icon})), 


React.createElement(TouchableOpacity, {onPress:this._handleFavorite}, 
React.createElement(Icon, {name:"ion|android-star", 
size:32, 
color:article.favorite === "1"?"#fc8":"#000", 
style:styles.icon})), 


React.createElement(TouchableOpacity, {onPress:this._handleDelete}, 
React.createElement(Icon, {name:"ion|trash-b", 
size:32, 
color:"#000", 
style:styles.icon})))));}});







var HEIGHT=110;
var styles=StyleSheet.create({
container:{
height:110}, 

swipeInfoPart:{
padding:10, 
paddingLeft:8, 
paddingRight:8, 
height:HEIGHT, 
justifyContent:"center", 
flexDirection:"row", 
flexWrap:"nowrap", 
backgroundColor:"#fff"}, 

columnStar:{
width:19}, 

starIcon:{
height:18, 
marginTop:2}, 

columnInfo:{
flex:1}, 

title:{
fontSize:18, 
paddingRight:19}, 

host:{
marginTop:5, 
fontSize:12}, 

columnImage:{
width:80, 


alignItems:"center"}, 

image:{
width:60, 
height:60, 
borderRadius:5, 
resizeMode:"cover", 
backgroundColor:"#333"}, 

swipeActionsPart:{
height:HEIGHT, 
justifyContent:"center", 
alignItems:"center", 
flexDirection:"row", 
backgroundColor:"#f8f8f8"}, 

icon:{
height:30, 
flex:1}});



module.exports = ArticleItem;});
__d('react-native-swiper/dist/index',["react-native/Libraries/react-native/react-native","react-timer-mixin/TimerMixin","Dimensions"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var _interopRequireWildcard=function(obj){return obj && obj.__esModule?obj:{'default':obj};};

var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};

Object.defineProperty(exports, '__esModule', {
value:true});








var _React$StyleSheet$Text$View$ScrollView$TouchableOpacity=require('react-native/Libraries/react-native/react-native');

var _React$StyleSheet$Text$View$ScrollView$TouchableOpacity2=_interopRequireWildcard(_React$StyleSheet$Text$View$ScrollView$TouchableOpacity);







var _TimerMixin=require('react-timer-mixin/TimerMixin');

var _TimerMixin2=_interopRequireWildcard(_TimerMixin);

var _Dimensions=require('Dimensions');

var _Dimensions2=_interopRequireWildcard(_Dimensions);

'use strict';
var _Dimensions$get=_Dimensions2['default'].get('window');

var width=_Dimensions$get.width;
var height=_Dimensions$get.height;





var styles=_React$StyleSheet$Text$View$ScrollView$TouchableOpacity.StyleSheet.create({
container:{
backgroundColor:'transparent', 
position:'relative'}, 

wrapper:{
backgroundColor:'transparent'}, 

slide:{
backgroundColor:'transparent'}, 

pagination_x:{
position:'absolute', 
bottom:25, 
left:0, 
right:0, 
flexDirection:'row', 
flex:1, 
justifyContent:'center', 
alignItems:'center', 
backgroundColor:'transparent'}, 

pagination_y:{
position:'absolute', 
right:15, 
top:0, 
bottom:0, 
flexDirection:'column', 
flex:1, 
justifyContent:'center', 
alignItems:'center', 
backgroundColor:'transparent'}, 

title:{
height:30, 
justifyContent:'center', 
position:'absolute', 
paddingLeft:10, 
bottom:-30, 
left:0, 
flexWrap:'nowrap', 
width:250, 
backgroundColor:'transparent'}, 

buttonWrapper:{
backgroundColor:'transparent', 
flexDirection:'row', 
position:'absolute', 
top:0, 
left:0, 
flex:1, 
paddingHorizontal:10, 
paddingVertical:10, 
justifyContent:'space-between', 
alignItems:'center'}, 


buttonText:{
fontSize:50, 
color:'#007aff', 
fontFamily:'Arial'}});

exports['default'] = _React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].createClass({
displayName:'index', 





propTypes:{
horizontal:_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].PropTypes.bool, 
children:_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].PropTypes.node.isRequired, 
style:_React$StyleSheet$Text$View$ScrollView$TouchableOpacity.View.propTypes.style, 
pagingEnabled:_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].PropTypes.bool, 
showsHorizontalScrollIndicator:_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].PropTypes.bool, 
showsVerticalScrollIndicator:_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].PropTypes.bool, 
bounces:_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].PropTypes.bool, 
scrollsToTop:_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].PropTypes.bool, 
removeClippedSubviews:_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].PropTypes.bool, 
automaticallyAdjustContentInsets:_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].PropTypes.bool, 
showsPagination:_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].PropTypes.bool, 
showsButtons:_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].PropTypes.bool, 
loop:_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].PropTypes.bool, 
autoplay:_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].PropTypes.bool, 
autoplayTimeout:_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].PropTypes.number, 
autoplayDirection:_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].PropTypes.bool, 
index:_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].PropTypes.number, 
renderPagination:_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].PropTypes.func}, 

mixins:[_TimerMixin2['default']], 






getDefaultProps:function getDefaultProps(){
return {
horizontal:true, 
pagingEnabled:true, 
showsHorizontalScrollIndicator:false, 
showsVerticalScrollIndicator:false, 
bounces:false, 
scrollsToTop:false, 
removeClippedSubviews:true, 
automaticallyAdjustContentInsets:false, 
showsPagination:true, 
showsButtons:false, 
loop:true, 
autoplay:false, 
autoplayTimeout:2.5, 
autoplayDirection:true, 
index:0};}, 






getInitialState:function getInitialState(){
var props=this.props;

var initState={
isScrolling:false, 
autoplayEnd:false};

initState.total = props.children?props.children.length || 1:0;

initState.index = initState.total > 1?Math.min(props.index, initState.total - 1):0;


initState.dir = props.horizontal == false?'y':'x';
initState.width = props.width || width;
initState.height = props.height || height;
initState.offset = {};

if(initState.total > 1){
var setup=props.loop?1:initState.index;
initState.offset[initState.dir] = initState.dir == 'y'?initState.height * setup:initState.width * setup;}


return initState;}, 






autoplayTimer:null, 

componentWillMount:function componentWillMount(){
this.props = this.injectState(this.props);}, 


componentDidMount:function componentDidMount(){
this.autoplay();}, 





autoplay:function autoplay(){
var _this=this;

if(!this.props.autoplay || this.state.isScrolling || this.state.autoplayEnd){
return;}
clearTimeout(this.autoplayTimer);

this.autoplayTimer = this.setTimeout(function(){
if(!_this.props.loop && (_this.props.autoplayDirection?_this.state.index == _this.state.total - 1:_this.state.index == 0))return _this.setState({
autoplayEnd:true});

_this.scrollTo(_this.props.autoplayDirection?1:-1);}, 
this.props.autoplayTimeout * 1000);}, 






onScrollBegin:function onScrollBegin(e){
var _this2=this;


this.setState({
isScrolling:true});


this.setTimeout(function(){
_this2.props.onScrollBeginDrag && _this2.props.onScrollBeginDrag(e, _this2.state, _this2);});}, 







onScrollEnd:function onScrollEnd(e){
var _this3=this;


this.setState({
isScrolling:false});


this.updateIndex(e.nativeEvent.contentOffset, this.state.dir);



this.setTimeout(function(){
_this3.autoplay();


_this3.props.onMomentumScrollEnd && _this3.props.onMomentumScrollEnd(e, _this3.state, _this3);});}, 








updateIndex:function updateIndex(offset, dir){

var state=this.state;
var index=state.index;
var diff=offset[dir] - state.offset[dir];
var step=dir == 'x'?state.width:state.height;


if(!diff){
return;}


index = index + diff / step;

if(this.props.loop){
if(index <= -1){
index = state.total - 1;
offset[dir] = step * state.total;}else 
if(index >= state.total){
index = 0;
offset[dir] = step;}}



this.setState({
index:index, 
offset:offset});}, 






scrollTo:function scrollTo(index){
if(this.state.isScrolling){
return;}
var state=this.state;
var diff=(this.props.loop?1:0) + index + this.state.index;
var x=0;
var y=0;
if(state.dir == 'x')x = diff * state.width;
if(state.dir == 'y')y = diff * state.height;
this.refs.scrollView && this.refs.scrollView.scrollTo(y, x);


this.setState({
isScrolling:true, 
autoplayEnd:false});}, 






renderPagination:function renderPagination(){


if(this.state.total <= 1){
return null;}
var dots=[];
for(var i=0; i < this.state.total; i++) {
dots.push(i === this.state.index?this.props.activeDot || _React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].createElement(_React$StyleSheet$Text$View$ScrollView$TouchableOpacity.View, {style:{
backgroundColor:'#007aff', 
width:8, 
height:8, 
borderRadius:4, 
marginLeft:3, 
marginRight:3, 
marginTop:3, 
marginBottom:3}}):this.props.dot || _React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].createElement(_React$StyleSheet$Text$View$ScrollView$TouchableOpacity.View, {style:{
backgroundColor:'rgba(0,0,0,.2)', 
width:8, 
height:8, 
borderRadius:4, 
marginLeft:3, 
marginRight:3, 
marginTop:3, 
marginBottom:3}}));}


return _React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].createElement(
_React$StyleSheet$Text$View$ScrollView$TouchableOpacity.View, 
{pointerEvents:'none', style:[styles['pagination_' + this.state.dir], this.props.paginationStyle]}, 
dots);}, 



renderTitle:function renderTitle(){
var child=this.props.children[this.state.index];
var title=child && child.props.title;
return title?_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].createElement(
_React$StyleSheet$Text$View$ScrollView$TouchableOpacity.View, 
{style:styles.title}, 
this.props.children[this.state.index].props.title):
null;}, 


renderButtons:function renderButtons(){
var _this4=this;

var nextButton=this.props.nextButton || _React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].createElement(
_React$StyleSheet$Text$View$ScrollView$TouchableOpacity.Text, 
{style:[styles.buttonText, {color:!this.props.loop && this.state.index == this.state.total - 1?'rgba(0,0,0,0)':'#007aff'}]}, 
'›');


var prevButton=this.props.prevButton || _React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].createElement(
_React$StyleSheet$Text$View$ScrollView$TouchableOpacity.Text, 
{style:[styles.buttonText, {color:!this.props.loop && this.state.index == 0?'rgba(0,0,0,0)':'#007aff'}]}, 
'‹');


return _React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].createElement(
_React$StyleSheet$Text$View$ScrollView$TouchableOpacity.View, 
{pointerEvents:'box-none', style:[styles.buttonWrapper, {width:this.state.width, height:this.state.height}, this.props.buttonWrapperStyle]}, 
_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].createElement(
_React$StyleSheet$Text$View$ScrollView$TouchableOpacity.TouchableOpacity, 
{onPress:function(){
return !(!_this4.props.loop && _this4.state.index == 0) && _this4.scrollTo.call(_this4, -1);}}, 

_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].createElement(
_React$StyleSheet$Text$View$ScrollView$TouchableOpacity.View, 
null, 
prevButton)), 


_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].createElement(
_React$StyleSheet$Text$View$ScrollView$TouchableOpacity.TouchableOpacity, 
{onPress:function(){
return !(!_this4.props.loop && _this4.state.index == _this4.state.total - 1) && _this4.scrollTo.call(_this4, 1);}}, 

_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].createElement(
_React$StyleSheet$Text$View$ScrollView$TouchableOpacity.View, 
null, 
nextButton)));}, 










injectState:function injectState(props){
var _this5=this;









for(var prop in props) {

if(typeof props[prop] === 'function' && prop !== 'onMomentumScrollEnd' && prop !== 'renderPagination' && prop !== 'onScrollBeginDrag'){
(function(){
var originResponder=props[prop];
props[prop] = function(e){
return originResponder(e, _this5.state, _this5);};})();}}





return props;}, 






render:function render(){
var state=this.state;
var props=this.props;
var children=props.children;
var index=state.index;
var total=state.total;
var loop=props.loop;
var dir=state.dir;
var key=0;

var pages=[];
var pageStyle=[{width:state.width, height:state.height}, styles.slide];


if(total > 1){


pages = Object.keys(children);
if(loop){
pages.unshift(total - 1);
pages.push(0);}


pages = pages.map(function(page, i){
return _React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].createElement(
_React$StyleSheet$Text$View$ScrollView$TouchableOpacity.View, 
{style:pageStyle, key:i}, 
children[page]);});}else 


pages = _React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].createElement(
_React$StyleSheet$Text$View$ScrollView$TouchableOpacity.View, 
{style:pageStyle}, 
children);


return _React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].createElement(
_React$StyleSheet$Text$View$ScrollView$TouchableOpacity.View, 
{style:[styles.container, {
width:state.width, 
height:state.height}]}, 

_React$StyleSheet$Text$View$ScrollView$TouchableOpacity2['default'].createElement(
_React$StyleSheet$Text$View$ScrollView$TouchableOpacity.ScrollView, 
_extends({ref:'scrollView'}, 
props, {
contentContainerStyle:[styles.wrapper, props.style], 
contentOffset:state.offset, 
onScrollBeginDrag:this.onScrollBegin, 
onMomentumScrollEnd:this.onScrollEnd}), 
pages), 

props.showsPagination && (props.renderPagination?this.props.renderPagination(state.index, state.total, this):this.renderPagination()), 
this.renderTitle(), 
this.props.showsButtons && this.renderButtons());}});



module.exports = exports['default'];});
__d('url-parse/index',["requires-port/index","url-parse/lolcation","querystringify/index"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var required=require('requires-port/index'), 
lolcation=require('url-parse/lolcation'), 
qs=require('querystringify/index'), 
relativere=/^\/(?!\/)/;













var instructions=[
['#', 'hash'], 
['?', 'query'], 
['//', 'protocol', 2, 1, 1], 
['/', 'pathname'], 
['@', 'auth', 1], 
[NaN, 'host', undefined, 1, 1], 
[/\:(\d+)$/, 'port'], 
[NaN, 'hostname', undefined, 1, 1]];













function URL(address, location, parser){
if(!(this instanceof URL)){
return new URL(address, location, parser);}


var relative=relativere.test(address), 
parse, instruction, index, key, 
type=typeof location, 
url=this, 
i=0;












if('object' !== type && 'string' !== type){
parser = location;
location = null;}


if(parser && 'function' !== typeof parser){
parser = qs.parse;}


location = lolcation(location);

for(; i < instructions.length; i++) {
instruction = instructions[i];
parse = instruction[0];
key = instruction[1];

if(parse !== parse){
url[key] = address;}else 
if('string' === typeof parse){
if(~(index = address.indexOf(parse))){
if('number' === typeof instruction[2]){
url[key] = address.slice(0, index);
address = address.slice(index + instruction[2]);}else 
{
url[key] = address.slice(index);
address = address.slice(0, index);}}}else 


if(index = parse.exec(address)){
url[key] = index[1];
address = address.slice(0, address.length - index[0].length);}


url[key] = url[key] || (instruction[3] || 'port' === key && relative?location[key] || '':'');





if(instruction[4]){
url[key] = url[key].toLowerCase();}}








if(parser)url.query = parser(url.query);






if(!required(url.port, url.protocol)){
url.host = url.hostname;
url.port = '';}





url.username = url.password = '';
if(url.auth){
instruction = url.auth.split(':');
url.username = instruction[0] || '';
url.password = instruction[1] || '';}





url.href = url.toString();}











URL.prototype.set = function set(part, value, fn){
var url=this;

if('query' === part){
if('string' === typeof value)value = (fn || qs.parse)(value);
url[part] = value;}else 
if('port' === part){
url[part] = value;

if(!required(value, url.protocol)){
url.host = url.hostname;
url[part] = '';}else 
if(value){
url.host = url.hostname + ':' + value;}}else 

if('hostname' === part){
url[part] = value;

if(url.port)value += ':' + url.port;
url.host = value;}else 
if('host' === part){
url[part] = value;

if(/\:\d+/.test(value)){
value = value.split(':');
url.hostname = value[0];
url.port = value[1];}}else 

{
url[part] = value;}


url.href = url.toString();
return url;};









URL.prototype.toString = function toString(stringify){
if(!stringify || 'function' !== typeof stringify)stringify = qs.stringify;

var query, 
url=this, 
result=url.protocol + '//';

if(url.username){
result += url.username;
if(url.password)result += ':' + url.password;
result += '@';}


result += url.hostname;
if(url.port)result += ':' + url.port;

result += url.pathname;

if(url.query){
if('object' === typeof url.query)query = stringify(url.query);else 
query = url.query;

result += (query.charAt(0) === '?'?'':'?') + query;}


if(url.hash)result += url.hash;

return result;};






URL.qs = qs;
URL.location = lolcation;
module.exports = URL;});
__d('requires-port/index',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';










module.exports = function required(port, protocol){
protocol = protocol.split(':')[0];
port = +port;

if(!port)return false;

switch(protocol){
case 'http':
case 'ws':
return port !== 80;

case 'https':
case 'wss':
return port !== 443;

case 'ftp':
return port !== 22;

case 'gopher':
return port !== 70;

case 'file':
return false;}


return port !== 0;};});
__d('url-parse/lolcation',["url-parse/index"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';









var ignore={hash:1, query:1}, 
URL;













module.exports = function lolcation(loc){
loc = loc || global.location || {};
URL = URL || require('url-parse/index');

var finaldestination={}, 
type=typeof loc, 
key;

if('blob:' === loc.protocol){
finaldestination = new URL(unescape(loc.pathname), {});}else 
if('string' === type){
finaldestination = new URL(loc, {});
for(key in ignore) delete finaldestination[key];}else 
if('object' === type)for(key in loc) {
if(key in ignore)continue;
finaldestination[key] = loc[key];}


return finaldestination;};});
__d('querystringify/index',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var has=Object.prototype.hasOwnProperty;








function querystring(query){
var parser=/([^=?&]+)=([^&]*)/g, 
result={}, 
part;






for(; 
part = parser.exec(query); 
result[decodeURIComponent(part[1])] = decodeURIComponent(part[2]));


return result;}










function querystringify(obj, prefix){
prefix = prefix || '';

var pairs=[];




if('string' !== typeof prefix)prefix = '?';

for(var key in obj) {
if(has.call(obj, key)){
pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]));}}



return pairs.length?prefix + pairs.join('&'):'';}





exports.stringify = querystringify;
exports.parse = querystring;});
__d('image!logo-white',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/liubko/coding/pet-projects/FastPaper/iOS/Images.xcassets/logo-white.imageset/logo-white@3x.png","uri":"logo-white","width":319,"height":215.33333333333334,"deprecated":true};});
__d('image!pocket',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/liubko/coding/pet-projects/FastPaper/iOS/Images.xcassets/pocket.imageset/pocket@3x.png","uri":"pocket","width":35,"height":32.666666666666664,"deprecated":true};});
__d('FastPaper/src/stores/index',["FastPaper/src/stores/Articles","FastPaper/src/stores/Page","FastPaper/src/stores/PocketQueue","FastPaper/src/stores/Text","FastPaper/src/stores/Settings","FastPaper/src/stores/User"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var ArticlesStore=require("FastPaper/src/stores/Articles");
var PageStore=require("FastPaper/src/stores/Page");
var PocketQueueStore=require("FastPaper/src/stores/PocketQueue");
var TextStore=require("FastPaper/src/stores/Text");
var SettingsStore=require("FastPaper/src/stores/Settings");
var UserStore=require("FastPaper/src/stores/User");

module.exports = {
articles:new ArticlesStore(), 
page:new PageStore(), 
pocketQueue:new PocketQueueStore(), 
text:new TextStore(), 
settings:new SettingsStore(), 
user:new UserStore()};});
__d('FastPaper/src/stores/Articles',["fluxxor/index","lodash/index","FastPaper/src/EventConstants","string/lib/string","react-native/Libraries/react-native/react-native"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var Fluxxor=require("fluxxor/index");
var _=require("lodash/index");
var EC=require("FastPaper/src/EventConstants");
var S=require("string/lib/string");var _require=



require("react-native/Libraries/react-native/react-native");var AsyncStorage=_require.AsyncStorage;

var ArticlesStore=Fluxxor.createStore({
init:function(){
this._articles = {};
this._since = undefined;}, 


initialize:function(){
this.init();

this.bindActions(
EC.SERVER.ARTICLES_RECEIVE, this.handleReceiveArticles, 

EC.SERVER.ARCHIVE_ARTICLE, this.handleArchive, 
EC.SERVER.DELETE_ARTICLE, this.handleDelete, 
EC.SERVER.FAVORITE_ARTICLE, this.handleFavorite, 
EC.SERVER.UNFAVORITE_ARTICLE, this.handleUnfavorite, 

EC.SERVER.LOGIN, this.handleLogin, 
EC.SERVER.LOGOUT, this.handleLogout);}, 




getArticles:function(){
return this._formatArticles(this._articles);}, 


getSince:function(){
return this._since;}, 


getArticle:function(id){
return this._articles && this._articles[id]?
JSON.parse(JSON.stringify(this._articles[id])):
undefined;}, 



handleReceiveArticles:function(_ref){var _this=this;var list=_ref.list;var since=_ref.since;var isItAllArticles=_ref.isItAllArticles;
if(isItAllArticles){
this._articles = list;}else 
{
Object.keys(list).forEach(function(id){
if(list[id].status === "0"){
_this._articles[id] = list[id];}else 
{
delete _this._articles[id];}});}




this._since = since;
this._saveListForOfflineMode();
this._saveSinceValueForOfflineMode();
this.emit("change");}, 


handleArchive:function(id){
this._articles = _.omit(this._articles, id);
this._saveListForOfflineMode();
this.emit("change");}, 


handleDelete:function(id){
this._articles = _.omit(this._articles, id);
this._saveListForOfflineMode();
this.emit("change");}, 


handleFavorite:function(id){
this._articles[id].favorite = "1";
this._saveListForOfflineMode();
this.emit("change");}, 


handleUnfavorite:function(id){
this._articles[id].favorite = "0";
this._saveListForOfflineMode();
this.emit("change");}, 


handleLogin:function(_ref2){var _this2=this;var username=_ref2.username;
var base64name=Base64.encode(username);
AsyncStorage.multiGet(["" + 
base64name + "_ARTICLES_LIST", "" + 
base64name + "_ARTICLES_SINCE"]).

then(function(res){
if(res[0] && res[0][1] !== null){
_this2._articles = JSON.parse(res[0][1]);}


if(res[1] && res[1][1] !== null){
_this2._since = JSON.parse(res[1][1]);}


_this2.emit("change");});}, 



handleLogout:function(){
this.init();
this.emit("change");}, 



_formatArticles:function(articles){
return Object.keys(articles).
map(function(key){return articles[key];}).
sort(function(a, b){return a.time_added < b.time_added?1:a.time_added > b.time_added?-1:0;});}, 


_saveListForOfflineMode:function(){
var base64name=Base64.encode(this.flux.stores.user.getUsername());
AsyncStorage.setItem("" + base64name + "_ARTICLES_LIST", JSON.stringify(this._articles)).
then(function(){return console.log("Saved ARTICLES to disk");}).
catch(function(error){return console.log("AsyncStorage error: ", error.message);}).
done();}, 


_saveSinceValueForOfflineMode:function(){
var base64name=Base64.encode(this.flux.stores.user.getUsername());
AsyncStorage.setItem("" + base64name + "_ARTICLES_SINCE", JSON.stringify(this._since)).
then(function(){return console.log("Saved SINCE value to disk");}).
catch(function(error){return console.log("AsyncStorage error: ", error.message);}).
done();}});



module.exports = ArticlesStore;});
__d('FastPaper/src/EventConstants',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

module.exports = {
UI:{
SPRITZ_SET_WPM:"UI:SPRITZ_SET_WPM", 
SPRITZ_PLAY:"UI:SPRITZ_PLAY", 
SPRITZ_PAUSE:"UI:SPRITZ_PAUSE", 
SPRITZ_NEXT_SENTENCE:"UI:SPRITZ_NEXT_SENTENCE", 
SPRITZ_PREV_SENTENCE:"UI:SPRITZ_PREV_SENTENCE", 
SPRITZ_DESTROY_READER:"UI:SPRITZ_DESTROY_READER", 

SET_PAGE:"UI:SET_PAGE", 
SET_COLOR_THEME:"UI:SET_COLOR_THEME", 
DELAY_ACTION:"UI:DELAY_ACTION", 
SELECT_TEXT:"UI:SELECT_TEXT"}, 


SERVER:{
LOGIN:"SERVER:LOGIN", 
LOGOUT:"SERVER:LOGOUT", 

ARTICLES_RECEIVE:"SERVER:ARTICLES_RECEIVE", 
TEXT_RECEIVE:"SERVER:TEXT_RECEIVE", 

ARCHIVE_ARTICLE:"SERVER:ARCHIVE_ARTICLE", 
DELETE_ARTICLE:"SERVER:DELETE_ARTICLE", 
FAVORITE_ARTICLE:"SERVER:FAVORITE_ARTICLE", 
UNFAVORITE_ARTICLE:"SERVER:UNFAVORITE_ARTICLE", 

REMOVE_DELAYED_ACTION:"SERVER:REMOVE_DELAYED_ACTION"}, 


THEMES:{
LIGHT:"LIGHT", 
MONOKAI:"MONOKAI"}};});
__d('string/lib/string',[],function(global, require, requireDynamic, requireLazy, module, exports) {  !



(function(){
"use strict";

var VERSION="3.2.0";

var ENTITIES={};


var latin_map={"Á":"A", "Ă":"A", "Ắ":"A", "Ặ":"A", "Ằ":"A", "Ẳ":"A", "Ẵ":"A", "Ǎ":"A", "Â":"A", "Ấ":"A", "Ậ":"A", "Ầ":"A", "Ẩ":"A", "Ẫ":"A", "Ä":"A", "Ǟ":"A", "Ȧ":"A", "Ǡ":"A", "Ạ":"A", "Ȁ":"A", "À":"A", "Ả":"A", "Ȃ":"A", "Ā":"A", "Ą":"A", "Å":"A", "Ǻ":"A", "Ḁ":"A", "Ⱥ":"A", "Ã":"A", "Ꜳ":"AA", "Æ":"AE", "Ǽ":"AE", "Ǣ":"AE", "Ꜵ":"AO", "Ꜷ":"AU", "Ꜹ":"AV", "Ꜻ":"AV", "Ꜽ":"AY", "Ḃ":"B", "Ḅ":"B", "Ɓ":"B", "Ḇ":"B", "Ƀ":"B", "Ƃ":"B", "Ć":"C", "Č":"C", "Ç":"C", "Ḉ":"C", "Ĉ":"C", "Ċ":"C", "Ƈ":"C", "Ȼ":"C", "Ď":"D", "Ḑ":"D", "Ḓ":"D", "Ḋ":"D", "Ḍ":"D", "Ɗ":"D", "Ḏ":"D", "ǲ":"D", "ǅ":"D", "Đ":"D", "Ƌ":"D", "Ǳ":"DZ", "Ǆ":"DZ", "É":"E", "Ĕ":"E", "Ě":"E", "Ȩ":"E", "Ḝ":"E", "Ê":"E", "Ế":"E", "Ệ":"E", "Ề":"E", "Ể":"E", "Ễ":"E", "Ḙ":"E", "Ë":"E", "Ė":"E", "Ẹ":"E", "Ȅ":"E", "È":"E", "Ẻ":"E", "Ȇ":"E", "Ē":"E", "Ḗ":"E", "Ḕ":"E", "Ę":"E", "Ɇ":"E", "Ẽ":"E", "Ḛ":"E", "Ꝫ":"ET", "Ḟ":"F", "Ƒ":"F", "Ǵ":"G", "Ğ":"G", "Ǧ":"G", "Ģ":"G", "Ĝ":"G", "Ġ":"G", "Ɠ":"G", "Ḡ":"G", "Ǥ":"G", "Ḫ":"H", "Ȟ":"H", "Ḩ":"H", "Ĥ":"H", "Ⱨ":"H", "Ḧ":"H", "Ḣ":"H", "Ḥ":"H", "Ħ":"H", "Í":"I", "Ĭ":"I", "Ǐ":"I", "Î":"I", "Ï":"I", "Ḯ":"I", "İ":"I", "Ị":"I", "Ȉ":"I", "Ì":"I", "Ỉ":"I", "Ȋ":"I", "Ī":"I", "Į":"I", "Ɨ":"I", "Ĩ":"I", "Ḭ":"I", "Ꝺ":"D", "Ꝼ":"F", "Ᵹ":"G", "Ꞃ":"R", "Ꞅ":"S", "Ꞇ":"T", "Ꝭ":"IS", "Ĵ":"J", "Ɉ":"J", "Ḱ":"K", "Ǩ":"K", "Ķ":"K", "Ⱪ":"K", "Ꝃ":"K", "Ḳ":"K", "Ƙ":"K", "Ḵ":"K", "Ꝁ":"K", "Ꝅ":"K", "Ĺ":"L", "Ƚ":"L", "Ľ":"L", "Ļ":"L", "Ḽ":"L", "Ḷ":"L", "Ḹ":"L", "Ⱡ":"L", "Ꝉ":"L", "Ḻ":"L", "Ŀ":"L", "Ɫ":"L", "ǈ":"L", "Ł":"L", "Ǉ":"LJ", "Ḿ":"M", "Ṁ":"M", "Ṃ":"M", "Ɱ":"M", "Ń":"N", "Ň":"N", "Ņ":"N", "Ṋ":"N", "Ṅ":"N", "Ṇ":"N", "Ǹ":"N", "Ɲ":"N", "Ṉ":"N", "Ƞ":"N", "ǋ":"N", "Ñ":"N", "Ǌ":"NJ", "Ó":"O", "Ŏ":"O", "Ǒ":"O", "Ô":"O", "Ố":"O", "Ộ":"O", "Ồ":"O", "Ổ":"O", "Ỗ":"O", "Ö":"O", "Ȫ":"O", "Ȯ":"O", "Ȱ":"O", "Ọ":"O", "Ő":"O", "Ȍ":"O", "Ò":"O", "Ỏ":"O", "Ơ":"O", "Ớ":"O", "Ợ":"O", "Ờ":"O", "Ở":"O", "Ỡ":"O", "Ȏ":"O", "Ꝋ":"O", "Ꝍ":"O", "Ō":"O", "Ṓ":"O", "Ṑ":"O", "Ɵ":"O", "Ǫ":"O", "Ǭ":"O", "Ø":"O", "Ǿ":"O", "Õ":"O", "Ṍ":"O", "Ṏ":"O", "Ȭ":"O", "Ƣ":"OI", "Ꝏ":"OO", "Ɛ":"E", "Ɔ":"O", "Ȣ":"OU", "Ṕ":"P", "Ṗ":"P", "Ꝓ":"P", "Ƥ":"P", "Ꝕ":"P", "Ᵽ":"P", "Ꝑ":"P", "Ꝙ":"Q", "Ꝗ":"Q", "Ŕ":"R", "Ř":"R", "Ŗ":"R", "Ṙ":"R", "Ṛ":"R", "Ṝ":"R", "Ȑ":"R", "Ȓ":"R", "Ṟ":"R", "Ɍ":"R", "Ɽ":"R", "Ꜿ":"C", "Ǝ":"E", "Ś":"S", "Ṥ":"S", "Š":"S", "Ṧ":"S", "Ş":"S", "Ŝ":"S", "Ș":"S", "Ṡ":"S", "Ṣ":"S", "Ṩ":"S", "ẞ":"SS", "Ť":"T", "Ţ":"T", "Ṱ":"T", "Ț":"T", "Ⱦ":"T", "Ṫ":"T", "Ṭ":"T", "Ƭ":"T", "Ṯ":"T", "Ʈ":"T", "Ŧ":"T", "Ɐ":"A", "Ꞁ":"L", "Ɯ":"M", "Ʌ":"V", "Ꜩ":"TZ", "Ú":"U", "Ŭ":"U", "Ǔ":"U", "Û":"U", "Ṷ":"U", "Ü":"U", "Ǘ":"U", "Ǚ":"U", "Ǜ":"U", "Ǖ":"U", "Ṳ":"U", "Ụ":"U", "Ű":"U", "Ȕ":"U", "Ù":"U", "Ủ":"U", "Ư":"U", "Ứ":"U", "Ự":"U", "Ừ":"U", "Ử":"U", "Ữ":"U", "Ȗ":"U", "Ū":"U", "Ṻ":"U", "Ų":"U", "Ů":"U", "Ũ":"U", "Ṹ":"U", "Ṵ":"U", "Ꝟ":"V", "Ṿ":"V", "Ʋ":"V", "Ṽ":"V", "Ꝡ":"VY", "Ẃ":"W", "Ŵ":"W", "Ẅ":"W", "Ẇ":"W", "Ẉ":"W", "Ẁ":"W", "Ⱳ":"W", "Ẍ":"X", "Ẋ":"X", "Ý":"Y", "Ŷ":"Y", "Ÿ":"Y", "Ẏ":"Y", "Ỵ":"Y", "Ỳ":"Y", "Ƴ":"Y", "Ỷ":"Y", "Ỿ":"Y", "Ȳ":"Y", "Ɏ":"Y", "Ỹ":"Y", "Ź":"Z", "Ž":"Z", "Ẑ":"Z", "Ⱬ":"Z", "Ż":"Z", "Ẓ":"Z", "Ȥ":"Z", "Ẕ":"Z", "Ƶ":"Z", "Ĳ":"IJ", "Œ":"OE", "ᴀ":"A", "ᴁ":"AE", "ʙ":"B", "ᴃ":"B", "ᴄ":"C", "ᴅ":"D", "ᴇ":"E", "ꜰ":"F", "ɢ":"G", "ʛ":"G", "ʜ":"H", "ɪ":"I", "ʁ":"R", "ᴊ":"J", "ᴋ":"K", "ʟ":"L", "ᴌ":"L", "ᴍ":"M", "ɴ":"N", "ᴏ":"O", "ɶ":"OE", "ᴐ":"O", "ᴕ":"OU", "ᴘ":"P", "ʀ":"R", "ᴎ":"N", "ᴙ":"R", "ꜱ":"S", "ᴛ":"T", "ⱻ":"E", "ᴚ":"R", "ᴜ":"U", "ᴠ":"V", "ᴡ":"W", "ʏ":"Y", "ᴢ":"Z", "á":"a", "ă":"a", "ắ":"a", "ặ":"a", "ằ":"a", "ẳ":"a", "ẵ":"a", "ǎ":"a", "â":"a", "ấ":"a", "ậ":"a", "ầ":"a", "ẩ":"a", "ẫ":"a", "ä":"a", "ǟ":"a", "ȧ":"a", "ǡ":"a", "ạ":"a", "ȁ":"a", "à":"a", "ả":"a", "ȃ":"a", "ā":"a", "ą":"a", "ᶏ":"a", "ẚ":"a", "å":"a", "ǻ":"a", "ḁ":"a", "ⱥ":"a", "ã":"a", "ꜳ":"aa", "æ":"ae", "ǽ":"ae", "ǣ":"ae", "ꜵ":"ao", "ꜷ":"au", "ꜹ":"av", "ꜻ":"av", "ꜽ":"ay", "ḃ":"b", "ḅ":"b", "ɓ":"b", "ḇ":"b", "ᵬ":"b", "ᶀ":"b", "ƀ":"b", "ƃ":"b", "ɵ":"o", "ć":"c", "č":"c", "ç":"c", "ḉ":"c", "ĉ":"c", "ɕ":"c", "ċ":"c", "ƈ":"c", "ȼ":"c", "ď":"d", "ḑ":"d", "ḓ":"d", "ȡ":"d", "ḋ":"d", "ḍ":"d", "ɗ":"d", "ᶑ":"d", "ḏ":"d", "ᵭ":"d", "ᶁ":"d", "đ":"d", "ɖ":"d", "ƌ":"d", "ı":"i", "ȷ":"j", "ɟ":"j", "ʄ":"j", "ǳ":"dz", "ǆ":"dz", "é":"e", "ĕ":"e", "ě":"e", "ȩ":"e", "ḝ":"e", "ê":"e", "ế":"e", "ệ":"e", "ề":"e", "ể":"e", "ễ":"e", "ḙ":"e", "ë":"e", "ė":"e", "ẹ":"e", "ȅ":"e", "è":"e", "ẻ":"e", "ȇ":"e", "ē":"e", "ḗ":"e", "ḕ":"e", "ⱸ":"e", "ę":"e", "ᶒ":"e", "ɇ":"e", "ẽ":"e", "ḛ":"e", "ꝫ":"et", "ḟ":"f", "ƒ":"f", "ᵮ":"f", "ᶂ":"f", "ǵ":"g", "ğ":"g", "ǧ":"g", "ģ":"g", "ĝ":"g", "ġ":"g", "ɠ":"g", "ḡ":"g", "ᶃ":"g", "ǥ":"g", "ḫ":"h", "ȟ":"h", "ḩ":"h", "ĥ":"h", "ⱨ":"h", "ḧ":"h", "ḣ":"h", "ḥ":"h", "ɦ":"h", "ẖ":"h", "ħ":"h", "ƕ":"hv", "í":"i", "ĭ":"i", "ǐ":"i", "î":"i", "ï":"i", "ḯ":"i", "ị":"i", "ȉ":"i", "ì":"i", "ỉ":"i", "ȋ":"i", "ī":"i", "į":"i", "ᶖ":"i", "ɨ":"i", "ĩ":"i", "ḭ":"i", "ꝺ":"d", "ꝼ":"f", "ᵹ":"g", "ꞃ":"r", "ꞅ":"s", "ꞇ":"t", "ꝭ":"is", "ǰ":"j", "ĵ":"j", "ʝ":"j", "ɉ":"j", "ḱ":"k", "ǩ":"k", "ķ":"k", "ⱪ":"k", "ꝃ":"k", "ḳ":"k", "ƙ":"k", "ḵ":"k", "ᶄ":"k", "ꝁ":"k", "ꝅ":"k", "ĺ":"l", "ƚ":"l", "ɬ":"l", "ľ":"l", "ļ":"l", "ḽ":"l", "ȴ":"l", "ḷ":"l", "ḹ":"l", "ⱡ":"l", "ꝉ":"l", "ḻ":"l", "ŀ":"l", "ɫ":"l", "ᶅ":"l", "ɭ":"l", "ł":"l", "ǉ":"lj", "ſ":"s", "ẜ":"s", "ẛ":"s", "ẝ":"s", "ḿ":"m", "ṁ":"m", "ṃ":"m", "ɱ":"m", "ᵯ":"m", "ᶆ":"m", "ń":"n", "ň":"n", "ņ":"n", "ṋ":"n", "ȵ":"n", "ṅ":"n", "ṇ":"n", "ǹ":"n", "ɲ":"n", "ṉ":"n", "ƞ":"n", "ᵰ":"n", "ᶇ":"n", "ɳ":"n", "ñ":"n", "ǌ":"nj", "ó":"o", "ŏ":"o", "ǒ":"o", "ô":"o", "ố":"o", "ộ":"o", "ồ":"o", "ổ":"o", "ỗ":"o", "ö":"o", "ȫ":"o", "ȯ":"o", "ȱ":"o", "ọ":"o", "ő":"o", "ȍ":"o", "ò":"o", "ỏ":"o", "ơ":"o", "ớ":"o", "ợ":"o", "ờ":"o", "ở":"o", "ỡ":"o", "ȏ":"o", "ꝋ":"o", "ꝍ":"o", "ⱺ":"o", "ō":"o", "ṓ":"o", "ṑ":"o", "ǫ":"o", "ǭ":"o", "ø":"o", "ǿ":"o", "õ":"o", "ṍ":"o", "ṏ":"o", "ȭ":"o", "ƣ":"oi", "ꝏ":"oo", "ɛ":"e", "ᶓ":"e", "ɔ":"o", "ᶗ":"o", "ȣ":"ou", "ṕ":"p", "ṗ":"p", "ꝓ":"p", "ƥ":"p", "ᵱ":"p", "ᶈ":"p", "ꝕ":"p", "ᵽ":"p", "ꝑ":"p", "ꝙ":"q", "ʠ":"q", "ɋ":"q", "ꝗ":"q", "ŕ":"r", "ř":"r", "ŗ":"r", "ṙ":"r", "ṛ":"r", "ṝ":"r", "ȑ":"r", "ɾ":"r", "ᵳ":"r", "ȓ":"r", "ṟ":"r", "ɼ":"r", "ᵲ":"r", "ᶉ":"r", "ɍ":"r", "ɽ":"r", "ↄ":"c", "ꜿ":"c", "ɘ":"e", "ɿ":"r", "ś":"s", "ṥ":"s", "š":"s", "ṧ":"s", "ş":"s", "ŝ":"s", "ș":"s", "ṡ":"s", "ṣ":"s", "ṩ":"s", "ʂ":"s", "ᵴ":"s", "ᶊ":"s", "ȿ":"s", "ɡ":"g", "ß":"ss", "ᴑ":"o", "ᴓ":"o", "ᴝ":"u", "ť":"t", "ţ":"t", "ṱ":"t", "ț":"t", "ȶ":"t", "ẗ":"t", "ⱦ":"t", "ṫ":"t", "ṭ":"t", "ƭ":"t", "ṯ":"t", "ᵵ":"t", "ƫ":"t", "ʈ":"t", "ŧ":"t", "ᵺ":"th", "ɐ":"a", "ᴂ":"ae", "ǝ":"e", "ᵷ":"g", "ɥ":"h", "ʮ":"h", "ʯ":"h", "ᴉ":"i", "ʞ":"k", "ꞁ":"l", "ɯ":"m", "ɰ":"m", "ᴔ":"oe", "ɹ":"r", "ɻ":"r", "ɺ":"r", "ⱹ":"r", "ʇ":"t", "ʌ":"v", "ʍ":"w", "ʎ":"y", "ꜩ":"tz", "ú":"u", "ŭ":"u", "ǔ":"u", "û":"u", "ṷ":"u", "ü":"u", "ǘ":"u", "ǚ":"u", "ǜ":"u", "ǖ":"u", "ṳ":"u", "ụ":"u", "ű":"u", "ȕ":"u", "ù":"u", "ủ":"u", "ư":"u", "ứ":"u", "ự":"u", "ừ":"u", "ử":"u", "ữ":"u", "ȗ":"u", "ū":"u", "ṻ":"u", "ų":"u", "ᶙ":"u", "ů":"u", "ũ":"u", "ṹ":"u", "ṵ":"u", "ᵫ":"ue", "ꝸ":"um", "ⱴ":"v", "ꝟ":"v", "ṿ":"v", "ʋ":"v", "ᶌ":"v", "ⱱ":"v", "ṽ":"v", "ꝡ":"vy", "ẃ":"w", "ŵ":"w", "ẅ":"w", "ẇ":"w", "ẉ":"w", "ẁ":"w", "ⱳ":"w", "ẘ":"w", "ẍ":"x", "ẋ":"x", "ᶍ":"x", "ý":"y", "ŷ":"y", "ÿ":"y", "ẏ":"y", "ỵ":"y", "ỳ":"y", "ƴ":"y", "ỷ":"y", "ỿ":"y", "ȳ":"y", "ẙ":"y", "ɏ":"y", "ỹ":"y", "ź":"z", "ž":"z", "ẑ":"z", "ʑ":"z", "ⱬ":"z", "ż":"z", "ẓ":"z", "ȥ":"z", "ẕ":"z", "ᵶ":"z", "ᶎ":"z", "ʐ":"z", "ƶ":"z", "ɀ":"z", "ﬀ":"ff", "ﬃ":"ffi", "ﬄ":"ffl", "ﬁ":"fi", "ﬂ":"fl", "ĳ":"ij", "œ":"oe", "ﬆ":"st", "ₐ":"a", "ₑ":"e", "ᵢ":"i", "ⱼ":"j", "ₒ":"o", "ᵣ":"r", "ᵤ":"u", "ᵥ":"v", "ₓ":"x"};



















function initialize(object, s){
if(s !== null && s !== undefined){
if(typeof s === "string")
object.s = s;else 

object.s = s.toString();}else 
{
object.s = s;}


object.orig = s;

if(s !== null && s !== undefined){
if(object.__defineGetter__){
object.__defineGetter__("length", function(){
return object.s.length;});}else 

{
object.length = s.length;}}else 

{
object.length = -1;}}



function S(s){
initialize(this, s);}


var __nsp=String.prototype;
var __sp=S.prototype = {

between:function(left, right){
var s=this.s;
var startPos=s.indexOf(left);
var endPos=s.indexOf(right, startPos + left.length);
if(endPos == -1 && right != null)
return new this.constructor("");else 
if(endPos == -1 && right == null)
return new this.constructor(s.substring(startPos + left.length));else 

return new this.constructor(s.slice(startPos + left.length, endPos));}, 



camelize:function(){
var s=this.trim().s.replace(/(\-|_|\s)+(.)?/g, function(mathc, sep, c){
return c?c.toUpperCase():"";});

return new this.constructor(s);}, 


capitalize:function(){
return new this.constructor(this.s.substr(0, 1).toUpperCase() + this.s.substring(1).toLowerCase());}, 


charAt:function(index){
return this.s.charAt(index);}, 


chompLeft:function(prefix){
var s=this.s;
if(s.indexOf(prefix) === 0){
s = s.slice(prefix.length);
return new this.constructor(s);}else 
{
return this;}}, 



chompRight:function(suffix){
if(this.endsWith(suffix)){
var s=this.s;
s = s.slice(0, s.length - suffix.length);
return new this.constructor(s);}else 
{
return this;}}, 




collapseWhitespace:function(){
var s=this.s.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
return new this.constructor(s);}, 


contains:function(ss){
return this.s.indexOf(ss) >= 0;}, 


count:function(ss){
return require("./_count")(this.s, ss);}, 



dasherize:function(){
var s=this.trim().s.replace(/[_\s]+/g, "-").replace(/([A-Z])/g, "-$1").replace(/-+/g, "-").toLowerCase();
return new this.constructor(s);}, 


latinise:function(){
var s=this.replace(/[^A-Za-z0-9\[\] ]/g, function(x){return latin_map[x] || x;});
return new this.constructor(s);}, 


decodeHtmlEntities:function(){
var s=this.s;
s = s.replace(/&#(\d+);?/g, function(_, code){
return String.fromCharCode(code);}).

replace(/&#[xX]([A-Fa-f0-9]+);?/g, function(_, hex){
return String.fromCharCode(parseInt(hex, 16));}).

replace(/&([^;\W]+;?)/g, function(m, e){
var ee=e.replace(/;$/, "");
var target=ENTITIES[e] || e.match(/;$/) && ENTITIES[ee];

if(typeof target === "number"){
return String.fromCharCode(target);}else 

if(typeof target === "string"){
return target;}else 

{
return m;}});



return new this.constructor(s);}, 


endsWith:function(){
var suffixes=Array.prototype.slice.call(arguments, 0);
for(var i=0; i < suffixes.length; ++i) {
var l=this.s.length - suffixes[i].length;
if(l >= 0 && this.s.indexOf(suffixes[i], l) === l)return true;}

return false;}, 


escapeHTML:function(){
return new this.constructor(this.s.replace(/[&<>"']/g, function(m){return "&" + reversedEscapeChars[m] + ";";}));}, 


ensureLeft:function(prefix){
var s=this.s;
if(s.indexOf(prefix) === 0){
return this;}else 
{
return new this.constructor(prefix + s);}}, 



ensureRight:function(suffix){
var s=this.s;
if(this.endsWith(suffix)){
return this;}else 
{
return new this.constructor(s + suffix);}}, 



humanize:function(){
if(this.s === null || this.s === undefined)
return new this.constructor("");
var s=this.underscore().replace(/_id$/, "").replace(/_/g, " ").trim().capitalize();
return new this.constructor(s);}, 


isAlpha:function(){
return !/[^a-z\xDF-\xFF]|^$/.test(this.s.toLowerCase());}, 


isAlphaNumeric:function(){
return !/[^0-9a-z\xDF-\xFF]/.test(this.s.toLowerCase());}, 


isEmpty:function(){
return this.s === null || this.s === undefined?true:/^[\s\xa0]*$/.test(this.s);}, 


isLower:function(){
return this.isAlpha() && this.s.toLowerCase() === this.s;}, 


isNumeric:function(){
return !/[^0-9]/.test(this.s);}, 


isUpper:function(){
return this.isAlpha() && this.s.toUpperCase() === this.s;}, 


left:function(N){
if(N >= 0){
var s=this.s.substr(0, N);
return new this.constructor(s);}else 
{
return this.right(-N);}}, 



lines:function(){
return this.replaceAll("\r\n", "\n").s.split("\n");}, 


pad:function(len, ch){
if(ch == null)ch = " ";
if(this.s.length >= len)return new this.constructor(this.s);
len = len - this.s.length;
var left=Array(Math.ceil(len / 2) + 1).join(ch);
var right=Array(Math.floor(len / 2) + 1).join(ch);
return new this.constructor(left + this.s + right);}, 


padLeft:function(len, ch){
if(ch == null)ch = " ";
if(this.s.length >= len)return new this.constructor(this.s);
return new this.constructor(Array(len - this.s.length + 1).join(ch) + this.s);}, 


padRight:function(len, ch){
if(ch == null)ch = " ";
if(this.s.length >= len)return new this.constructor(this.s);
return new this.constructor(this.s + Array(len - this.s.length + 1).join(ch));}, 


parseCSV:function(delimiter, qualifier, escape, lineDelimiter){
delimiter = delimiter || ",";
escape = escape || "\\";
if(typeof qualifier == "undefined")
qualifier = "\"";

var i=0, fieldBuffer=[], fields=[], len=this.s.length, inField=false, inUnqualifiedString=false, self=this;
var ca=function(i){return self.s.charAt(i);};
if(typeof lineDelimiter !== "undefined")var rows=[];

if(!qualifier)
inField = true;

while(i < len) {
var current=ca(i);
switch(current){
case escape:

if(inField && (escape !== qualifier || ca(i + 1) === qualifier)){
i += 1;
fieldBuffer.push(ca(i));
break;}

if(escape !== qualifier)break;
case qualifier:
inField = !inField;
break;
case delimiter:
if(inUnqualifiedString){
inField = false;
inUnqualifiedString = false;}

if(inField && qualifier)
fieldBuffer.push(current);else 
{
fields.push(fieldBuffer.join(""));
fieldBuffer.length = 0;}

break;
case lineDelimiter:
if(inUnqualifiedString){
inField = false;
inUnqualifiedString = false;
fields.push(fieldBuffer.join(""));
rows.push(fields);
fields = [];
fieldBuffer.length = 0;}else 

if(inField){
fieldBuffer.push(current);}else 
{
if(rows){
fields.push(fieldBuffer.join(""));
rows.push(fields);
fields = [];
fieldBuffer.length = 0;}}


break;
case " ":
if(inField)
fieldBuffer.push(current);
break;
default:
if(inField)
fieldBuffer.push(current);else 
if(current !== qualifier){
fieldBuffer.push(current);
inField = true;
inUnqualifiedString = true;}

break;}

i += 1;}


fields.push(fieldBuffer.join(""));
if(rows){
rows.push(fields);
return rows;}

return fields;}, 


replaceAll:function(ss, r){

var s=this.s.split(ss).join(r);
return new this.constructor(s);}, 


strip:function(){
var ss=this.s;
for(var i=0, n=arguments.length; i < n; i++) {
ss = ss.split(arguments[i]).join("");}

return new this.constructor(ss);}, 


stripLeft:function(chars){
var regex;
var pattern;
var ss=ensureString(this.s);

if(chars === undefined){
pattern = /^\s+/g;}else 

{
regex = escapeRegExp(chars);
pattern = new RegExp("^[" + regex + "]+", "g");}


return new this.constructor(ss.replace(pattern, ""));}, 


stripRight:function(chars){
var regex;
var pattern;
var ss=ensureString(this.s);

if(chars === undefined){
pattern = /\s+$/g;}else 

{
regex = escapeRegExp(chars);
pattern = new RegExp("[" + regex + "]+$", "g");}


return new this.constructor(ss.replace(pattern, ""));}, 


right:function(N){
if(N >= 0){
var s=this.s.substr(this.s.length - N, N);
return new this.constructor(s);}else 
{
return this.left(-N);}}, 



setValue:function(s){
initialize(this, s);
return this;}, 


slugify:function(){
var sl=new S(new S(this.s).latinise().s.replace(/[^\w\s-]/g, "").toLowerCase()).dasherize().s;
if(sl.charAt(0) === "-")
sl = sl.substr(1);
return new this.constructor(sl);}, 


startsWith:function(){
var prefixes=Array.prototype.slice.call(arguments, 0);
for(var i=0; i < prefixes.length; ++i) {
if(this.s.lastIndexOf(prefixes[i], 0) === 0)return true;}

return false;}, 


stripPunctuation:function(){

return new this.constructor(this.s.replace(/[^\w\s]|_/g, "").replace(/\s+/g, " "));}, 


stripTags:function(){
var s=this.s, args=arguments.length > 0?arguments:[""];
multiArgs(args, function(tag){
s = s.replace(RegExp("</?" + tag + "[^<>]*>", "gi"), "");});

return new this.constructor(s);}, 


template:function(values, opening, closing){
var s=this.s;
var opening=opening || Export.TMPL_OPEN;
var closing=closing || Export.TMPL_CLOSE;

var open=opening.replace(/[-[\]()*\s]/g, "\\$&").replace(/\$/g, "\\$");
var close=closing.replace(/[-[\]()*\s]/g, "\\$&").replace(/\$/g, "\\$");
var r=new RegExp(open + "(.+?)" + close, "g");

var matches=s.match(r) || [];

matches.forEach(function(match){
var key=match.substring(opening.length, match.length - closing.length).trim();
var value=typeof values[key] == "undefined"?"":values[key];
s = s.replace(match, value);});

return new this.constructor(s);}, 


times:function(n){
return new this.constructor(new Array(n + 1).join(this.s));}, 


titleCase:function(){
var s=this.s;
if(s){
s = s.replace(/(^[a-z]| [a-z]|-[a-z]|_[a-z])/g, 
function($1){
return $1.toUpperCase();});}



return new this.constructor(s);}, 


toBoolean:function(){
if(typeof this.orig === "string"){
var s=this.s.toLowerCase();
return s === "true" || s === "yes" || s === "on" || s === "1";}else 

return this.orig === true || this.orig === 1;}, 


toFloat:function(precision){
var num=parseFloat(this.s);
if(precision)
return parseFloat(num.toFixed(precision));else 

return num;}, 


toInt:function(){

return /^\s*-?0x/i.test(this.s)?parseInt(this.s, 16):parseInt(this.s, 10);}, 


trim:function(){
var s;
if(typeof __nsp.trim === "undefined")
s = this.s.replace(/(^\s*|\s*$)/g, "");else 

s = this.s.trim();
return new this.constructor(s);}, 


trimLeft:function(){
var s;
if(__nsp.trimLeft)
s = this.s.trimLeft();else 

s = this.s.replace(/(^\s*)/g, "");
return new this.constructor(s);}, 


trimRight:function(){
var s;
if(__nsp.trimRight)
s = this.s.trimRight();else 

s = this.s.replace(/\s+$/, "");
return new this.constructor(s);}, 


truncate:function(length, pruneStr){
var str=this.s;

length = ~ ~length;
pruneStr = pruneStr || "...";

if(str.length <= length)return new this.constructor(str);

var tmpl=function(c){return c.toUpperCase() !== c.toLowerCase()?"A":" ";}, 
template=str.slice(0, length + 1).replace(/.(?=\W*\w*$)/g, tmpl);

if(template.slice(template.length - 2).match(/\w\w/))
template = template.replace(/\s*\S+$/, "");else 

template = new S(template.slice(0, template.length - 1)).trimRight().s;

return (template + pruneStr).length > str.length?new S(str):new S(str.slice(0, template.length) + pruneStr);}, 


toCSV:function(){
var delim=",", qualifier="\"", escape="\\", encloseNumbers=true, keys=false;
var dataArray=[];

function hasVal(it){
return it !== null && it !== "";}


if(typeof arguments[0] === "object"){
delim = arguments[0].delimiter || delim;
delim = arguments[0].separator || delim;
qualifier = arguments[0].qualifier || qualifier;
encloseNumbers = !!arguments[0].encloseNumbers;
escape = arguments[0].escape || escape;
keys = !!arguments[0].keys;}else 
if(typeof arguments[0] === "string"){
delim = arguments[0];}


if(typeof arguments[1] === "string")
qualifier = arguments[1];

if(arguments[1] === null)
qualifier = null;

if(this.orig instanceof Array)
dataArray = this.orig;else 
{
for(var key in this.orig) 
if(this.orig.hasOwnProperty(key))
if(keys)
dataArray.push(key);else 

dataArray.push(this.orig[key]);}


var rep=escape + qualifier;
var buildString=[];
for(var i=0; i < dataArray.length; ++i) {
var shouldQualify=hasVal(qualifier);
if(typeof dataArray[i] == "number")
shouldQualify &= encloseNumbers;

if(shouldQualify)
buildString.push(qualifier);

if(dataArray[i] !== null && dataArray[i] !== undefined){
var d=new S(dataArray[i]).replaceAll(qualifier, rep).s;
buildString.push(d);}else 

buildString.push("");

if(shouldQualify)
buildString.push(qualifier);

if(delim)
buildString.push(delim);}




buildString.length = buildString.length - 1;
return new this.constructor(buildString.join(""));}, 


toString:function(){
return this.s;}, 



underscore:function(){
var s=this.trim().s.replace(/([a-z\d])([A-Z]+)/g, "$1_$2").replace(/([A-Z\d]+)([A-Z][a-z])/g, "$1_$2").replace(/[-\s]+/g, "_").toLowerCase();
return new this.constructor(s);}, 


unescapeHTML:function(){
return new this.constructor(this.s.replace(/\&([^;]+);/g, function(entity, entityCode){
var match;

if(entityCode in escapeChars){
return escapeChars[entityCode];}else 
if(match = entityCode.match(/^#x([\da-fA-F]+)$/)){
return String.fromCharCode(parseInt(match[1], 16));}else 
if(match = entityCode.match(/^#(\d+)$/)){
return String.fromCharCode(~ ~match[1]);}else 
{
return entity;}}));}, 




valueOf:function(){
return this.s.valueOf();}, 



wrapHTML:function(tagName, tagAttrs){
var s=this.s, el=tagName == null?"span":tagName, elAttr="", wrapped="";
if(typeof tagAttrs == "object")for(var prop in tagAttrs) elAttr += " " + prop + "=\"" + new this.constructor(tagAttrs[prop]).escapeHTML() + "\"";
s = wrapped.concat("<", el, elAttr, ">", this, "</", el, ">");
return new this.constructor(s);}};



var methodsAdded=[];
function extendPrototype(){
for(var name in __sp) {
(function(name){
var func=__sp[name];
if(!__nsp.hasOwnProperty(name)){
methodsAdded.push(name);
__nsp[name] = function(){
String.prototype.s = this;
return func.apply(this, arguments);};}})(


name);}}



function restorePrototype(){
for(var i=0; i < methodsAdded.length; ++i) 
delete String.prototype[methodsAdded[i]];
methodsAdded.length = 0;}







var nativeProperties=getNativeStringProperties();
for(var name in nativeProperties) {
(function(name){
var stringProp=__nsp[name];
if(typeof stringProp == "function"){

if(!__sp[name]){
if(nativeProperties[name] === "string"){
__sp[name] = function(){

return new this.constructor(stringProp.apply(this, arguments));};}else 

{
__sp[name] = stringProp;}}}})(



name);}







__sp.repeat = __sp.times;
__sp.include = __sp.contains;
__sp.toInteger = __sp.toInt;
__sp.toBool = __sp.toBoolean;
__sp.decodeHTMLEntities = __sp.decodeHtmlEntities;







__sp.constructor = S;






function getNativeStringProperties(){
var names=getNativeStringPropertyNames();
var retObj={};

for(var i=0; i < names.length; ++i) {
var name=names[i];
var func=__nsp[name];
try{

var type=typeof func.apply("test", ["string"]);
retObj[name] = type;}
catch(e) {}}

return retObj;}


function getNativeStringPropertyNames(){
var results=[];
if(Object.getOwnPropertyNames){
results = Object.getOwnPropertyNames(__nsp);
results.splice(results.indexOf("valueOf"), 1);
results.splice(results.indexOf("toString"), 1);
return results;}else 
{
var stringNames={};
var objectNames=[];
for(var name in String.prototype) 
stringNames[name] = name;

for(var name in Object.prototype) 
delete stringNames[name];


for(var name in stringNames) {
results.push(name);}

return results;}}



function Export(str){
return new S(str);}
;


Export.extendPrototype = extendPrototype;
Export.restorePrototype = restorePrototype;
Export.VERSION = VERSION;
Export.TMPL_OPEN = "{{";
Export.TMPL_CLOSE = "}}";
Export.ENTITIES = ENTITIES;







if(typeof module !== "undefined" && typeof module.exports !== "undefined"){
module.exports = Export;}else 

{

if(typeof define === "function" && define.amd){
define([], function(){
return Export;});}else 

{
window.S = Export;}}









function multiArgs(args, fn){
var result=[], i;
for(i = 0; i < args.length; i++) {
result.push(args[i]);
if(fn)fn.call(args, args[i], i);}

return result;}



var escapeChars={
lt:"<", 
gt:">", 
quot:"\"", 
apos:"'", 
amp:"&"};


function escapeRegExp(s){

var c;
var i;
var ret=[];
var re=/^[A-Za-z0-9]+$/;
s = ensureString(s);
for(i = 0; i < s.length; ++i) {
c = s.charAt(i);

if(re.test(c)){
ret.push(c);}else 

{
if(c === "\\000"){
ret.push("\\000");}else 

{
ret.push("\\" + c);}}}



return ret.join("");}


function ensureString(string){
return string == null?"":"" + string;}



var reversedEscapeChars={};
for(var key in escapeChars) {reversedEscapeChars[escapeChars[key]] = key;}

ENTITIES = {
"amp":"&", 
"gt":">", 
"lt":"<", 
"quot":"\"", 
"apos":"'", 
"AElig":198, 
"Aacute":193, 
"Acirc":194, 
"Agrave":192, 
"Aring":197, 
"Atilde":195, 
"Auml":196, 
"Ccedil":199, 
"ETH":208, 
"Eacute":201, 
"Ecirc":202, 
"Egrave":200, 
"Euml":203, 
"Iacute":205, 
"Icirc":206, 
"Igrave":204, 
"Iuml":207, 
"Ntilde":209, 
"Oacute":211, 
"Ocirc":212, 
"Ograve":210, 
"Oslash":216, 
"Otilde":213, 
"Ouml":214, 
"THORN":222, 
"Uacute":218, 
"Ucirc":219, 
"Ugrave":217, 
"Uuml":220, 
"Yacute":221, 
"aacute":225, 
"acirc":226, 
"aelig":230, 
"agrave":224, 
"aring":229, 
"atilde":227, 
"auml":228, 
"ccedil":231, 
"eacute":233, 
"ecirc":234, 
"egrave":232, 
"eth":240, 
"euml":235, 
"iacute":237, 
"icirc":238, 
"igrave":236, 
"iuml":239, 
"ntilde":241, 
"oacute":243, 
"ocirc":244, 
"ograve":242, 
"oslash":248, 
"otilde":245, 
"ouml":246, 
"szlig":223, 
"thorn":254, 
"uacute":250, 
"ucirc":251, 
"ugrave":249, 
"uuml":252, 
"yacute":253, 
"yuml":255, 
"copy":169, 
"reg":174, 
"nbsp":160, 
"iexcl":161, 
"cent":162, 
"pound":163, 
"curren":164, 
"yen":165, 
"brvbar":166, 
"sect":167, 
"uml":168, 
"ordf":170, 
"laquo":171, 
"not":172, 
"shy":173, 
"macr":175, 
"deg":176, 
"plusmn":177, 
"sup1":185, 
"sup2":178, 
"sup3":179, 
"acute":180, 
"micro":181, 
"para":182, 
"middot":183, 
"cedil":184, 
"ordm":186, 
"raquo":187, 
"frac14":188, 
"frac12":189, 
"frac34":190, 
"iquest":191, 
"times":215, 
"divide":247, 
"OElig;":338, 
"oelig;":339, 
"Scaron;":352, 
"scaron;":353, 
"Yuml;":376, 
"fnof;":402, 
"circ;":710, 
"tilde;":732, 
"Alpha;":913, 
"Beta;":914, 
"Gamma;":915, 
"Delta;":916, 
"Epsilon;":917, 
"Zeta;":918, 
"Eta;":919, 
"Theta;":920, 
"Iota;":921, 
"Kappa;":922, 
"Lambda;":923, 
"Mu;":924, 
"Nu;":925, 
"Xi;":926, 
"Omicron;":927, 
"Pi;":928, 
"Rho;":929, 
"Sigma;":931, 
"Tau;":932, 
"Upsilon;":933, 
"Phi;":934, 
"Chi;":935, 
"Psi;":936, 
"Omega;":937, 
"alpha;":945, 
"beta;":946, 
"gamma;":947, 
"delta;":948, 
"epsilon;":949, 
"zeta;":950, 
"eta;":951, 
"theta;":952, 
"iota;":953, 
"kappa;":954, 
"lambda;":955, 
"mu;":956, 
"nu;":957, 
"xi;":958, 
"omicron;":959, 
"pi;":960, 
"rho;":961, 
"sigmaf;":962, 
"sigma;":963, 
"tau;":964, 
"upsilon;":965, 
"phi;":966, 
"chi;":967, 
"psi;":968, 
"omega;":969, 
"thetasym;":977, 
"upsih;":978, 
"piv;":982, 
"ensp;":8194, 
"emsp;":8195, 
"thinsp;":8201, 
"zwnj;":8204, 
"zwj;":8205, 
"lrm;":8206, 
"rlm;":8207, 
"ndash;":8211, 
"mdash;":8212, 
"lsquo;":8216, 
"rsquo;":8217, 
"sbquo;":8218, 
"ldquo;":8220, 
"rdquo;":8221, 
"bdquo;":8222, 
"dagger;":8224, 
"Dagger;":8225, 
"bull;":8226, 
"hellip;":8230, 
"permil;":8240, 
"prime;":8242, 
"Prime;":8243, 
"lsaquo;":8249, 
"rsaquo;":8250, 
"oline;":8254, 
"frasl;":8260, 
"euro;":8364, 
"image;":8465, 
"weierp;":8472, 
"real;":8476, 
"trade;":8482, 
"alefsym;":8501, 
"larr;":8592, 
"uarr;":8593, 
"rarr;":8594, 
"darr;":8595, 
"harr;":8596, 
"crarr;":8629, 
"lArr;":8656, 
"uArr;":8657, 
"rArr;":8658, 
"dArr;":8659, 
"hArr;":8660, 
"forall;":8704, 
"part;":8706, 
"exist;":8707, 
"empty;":8709, 
"nabla;":8711, 
"isin;":8712, 
"notin;":8713, 
"ni;":8715, 
"prod;":8719, 
"sum;":8721, 
"minus;":8722, 
"lowast;":8727, 
"radic;":8730, 
"prop;":8733, 
"infin;":8734, 
"ang;":8736, 
"and;":8743, 
"or;":8744, 
"cap;":8745, 
"cup;":8746, 
"int;":8747, 
"there4;":8756, 
"sim;":8764, 
"cong;":8773, 
"asymp;":8776, 
"ne;":8800, 
"equiv;":8801, 
"le;":8804, 
"ge;":8805, 
"sub;":8834, 
"sup;":8835, 
"nsub;":8836, 
"sube;":8838, 
"supe;":8839, 
"oplus;":8853, 
"otimes;":8855, 
"perp;":8869, 
"sdot;":8901, 
"lceil;":8968, 
"rceil;":8969, 
"lfloor;":8970, 
"rfloor;":8971, 
"lang;":9001, 
"rang;":9002, 
"loz;":9674, 
"spades;":9824, 
"clubs;":9827, 
"hearts;":9829, 
"diams;":9830};}).



call(this);});
__d('FastPaper/src/stores/Page',["fluxxor/index","lodash/index","FastPaper/src/EventConstants","string/lib/string"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var Fluxxor=require("fluxxor/index");
var _=require("lodash/index");
var EC=require("FastPaper/src/EventConstants");
var S=require("string/lib/string");

var PageStore=Fluxxor.createStore({
init:function(){
this._page = "LOGIN_PAGE";}, 


initialize:function(){
this.init();

this.bindActions(
EC.UI.SET_PAGE, this.handleSetPage, 
EC.SERVER.LOGOUT, this.handleLogout);}, 




getPage:function(){
return JSON.parse(JSON.stringify(this._page));}, 



handleSetPage:function(page){
this._page = page;
this.emit("change");}, 


handleLogout:function(){
this.init();
this.emit("change");}});



module.exports = PageStore;});
__d('FastPaper/src/stores/PocketQueue',["fluxxor/index","lodash/index","FastPaper/src/EventConstants","string/lib/string","react-native/Libraries/react-native/react-native"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var Fluxxor=require("fluxxor/index");
var _=require("lodash/index");
var EC=require("FastPaper/src/EventConstants");
var S=require("string/lib/string");var _require=



require("react-native/Libraries/react-native/react-native");var AsyncStorage=_require.AsyncStorage;

var PocketQueueStore=Fluxxor.createStore({
init:function(){
this._queue = [];}, 


initialize:function(){
this.init();

this.bindActions(
EC.UI.DELAY_ACTION, this.handleDelayAction, 
EC.SERVER.REMOVE_DELAYED_ACTION, this.handleRemoveDelayedAction, 
EC.SERVER.LOGIN, this.handleLogin);}, 




getQueue:function(){
return this._queue;}, 



handleDelayAction:function(_ref){var id=_ref.id;var action=_ref.action;


this._queue = this._queue.filter(function(action){return action.item_id !== id;});

this._queue.push({
item_id:id, 
action:action});


this._saveQueueForOfflineMode();

this.emit("change");}, 


handleRemoveDelayedAction:function(action_results){







this._queue = [];

this._saveQueueForOfflineMode();

this.emit("change");}, 


handleLogin:function(_ref2){var _this=this;var username=_ref2.username;
var base64name=Base64.encode(username);
AsyncStorage.getItem("" + base64name + "_QUEUE").
then(function(value){
if(value !== null){
_this._queue = JSON.parse(value);
_this.emit("change");}});}, 




_saveQueueForOfflineMode:function(){
var base64name=Base64.encode(this.flux.stores.user.getUsername());
AsyncStorage.setItem("" + base64name + "_QUEUE", JSON.stringify(this._queue)).
then(function(){return console.log("Saved QUEUE to disk");}).
catch(function(error){return console.log("AsyncStorage error: ", error.message);}).
done();}, 



_multisplice:function(array){
var args=Array.apply(null, arguments).slice(1);
args.sort(function(a, b){
return a - b;});

for(var i=0; i < args.length; i++) {
var index=args[i] - i;
array.splice(index, 1);}}});




module.exports = PocketQueueStore;});
__d('FastPaper/src/stores/Text',["fluxxor/index","lodash/index","FastPaper/src/EventConstants","string/lib/string","pubsub-js/src/pubsub","FastPaper/src/Utils","react-native/Libraries/react-native/react-native","FastPaper/src/spritz/index"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var Fluxxor=require("fluxxor/index");
var _=require("lodash/index");
var EC=require("FastPaper/src/EventConstants");
var S=require("string/lib/string");
var PubSub=require("pubsub-js/src/pubsub");
var Utils=require("FastPaper/src/Utils");var _require=



require("react-native/Libraries/react-native/react-native");var AsyncStorage=_require.AsyncStorage;

var TextStore=Fluxxor.createStore({
init:function(){var _this=this;
this._isPlaying = false;
this._isReady = false;
this._texts = {};
this._text = "";
this._spritz = require("FastPaper/src/spritz/index");
this._reader = undefined;
this._word = [];
this.debouncedToPrevSentence = undefined;
this.debouncedToNextSentence = undefined;

AsyncStorage.getItem("WPM").
then(function(value){
if(value !== null){
value = parseInt(value);
_this._spritz.set("wpm", value);
_this.emit("change");}});}, 




initialize:function(){
this.init();

this.bindActions(
EC.SERVER.ARTICLES_RECEIVE, this.handleReceiveArticles, 

EC.UI.SELECT_TEXT, this.handleSelectText, 
EC.SERVER.TEXT_RECEIVE, this.handleReceiveText, 

EC.UI.SPRITZ_SET_WPM, this.handleSpritzSetWPM, 
EC.UI.SPRITZ_PLAY, this.handleSpritzPlay, 
EC.UI.SPRITZ_PAUSE, this.handleSpritzPause, 
EC.UI.SPRITZ_NEXT_SENTENCE, this.handleSpritzNextSentence, 
EC.UI.SPRITZ_PREV_SENTENCE, this.handleSpritzPrevSentence, 
EC.UI.SPRITZ_DESTROY_READER, this.handleDestroyReader, 

EC.SERVER.LOGIN, this.handleLogin, 
EC.SERVER.LOGOUT, this.handleLogout);


PubSub.subscribe("SPRITZ.VIEW.UpdateWord", this.handleUpdateWord);}, 



getText:function(){
return JSON.parse(JSON.stringify(this._text));}, 


getTextById:function(id){
return this._texts[id]?
JSON.parse(JSON.stringify(this._texts[id])):
undefined;}, 


isPlaying:function(){
return JSON.parse(JSON.stringify(this._isPlaying));}, 





getContext:function(){
if(!this._reader || !this._reader.currentSeq || this._reader.currentSeq.isRunning){
return {
before:"", 
after:""};}var _reader$currentSeq$getContext=



this._reader.currentSeq.getContext();var before=_reader$currentSeq$getContext.before;var after=_reader$currentSeq$getContext.after;
return {
before:before, 
after:after};}, 



getWord:function(){
return JSON.parse(JSON.stringify(this._word || []));}, 


getWPM:function(){
return this._spritz.get("wpm");}, 


isReady:function(){
return this._isReady && this._text.length > 0;}, 



handleReceiveArticles:function(){var _this2=this;

this.waitFor(["articles"], function(articlesStore){

var articlesIds=articlesStore.getArticles().map(function(a){return a.resolved_id;});


var newTextsObject={};
Object.keys(_this2._texts).forEach(function(id){
if(articlesIds.indexOf(id) >= 0){
newTextsObject[id] = _this2._texts[id];}});


_this2._texts = newTextsObject;
_this2._saveTextsOfflineMode();

_this2.emit("change");});}, 




handleSelectText:function(text){var _this3=this;
this._isReady = false;
this.emit("change");

setTimeout(function(){
_this3._isReady = true;
_this3._text = _this3._formatText(text);

if(_this3._reader){
_this3._reader.destroy();
_this3._reader = undefined;}


_this3._reader = new spritz.Reader(_this3._text, _this3._text.substring(0, 10));
console.log("this._reader", _this3._reader);
_this3.debouncedToPrevSentence = _.throttle(_this3._reader.currentSeq.toPrevSentence, 100, {
"leading":false, 
"trailing":false});

_this3.debouncedToNextSentence = _.throttle(_this3._reader.currentSeq.toNextSentence, 100, {
"leading":false, 
"trailing":false});


_this3.emit("change");}, 
0);}, 


handleReceiveText:function(_ref){var id=_ref.id;var text=_ref.text;
this._texts[id] = this._formatText(text);
this._saveTextsOfflineMode();
this.emit("change");}, 


handleSpritzSetWPM:function(wpm){
this._spritz.set("wpm", wpm);

AsyncStorage.setItem("WPM", wpm + "").
then(function(){return console.log("Saved selection to disk: " + wpm);}).
catch(function(error){return console.log("AsyncStorage error: " + error.message);}).
done();

this.emit("change");}, 


handleSpritzPlay:function(){
if(!this._text || this._text.length <= 0){
return;}


this._isPlaying = true;
this._reader.currentSeq.play();
this.emit("change");}, 


handleSpritzPause:function(){
this._isPlaying = false;
this._reader.currentSeq.pause();
this.emit("change");}, 


handleSpritzNextSentence:function(){
if(this.debouncedToNextSentence){
this.debouncedToNextSentence();}}, 



handleSpritzPrevSentence:function(){
if(this.debouncedToPrevSentence){
this.debouncedToPrevSentence();}}, 



handleDestroyReader:function(){
if(this._reader){
this._reader.destroy();}

this._reader = undefined;}, 



handleUpdateWord:function(e, msg){
this._word = msg.word;
this.emit("change");}, 


handleLogin:function(_ref2){var _this4=this;var username=_ref2.username;
var base64name=Base64.encode(username);

AsyncStorage.getItem("" + base64name + "_TEXTS").
then(function(value){
if(value !== null){
_this4._texts = JSON.parse(value);
_this4.emit("change");}});}, 




handleLogout:function(){
this.handleDestroyReader();
this.emit("change");}, 



_formatText:function(text){

text = text.trim();

text = text.replace(/\s+/g, " ");

text = text.replace(/\./g, ". ");
text = text.replace(/\?/g, "? ");
text = text.replace(/\!/g, "! ");

text = S(text).
stripTags().
unescapeHTML().
trim().
s;

return text;}, 


_saveTextsOfflineMode:function(){
var base64name=Base64.encode(this.flux.stores.user.getUsername());

AsyncStorage.setItem("" + base64name + "_TEXTS", JSON.stringify(this._texts)).
then(function(){return console.log("Saved TEXTS to disk");}).
catch(function(error){return console.log("AsyncStorage error: ", error.message);}).
done();}});




module.exports = TextStore;});
__d('FastPaper/src/Utils',["lodash/index"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var _=require('lodash/index');

module.exports = {};});
__d('FastPaper/src/spritz/index',["FastPaper/src/spritz/Settings","FastPaper/src/spritz/Parser","FastPaper/src/spritz/Reader","FastPaper/src/spritz/Sequencer","FastPaper/src/spritz/View"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 

spritz={};
require("FastPaper/src/spritz/Settings")(spritz);
require("FastPaper/src/spritz/Parser")(spritz);
require("FastPaper/src/spritz/Reader")(spritz);
require("FastPaper/src/spritz/Sequencer")(spritz);
require("FastPaper/src/spritz/View")(spritz);


window.spritz = spritz;

module.exports = spritz;});
__d('FastPaper/src/spritz/Settings',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.

exports = function(app){
var settings={
wpm:300, 
smartSlowing:true, 
entityAnalysis:true, 
emptySentenceEnd:true};


app.get = function(key){
return settings[key];};


app.set = function(key, value){
settings[key] = value;};


app.event = function(category, action, label){
console.log("application.event", category, action, label);};};});
__d('FastPaper/src/spritz/Parser',["FastPaper/src/spritz/Utils"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 

Utils=require("FastPaper/src/spritz/Utils");

module.exports = function(app){

function splitWordIfNeeded(str){

var dashIndex=str.indexOf("-"), 
slashIndex=str.indexOf("/"), 
uscoreIndex=str.indexOf("_");
if(str.length > 13 || str.length > 9 && (dashIndex > -1 || uscoreIndex > -1 || slashIndex > -1)){
var index=dashIndex > -1?dashIndex:
slashIndex > -1?slashIndex:uscoreIndex, 
res=[];

if(index > 0 && index < str.length - 1){
res.push(str.substr(0, index));
res.push(str.substr(index + 1));
return Utils.flatten(res.map(splitWordIfNeeded));}


var parts=Math.ceil(str.length / 8), 
charCount=Math.ceil(str.length / parts);

while(parts--) {
res.push(str.substr(0, charCount));
str = str.substr(charCount);}


return res;}


return [str];}



function isUpperLetter(char){

return char.toLowerCase() !== char;}


function isLowerLetter(char){

return char.toUpperCase() !== char;}


function isLetter(char){

return isLowerLetter(char) || isUpperLetter(char);}


function hasLetters(str){
return str.toUpperCase() !== str.toLowerCase();}


function isDigits(str){

return /^\d+$/.test(str);}


function hasDigits(str){

return /\d/.test(str);}


function isSentenceEnd(str){

var m=REX_SENTENCE_END.exec(str);
return m && !hasLetters(m[1]) && !hasDigits(m[1]);}



function has(elem, array){

return array.indexOf(elem) > -1;}


function only(expect, actual){

for(var i=0; i < actual.length; i++) {
if(expect.indexOf(actual[i]) < 0)return false;}

return !!actual.length;}



function getCharType(char){

return CHAR_MAP[char] || CHAR_COMMON;}



function stateMachine(tokens, patterns){

var data=[], 
stack_pat_check=[], 
pat_check, lastCheck, 
token1, token2=new Token(), 
hasNotFalse, len, tokenStr, stackStr, index, chk, i=0, 
k;

while(true) {
token1 = tokens[i];
pat_check = [];
hasNotFalse = false;

if(token1){
token2.push(token1);
tokenStr = token1.toString();
stackStr = token2.toString();
index = token2.length - 1;

lastCheck = stack_pat_check[stack_pat_check.length - 1];
for(k = 0; k < patterns.length; k++) {
if(!lastCheck || lastCheck[k] !== RES_FALSE){
chk = patterns[k](index, token1, tokenStr, token2, stackStr);
if(chk != RES_FALSE)
hasNotFalse = true;

pat_check.push(chk);}else 
{
pat_check.push(RES_FALSE);}}



stack_pat_check.push(pat_check);}



if(hasNotFalse){
i++;}else 
{
if(stack_pat_check.length > 1){
if(token1){
stack_pat_check.pop();
token2.pop();}


while((len = stack_pat_check.length) > 1 && stack_pat_check[len - 1].indexOf(RES_MATCH) < 0) {
stack_pat_check.pop();
token2.pop();
i--;}}else 

{
i++;}


data.push(token2);
stack_pat_check = [];
token2 = new Token();

if(!tokens[i])break;}}



return data;}



function PlainToken(){

var api=this;

api.value = "";
api.type = null;

api.startIndex = 
api.endIndex = 0;

api.hasSpaceAfter = 
api.hasSpaceBefore = 
api.hasNewLineAfter = 
api.hasNewLineBefore = false;

api.isSentenceEnd = false;}


PlainToken.prototype.getMask = function(){

var api=this;
return [+api.hasSpaceBefore, +api.hasSpaceAfter, +api.hasNewLineBefore, +api.hasNewLineAfter].join("");};


PlainToken.prototype.checkMask = function(mask){

var m=this.getMask(), 
i;

for(i = 0; i < m.length; i++) {
if(mask[i] !== "." && mask[i] !== m[i]){
return false;}}



return true;};


PlainToken.prototype.getComplexity = function(){

var api=this;

if(!api._cache_complexity){
var len=api.value.length, 
res=1;

if(len < 4 || len > 7){
res += 0.5;

if(len > 10)
res += 0.5;}


return api._cache_complexity = res;}


return api._cache_complexity;};


PlainToken.prototype.toString = function(){

return this.value;};


PlainToken.prototype.toHyphenated = function(){

return splitWordIfNeeded(this.toString());};


PlainToken.prototype.destroy = function(){

this.value = this.type = null;};



function Token(){

var api=this;

api.length = 0;
api.childs = [];

api.total = 0;

api.startIndex = 
api.endIndex = 0;
api.textLength = 0;

api.hasSpaceAfter = 
api.hasSpaceBefore = 
api.hasNewLineAfter = 
api.hasNewLineBefore = false;

api.isSentenceEnd = false;}


Token.prototype.get = function(index){

return this.childs[index];};


Token.prototype.set = function(index, child){

this.childs[index] = child;
this.update();
return child;};


Token.prototype.push = function(child){

this.childs.push(child);
this.update();
return this.length;};


Token.prototype.pop = function(){

var res=this.childs.pop();
this.update();
return res;};


Token.prototype.update = function(){

var api=this;

api.length = api.childs.length;

var first=api.childs[0], 
last=api.childs[api.length - 1], 
child, i;

api.startIndex = first?first.startIndex:0;
api.hasSpaceBefore = first?first.hasSpaceBefore:false;
api.hasNewLineBefore = first?first.hasNewLineBefore:false;

api.endIndex = last?last.endIndex:0;
api.hasSpaceAfter = last?last.hasSpaceAfter:false;
api.hasNewLineAfter = last?last.hasNewLineAfter:false;

api.textLength = api.endIndex - api.startIndex;

api.total = 0;
for(i = 0; i < api.length; i++) {
child = api.childs[i];
api.total += child.value?1:child.total;}


api._cache_complexity = null;};



Token.prototype.getMask = function(){

var api=this;
return [+api.hasSpaceBefore, +api.hasSpaceAfter, +api.hasNewLineBefore, +api.hasNewLineAfter].join("");};


Token.prototype.checkMask = function(mask){

var m=this.getMask(), 
i;

for(i = 0; i < m.length; i++) {
if(mask[i] !== "." && mask[i] !== m[i]){
return false;}}



return true;};


Token.prototype.checkChildren = function(callback){

for(var i=0; i < this.length; i++) {
if(callback(i, this.childs[i]) === false)return false;}

return true;};



Token.prototype.getTypes = function(){

var res=[], 
types, child, i, k;

for(i = 0; i < this.length; i++) {
child = this.childs[i];
if(child.getTypes){
types = child.getTypes();
for(k = 0; k < types.length; k++) {
res.indexOf(types[k]) < 0 && res.push(types[k]);}}else 

{
res.indexOf(child.type) < 0 && res.push(child.type);}}




return res;};


Token.prototype.checkContents = function(types){

var t=this.getTypes(), 
i;

for(i = 0; i < t.length; i++) {
if(types.indexOf(t[i]) < 0){
return false;}}



return !!t.length;};


Token.prototype.getComplexity = function(){

var api=this;

if(!api._cache_complexity){
var types=api.getTypes(), 
res=1;

if(api.isSentenceEnd || api.total > 1 || types[0] !== CHAR_COMMON || isDigits(api.toString()) || api.toHyphenated().length > 1)
res += 1.1;

if(api.textLength < 4 || api.textLength > 7){
res += 0.3;

if(api.textLength > 10 && api.textLength < 14)
res += 0.4;}


return api._cache_complexity = res;}


return api._cache_complexity;};



Token.prototype.toString = function(){

var res="", 
child, i;

for(i = 0; i < this.length; i++) {
child = this.childs[i];
res += i?(child.hasNewLineBefore?"\n":"") + (child.hasSpaceBefore?" ":""):"";
res += child.toString();}


return res;};


Token.prototype.toHyphenated = function(){

return splitWordIfNeeded(this.toString());};


Token.prototype.destroy = function(){

var api=this;

for(var i=0; i < api.length; i++) {
api.childs[i].destroy();
api.childs[i] = null;}

api.childs = null;};








var REX_SENTENCE_END=/(?:\.|…|!|\?|;)([^.…!?;]*)$/;
var REX_PHONE=/^\+?(?:\d+ ?)?(?:\(\d+(?: \d+)?\)|\d+)? ?[\d\-]+$/;

var CHAR_DOT=1;
var CHAR_COMMA=2;
var CHAR_SEMICOLON=3;
var CHAR_COLON=4;
var CHAR_MARK=5;
var CHAR_DASH=6;
var CHAR_O_BRACKET=7;
var CHAR_C_BRACKET=8;
var CHAR_QUOTE=9;
var CHAR_SLASH=10;
var CHAR_PLUS=11;
var CHAR_BULLET=12;
var CHAR_COMMON=13;

var CHAR_MAP={
".":CHAR_DOT, 
"…":CHAR_DOT, 
",":CHAR_COMMA, 
";":CHAR_SEMICOLON, 
":":CHAR_COLON, 
"!":CHAR_MARK, 
"?":CHAR_MARK, 
"-":CHAR_DASH, 
"—":CHAR_DASH, 
"(":CHAR_O_BRACKET, 
"[":CHAR_O_BRACKET, 
"{":CHAR_O_BRACKET, 
")":CHAR_C_BRACKET, 
"]":CHAR_C_BRACKET, 
"}":CHAR_C_BRACKET, 
"«":CHAR_QUOTE, 
"»":CHAR_QUOTE, 
"‹":CHAR_QUOTE, 
"›":CHAR_QUOTE, 
"\"":CHAR_QUOTE, 
"„":CHAR_QUOTE, 
"“":CHAR_QUOTE, 
"”":CHAR_QUOTE, 
"/":CHAR_SLASH, 
"\\":CHAR_SLASH, 
"+":CHAR_PLUS, 
"•":CHAR_BULLET, 
"∙":CHAR_BULLET, 
"◦":CHAR_BULLET, 
"‣":CHAR_BULLET};


var CHARS_INTO_WORD=[CHAR_DASH, CHAR_DOT];

var RES_FALSE=0;
var RES_NEED_MORE=1;
var RES_MATCH=2;

var patterns_level2=[

function(i, token, tokenStr){
if(!i)return token.type === CHAR_COMMON && !token.hasSpaceAfter && !token.hasNewLineAfter?RES_NEED_MORE:RES_FALSE;
if(i % 2)return tokenStr.length === 1 && has(token.type, CHARS_INTO_WORD) && token.checkMask("0000")?RES_NEED_MORE:RES_FALSE;
return token.type === CHAR_COMMON && !token.hasSpaceBefore && !token.hasNewLineBefore?RES_MATCH:RES_FALSE;}, 



function(i, token, tokenStr){
if(!i)return tokenStr.length === 1 && has(token.type, [CHAR_PLUS, CHAR_DASH]) && !token.hasSpaceAfter && !token.hasNewLineAfter?RES_NEED_MORE:RES_FALSE;
return i === 1 && token.type === CHAR_COMMON && isDigits(tokenStr[0])?RES_MATCH:RES_FALSE;}, 



function(i, token, tokenStr, stack, stackStr){
if(!i)return token.type === CHAR_PLUS || isDigits(tokenStr)?RES_NEED_MORE:RES_FALSE;
if(stackStr.length > 7 && REX_PHONE.test(stackStr))return RES_MATCH;
return isDigits(tokenStr) || tokenStr === "(" || tokenStr === ")"?RES_NEED_MORE:RES_FALSE;}, 




function(i, token, tokenStr, stack, stackStr){
if(stackStr.length < 5)return RES_NEED_MORE;
if(!/^[\w/.:@?&#%]+$/.test(stackStr))return RES_FALSE;

var host, regexp;

host = "(" + "(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z]{2,6}" + "|" + "(?:\\d{1,3}\\.){3}\\d{1,3}" + ")";

regexp = "^" + "(?:((?:ht|f)tps?)://)?" + 
"(?:([^:@]+)(?::([^:@]+))?@)?" + 
host + 
"(?::(\\d{1,5}))?" + 
"(/[^\\s?#]*)?" + 
"(?:\\?([^\\s#]*))?" + 
"(?:#([^\\s]*))?" + 
"$";

return new RegExp(regexp, "i").test(stackStr)?RES_MATCH:RES_NEED_MORE;}];



var patterns_level3=[

function(i, token, tokenStr){
if(i % 2)return tokenStr === "." && token.hasSpaceAfter && !token.hasSpaceBefore?RES_NEED_MORE:RES_FALSE;
if(tokenStr.length === 1)return !token.hasSpaceAfter && !token.hasNewLineAfter && isUpperLetter(tokenStr)?RES_NEED_MORE:RES_FALSE;
return i > 1 && isUpperLetter(tokenStr[0])?RES_MATCH:RES_FALSE;}, 



function(i, token, tokenStr){
if(!i)
return token.length > 2 && token.checkChildren(function(i, tkn){
var str=tkn.toString();
return i % 2?str === ".":isUpperLetter(str);})?
RES_NEED_MORE:RES_FALSE;

if(i === 1)return token.hasSpaceAfter && token.toString() === "."?RES_NEED_MORE:RES_MATCH;

return tokenStr.length > 1 && isUpperLetter(tokenStr[0])?RES_MATCH:RES_FALSE;}, 



function(i, token, tokenStr){
if(!i)
return token.hasSpaceAfter && isUpperLetter(tokenStr[0]) && only([CHAR_DASH, CHAR_COMMON], token.getTypes())?RES_NEED_MORE:RES_FALSE;

if(i % 2){
if(tokenStr.length === 1)return isUpperLetter(tokenStr)?RES_NEED_MORE:RES_FALSE;
return token.total > 2 && token.checkChildren(function(i, tkn){
var str=tkn.toString();
return i % 2?str === ".":isUpperLetter(str);})?
RES_MATCH:RES_FALSE;}


return tokenStr === "."?RES_MATCH:RES_FALSE;}];











app.Token = Token;

app.PlainToken = PlainToken;

app.parse1 = function(raw){

var char, prevChar, 
isSpace, isNewLine, 
charType, prevType, 
data=[], 
token, i;

for(i = 0; i <= raw.length; i++) {
prevChar = char;
char = raw[i];

charType = char && getCharType(char);

isSpace = char === " ";
isNewLine = char === "\n";

if(isSpace || isNewLine || charType !== prevType || !prevType || !char){
prevType = null;

if(token){
token.endIndex = i;
token.hasSpaceAfter = isSpace;
token.hasNewLineAfter = isNewLine || i === raw.length;
data.push(token);
token = null;}


if(!isSpace && !isNewLine && char){
token = new PlainToken();
token.value = char;
token.type = charType;
token.startIndex = i;
token.hasSpaceBefore = prevChar === " ";
token.hasNewLineBefore = !i || prevChar === "\n";

prevType = charType;}}else 

{
token.value += char;}}



return data;};


app.parse2 = function(raw){

return stateMachine(app.parse1(raw), patterns_level2);};


app.parse3 = function(raw){

return stateMachine(app.parse2(raw), patterns_level3);};


app.parse4 = function(raw){


function create(){
if(token4 && token4.length && data[data.length - 1] !== token4){
data.push(token4);}


token4 = new Token();
token4.push(token3);
data.push(token4);}


function push(){
token4?
token4.push(token3):create();}



var tokens3=app.parse3(raw), 
token3, types, type, 
nextToken3, nextTypes, nextType, 
prevToken3, prevTypes, prevType, 
hasBreakBefore, hasBreakAfter, 
token4, data=[], 
i;

for(i = 0; i < tokens3.length; i++) {
prevToken3 = token3;
prevTypes = types;
prevType = type;

token3 = nextToken3 || tokens3[i];
types = nextTypes || token3.getTypes();
type = nextType || types[0];

nextToken3 = tokens3[i + 1];
nextTypes = nextToken3 && nextToken3.getTypes();
nextType = nextTypes && nextTypes[0];

hasBreakBefore = token3.hasSpaceBefore || token3.hasNewLineBefore;
hasBreakAfter = token3.hasSpaceAfter || token3.hasNewLineAfter;

if(types.length > 1 || type === CHAR_COMMON){
hasBreakBefore && (!token4 || token4.total > 1 || token4.getTypes()[0] === CHAR_COMMON)?create():push();


token4.isSentenceEnd = false;}else 
if(has(type, [CHAR_DASH, CHAR_DOT]) && !has(prevType, [CHAR_DASH, CHAR_DOT]) && !token3.hasNewLineBefore && (hasBreakAfter || nextType !== CHAR_COMMON)){
push();}else 
{
hasBreakBefore && !token3.hasNewLineAfter?create():push();}


if(token3.hasNewLineAfter || types.length === 1 && has(type, [CHAR_DOT, CHAR_SEMICOLON, CHAR_MARK])){
token4.isSentenceEnd = true;}}



return data;};



app.advancedParser = function(raw){

var timeStart=new Date(), 
res=app.parse4(raw);

app.event("Parsing time", "Advanced", Utils.roundExp(new Date() - timeStart));

return res;};


app.simpleParser = function(raw){

var timeStart=new Date(), 
paragraphs=raw.split("\n"), 
data=[], 
index=0, 
words, token, i, k;

for(i = 0; i < paragraphs.length; i++) {
i && index++;

if(paragraphs[i].length){
words = paragraphs[i].split(" ");

for(k = 0; k < words.length; k++) {
k && index++;

if(words[k].length){
token = new PlainToken();

token.value = words[k];
token.type = CHAR_COMMON;

token.startIndex = index;
token.endIndex = index + token.value.length;

token.isSentenceEnd = k >= words.length - 1 || isSentenceEnd(token.value);

data.push(token);

index = token.endIndex;}}}}





app.event("Parsing time", "Simple", Utils.roundExp(new Date() - timeStart));

return data;};



app.calcPivotPoint = function(str){

var len=str.length, 
point=4, 
char;

if(len < 2)point = 0;else 
if(len < 6)point = 1;else 
if(len < 10)point = 2;else 
if(len < 14)point = 3;

char = str[point];

if(!(isLetter(char) || isDigits(char))){
if((char = str[point - 1]) && (isLetter(char) || isDigits(char))){
point--;}else 
if((char = str[point + 1]) && (isLetter(char) || isDigits(char))){
point++;}}



return point;};};});
__d('FastPaper/src/spritz/Utils',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.

exports = {
norm:function(num, min, max){
return num > max?max:num < min?min:num;}, 


roundExp:function(num){
var pow=Math.pow(10, (num + "").length - 1);
return Math.round(num / pow) * pow;}, 


htmlEncode:function(str){
return str.replace(/</g, "&lt;").replace(/>/g, "&gt;");}, 


flatten:function(array){
var res=[];

(function flat(arr){
if(toString.call(arr) === "[object Array]"){
arr.forEach(flat);}else 
{
res.push(arr);}})(

array);

return res;}, 


cleanUpTextSimple:function(raw){
var sign="~NL" + (+new Date() + "").slice(-5) + "NL~";
return raw.
trim().
replace(/\n|\r/gm, sign).
replace(/\s+/g, " ").
replace(new RegExp("\\s*" + sign + "\\s*", "g"), sign).
replace(new RegExp(sign, "g"), "\n");}, 


cleanUpTextAdvanced:function(raw){
var NL="~NL" + (+new Date() + "").slice(-5) + "NL~";
return raw.
trim().
replace(/\n|\r/gm, NL).
replace(/\s+/g, " ").
replace(new RegExp("\\s*" + NL + "\\s*", "g"), NL).
replace(/‐/g, "-").
replace(/ \- /g, " — ").
replace(/–|−|―/g, "—").
replace(/[-|—]{2,}/g, "—").
replace(new RegExp("( |^|" + NL + ")([([«]+) ", "g"), "$1$2").
replace(new RegExp(" ([)\\].,!?;»]+)( |$|" + NL + ")", "g"), "$1$2").
replace(/\.{4,}/g, "...").
replace(/([!?]{3})[!?]+/g, "$1").
replace(new RegExp(NL, "g"), "\n");}};});
__d('FastPaper/src/spritz/Reader',["FastPaper/src/spritz/Utils","pubsub-js/src/pubsub"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 

Utils=require('FastPaper/src/spritz/Utils');
var PubSub=require('pubsub-js/src/pubsub');

module.exports = function(app){

app.Reader = function(raw, debugName){
console.log('Reader.constor');

function onSettingsUpdate(e, key, value){
console.log('Reader.onSettingsUpdate');
if(key === 'entityAnalysis'){
updateSequencer();}}



function updateSequencer(){
console.log('Reader.updateSequencer');
var tokenStartIndex=-1;

currentSeq && currentSeq.pause();

if(app.get('entityAnalysis')){
currentSeq && (tokenStartIndex = currentSeq.getToken().startIndex);
currentText = Utils.cleanUpTextAdvanced(raw);
currentSeq = new app.Sequencer(currentText, app.advancedParser(currentText), debugName);}else 
{
currentSeq && (tokenStartIndex = currentSeq.getToken().startIndex);
currentText = Utils.cleanUpTextSimple(raw);
currentSeq = new app.Sequencer(currentText, app.simpleParser(currentText), debugName);}


view.setSequencer(currentSeq);
self.currentSeq = currentSeq;

tokenStartIndex > -1 && currentSeq.toTokenAtIndex(tokenStartIndex);}













var self=this;

var isDestroyed;
var isConfigSent;
var view=new app.View();

var currentSeq;
var currentText;

self.destroy = function(){


if(isDestroyed)return;
isDestroyed = true;

PubSub.unsubscribe('SPRITZ.SettingsUpdate');

currentSeq.pause();
currentSeq.destroy();
view.destroy();

currentSeq = currentText = view = undefined;};


self.toPrevSentence = function(){

currentSeq.toPrevSentence();};


self.toNextSentence = function(){

currentSeq.toNextSentence();};


updateSequencer();

PubSub.subscribe('SPRITZ.SettingsUpdate', function(e, msg){
onSettingsUpdate(msg);});};};});
__d('FastPaper/src/spritz/Sequencer',["pubsub-js/src/pubsub","FastPaper/src/spritz/Utils"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 

PubSub=require('pubsub-js/src/pubsub');
var Utils=require('FastPaper/src/spritz/Utils');

module.exports = function(app){

function getSinFactor(num, min, max){
return Math.sin(PI2 * (num - min) / (max - min));}


function getWpmReducing(wasReadingLaunchedSinceOpen){
return wasReadingLaunchedSinceOpen?INIT_WPM_REDUCE_1:INIT_WPM_REDUCE_0;}




var SENTENCE_END_COMPL=2.1, 
INIT_WPM_REDUCE_0=0.5, 
INIT_WPM_REDUCE_1=0.6, 
ACCEL_CURVE=3, 
PI2=Math.PI / 2;


app.Sequencer = function(raw, data, debugName){
function getTiming(complexity){

var gradualAccel=app.get('gradualAccel'), 
targetWpm=app.get('wpm'), 
res;


if(gradualAccel && wpm < targetWpm && startWpm < targetWpm){
if(wpm)
wpm += 50 / (1 + ACCEL_CURVE * getSinFactor(wpm, startWpm, targetWpm));else 

wpm = startWpm = targetWpm * getWpmReducing(wasLaunchedSinceOpen);

if(wpm >= targetWpm)
wpm = targetWpm;}else 
{
wpm = targetWpm;}



if(startWpm >= targetWpm)
startWpm = targetWpm;


res = 60000 / wpm;

if(gradualAccel && !wasLaunchedSinceOpen)
res /= 1.5;

if(!wasLaunchedSinceOpen)
res *= 2;else 
if(app.get('smartSlowing'))
res *= complexity;

return res;}


function next(justRun){


clearTimeout(timeout);

if(!self.isRunning)return;

if(self.index >= length - 1){
setTimeout(function(){
self.pause();}, 
500);}else 
{
justRun || self.toNextToken(true);
token = self.getToken();

function doUpdate(){
var hyphenated=wasLaunchedSinceOpen && !justRun && app.get('hyphenation')?token.toHyphenated():[token.toString()], 
part;

(function go(){
if(part = hyphenated.shift()){
PubSub.publish('SPRITZ.Update', [part, hyphenated]);

timeout = setTimeout(go, getTiming(token.getComplexity()));}else 
{
next();}})();}




if(!justRun && self.index && data[self.index - 1].isSentenceEnd && app.get('emptySentenceEnd')){
PubSub.publish('SPRITZ.Update', [false]);

timeout = setTimeout(doUpdate, getTiming(SENTENCE_END_COMPL));}else 
{
doUpdate();}}}




function normIndex(){

self.index = Utils.norm(self.index, 0, length - 1);}


function changeIndex(back){

var indexBefore=self.index;
back?self.index--:self.index++;
normIndex();

if(self.index !== indexBefore){
complexityRemain = Utils.norm(complexityRemain + data[back?self.index + 1:self.index].getComplexity() * (back?1:-1), 0, complexityTotal - complexityFirstToken);
return true;}


return false;}




var self=this;
var wasLaunchedSinceOpen=false;
var length=data.length;
var textLength=raw.length;
var token=data[0];
var wpm=0;
var startWpm=0;
var complexityFirstToken=token.getComplexity();
var complexityTotal=(function(length, i, res){
for(; i < length && (res += data[i].getComplexity()); i++) {}
return res;})(
length, 0, 0);
var complexityRemain=complexityTotal - complexityFirstToken;
var timeout;


self.isRunning = false;

self.length = length;
self.index = 0;


self.play = function(){

if(self.isRunning)return;
self.isRunning = true;
wpm = 0;

PubSub.publish('SPRITZ.Play');

next(true);

wasLaunchedSinceOpen = true;};


self.pause = function(){

clearTimeout(timeout);

if(!self.isRunning)return;
self.isRunning = false;

PubSub.publish('SPRITZ.Pause');};


self.toggle = function(){

self.isRunning?self.pause():self.play();};



self.getToken = function(){



return data[self.index];};


self.getContext = function(charsLimit){

var token=self.getToken();

var before=raw.substring(charsLimit?Math.max(token.startIndex - charsLimit, 0):0, token.startIndex).trim();
var after=raw.substring(token.endIndex, charsLimit?Math.min(token.endIndex + charsLimit, raw.length):raw.length).trim();


return {
before:Utils.htmlEncode(before).replace(/\n/g, '<br/>'), 
after:Utils.htmlEncode(after).replace(/\n/g, '<br/>')};};



self.getSequel = function(){

if(self.getToken().isSentenceEnd)
return [];

var fromIndex=self.index + 1, 
res=[], 
t, i;

for(i = 0; i < 10 && (t = data[fromIndex + i]); i++) {
res.push(t.toString());
if(t.isSentenceEnd)break;}


return res;};



self.toNextToken = function(noEvent){

if(changeIndex() && !noEvent){
PubSub.publish('SPRITZ.Update');}};



self.toPrevToken = function(){

if(changeIndex(true)){
PubSub.publish('SPRITZ.Update');}};



self.toNextSentence = function(){

while(changeIndex()) {
if(data[self.index - 1].isSentenceEnd){
break;}}



PubSub.publish('SPRITZ.Update');};


self.toPrevSentence = function(){

var startIndex=self.index;

while(changeIndex(true)) {
if(data[self.index].isSentenceEnd && (startIndex - self.index > 1 || self.index - 1 < 0 || data[self.index - 1].isSentenceEnd)){
if(startIndex - self.index > 1){
changeIndex();}

break;}}



PubSub.publish('SPRITZ.Update');};


self.toLastToken = function(){

self.index = length - 1;
complexityRemain = 0;

normIndex();
PubSub.publish('SPRITZ.Update');};


self.toFirstToken = function(){

self.index = 0;
complexityRemain = complexityTotal - complexityFirstToken;

normIndex();
PubSub.publish('SPRITZ.Update');};


self.toTokenAtIndex = function(index){

self.index = -1;
complexityRemain = complexityTotal;

while(changeIndex()) {
if(data[self.index].endIndex >= index)
break;}


PubSub.publish('SPRITZ.Update');};


self.toProgress = function(val){

self.toTokenAtIndex(textLength * val);};



self.getProgress = function(){

return self.index / (length - 1);};


self.getTimeLeft = function(){

return complexityRemain * (60000 / app.get('wpm'));};



self.destroy = function(){

for(var i=0; i < data.length; i++) {
data[i].destroy();
data[i] = null;}


raw = data = null;};};};});
__d('FastPaper/src/spritz/View',["pubsub-js/src/pubsub","FastPaper/src/spritz/Utils"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 

PubSub=require('pubsub-js/src/pubsub');
var Utils=require('FastPaper/src/spritz/Utils');

module.exports = function(app){
var CONTEXT_CHARS_LIMIT=2000;

var MIN_WPM=50;
var MAX_WPM=2000;
var WPM_STEP=50;

var MIN_FONT=1;
var MAX_FONT=7;

app.View = function(){
function onSequencerUpdate(str, hyphenated){
updateWord(str, hyphenated);
updateProgressBar();
updateTimeLeft();}


function onSequencerPlay(){
updateWord();}


function onSequencerPause(){
updateWord();}


function updateWord(str, hyphenated){
var word='';
if(str === false){
return;}


str = str || sequencer.getToken().toString();

var pivot=app.calcPivotPoint(str);
var html=

PubSub.publish('SPRITZ.VIEW.UpdateWord', {
word:[
Utils.htmlEncode(str.substr(0, pivot)).trim(), 
Utils.htmlEncode(str[pivot]).trim(), 
Utils.htmlEncode(str.substr(pivot + 1)).trim()], 

pivot:pivot, 
html:html});}



function updateProgressBar(){}




function updateTimeLeft(){
var timeLeft=sequencer.getTimeLeft();
var sec=timeLeft / 1000;
var min=sec / 60;}


var self=this;
var focusPoint=0;
var sequencer;


self.setSequencer = function(seq){var _this=this;
if(sequencer){
PubSub.unsubscribe('SPRITZ.Play');
PubSub.unsubscribe('SPRITZ.Pause');
PubSub.unsubscribe('SPRITZ.Update');}


sequencer = seq;

PubSub.subscribe('SPRITZ.Play', function(){
onSequencerPlay();});

PubSub.subscribe('SPRITZ.Pause', function(){
onSequencerPause();});

PubSub.subscribe('SPRITZ.Update', function(e, msg){
onSequencerUpdate.apply(_this, msg);});


updateTimeLeft();
updateWord();};


self.destroy = function(seq){
PubSub.unsubscribe('SPRITZ.Play');
PubSub.unsubscribe('SPRITZ.Pause');
PubSub.unsubscribe('SPRITZ.Update');};};};});
__d('FastPaper/src/stores/Settings',["fluxxor/index","lodash/index","FastPaper/src/EventConstants","react-native/Libraries/react-native/react-native"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var Fluxxor=require("fluxxor/index");
var _=require("lodash/index");
var EC=require("FastPaper/src/EventConstants");var _require=




require("react-native/Libraries/react-native/react-native");var AsyncStorage=_require.AsyncStorage;var NetInfo=_require.NetInfo;

var THEMES={
LIGHT:"LIGHT", 
MONOKAI:"MONOKAI", 
OCEANIC:"OCEANIC"};


var COLORS_BY_THEME={
LIGHT:{
background:"#fff", 
pivot:"#ea5f70", 
line:"#222", 
contextText:"#929292", 
text:"#000"}, 

MONOKAI:{
background:"#272822", 
pivot:"#FF0069", 
line:"#75715E", 
contextText:"#75715E", 
text:"#F8F8F2"}, 

OCEANIC:{
background:"#424242", 
pivot:"#009DDD", 
line:"#D2D2D2", 
contextText:"#6C6C6C", 
text:"#D1D1D1"}};



var SettingsStore=Fluxxor.createStore({
init:function(){var _this=this;
AsyncStorage.getItem("COLOR_THEME").
then(function(value){
if(value !== null){
if(COLORS_BY_THEME[value]){
_this._colorTheme = value;
_this.emit("change");}}});




NetInfo.isConnected.fetch().
done(this.handleInternetConnectivityChange);}, 


initialize:function(){
this._isConnected = true;
this._colorTheme = "LIGHT";
this.init();

this.bindActions(
EC.UI.SET_COLOR_THEME, this.handleChangeColorTheme);


NetInfo.isConnected.addEventListener("change", this.handleInternetConnectivityChange);}, 



getColorThemeName:function(){
return this._colorTheme;}, 


getAllThemes:function(){
return JSON.parse(JSON.stringify(COLORS_BY_THEME));}, 


getThemeColors:function(){
return COLORS_BY_THEME[this._colorTheme];}, 


isConnected:function(){
return this._isConnected;}, 



handleChangeColorTheme:function(colorTheme){
this._colorTheme = colorTheme;

AsyncStorage.setItem("COLOR_THEME", colorTheme).
then(function(){return console.log("Saved selection to disk: " + colorTheme);}).
catch(function(error){return console.log("AsyncStorage error: " + error.message);}).
done();

this.emit("change");}, 


handleInternetConnectivityChange:function(isConnected){
this._isConnected = isConnected;
this.emit("change");}});



module.exports = SettingsStore;});
__d('FastPaper/src/stores/User',["fluxxor/index","lodash/index","FastPaper/src/EventConstants","string/lib/string"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var Fluxxor=require("fluxxor/index");
var _=require("lodash/index");
var EC=require("FastPaper/src/EventConstants");
var S=require("string/lib/string");

var PageStore=Fluxxor.createStore({
init:function(){
this._username = undefined;
this._isLoggedIn = false;}, 


initialize:function(){
this.init();

this.bindActions(
EC.SERVER.LOGIN, this.handleLogin, 
EC.SERVER.LOGOUT, this.handleLogout);}, 




getUsername:function(){
return this._username;}, 


isLoggedIn:function(){
return this._isLoggedIn;}, 



handleLogin:function(_ref){var username=_ref.username;var isLoggedIn=_ref.isLoggedIn;
this._username = username;
this._isLoggedIn = isLoggedIn;
this.emit("change");}, 


handleLogout:function(){
this.init();
this.emit("change");}});



module.exports = PageStore;});
__d('FastPaper/src/actions/index',["FastPaper/src/actions/Analytics","FastPaper/src/actions/Articles","FastPaper/src/actions/Page","FastPaper/src/actions/PocketQueue","FastPaper/src/actions/Settings","FastPaper/src/actions/Text","FastPaper/src/actions/User"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

module.exports = {
analytics:require("FastPaper/src/actions/Analytics"), 
articles:require("FastPaper/src/actions/Articles"), 
page:require("FastPaper/src/actions/Page"), 
pocketQueue:require("FastPaper/src/actions/PocketQueue"), 
settings:require("FastPaper/src/actions/Settings"), 
text:require("FastPaper/src/actions/Text"), 
user:require("FastPaper/src/actions/User")};});
__d('FastPaper/src/actions/Analytics',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";var _require=





require("NativeModules");var Flurry=_require.Flurry;

module.exports = {
launchApp:function(){
Flurry.logEvent("LaunchApp");}, 


login:function(){
Flurry.logEvent("Login");}, 


logout:function(){
Flurry.logEvent("Logout");}, 


fetchText:function(_ref){var domain=_ref.domain;var author=_ref.author;var word_count=_ref.word_count;
Flurry.logEventWithParameters("Fetch Text", {
"Domain":domain || "unknown", 
"Author":author || "unknown", 
"Word count":"" + word_count || "0"});}, 



error:function(_ref2){var request=_ref2.request;var err=_ref2.err;
err = err || {};

Flurry.logError(request, JSON.stringify(err));}};});
__d('FastPaper/src/actions/Articles',["FastPaper/src/EventConstants","FastPaper/src/api/index","q/q","react-native/Libraries/react-native/react-native"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var EC=require("FastPaper/src/EventConstants");
var api=require("FastPaper/src/api/index");
var Q=require("q/q");var _require=



require("react-native/Libraries/react-native/react-native");var AlertIOS=_require.AlertIOS;

module.exports = {
fetch:function(isInitial){var _this=this;
if(!isInitial && !this.flux.stores.settings.isConnected()){
AlertIOS.alert(
"Error", 
"You must be connected to the internet to sync.", 
[
{text:"OK", onPress:function(){}}]);



return Q.reject();}


var since=this.flux.stores.articles.getSince();
return api.pocket.fetch(since).
then(function(data){
_this.dispatch(EC.SERVER.ARTICLES_RECEIVE, {
list:data.list, 
since:data.since, 
isItAllArticles:!since});

return data;}).

catch(function(err){
_this.flux.actions.analytics.error({
name:"Pocket-Articles", 
request:"Fetch articles", 
err:err && err.response?JSON.parse(err.response.text || {}):err});


return Q.reject(err);});}, 



archive:function(id){var _this2=this;
this.flux.actions.articles.
_modify({
id:id, 
action:"archive", 
event:EC.SERVER.ARCHIVE_ARTICLE}).

catch(function(err){
_this2.flux.actions.analytics.error({
name:"Pocket-Articles", 
request:"Archive article", 
err:err && err.response?JSON.parse(err.response.text || {}):err});}).


done();}, 


delete:function(id){var _this3=this;
this.flux.actions.articles.
_modify({
id:id, 
action:"delete", 
event:EC.SERVER.DELETE_ARTICLE}).

catch(function(err){
_this3.flux.actions.analytics.error({
name:"Pocket-Articles", 
request:"Delete article", 
err:err && err.response?JSON.parse(err.response.text || {}):err});}).


done();}, 


favorite:function(id){var _this4=this;
this.dispatch(EC.SERVER.FAVORITE_ARTICLE, id);

this.flux.actions.articles.
_modify({
id:id, 
action:"favorite"}).

catch(function(err){
_this4.flux.actions.analytics.error({
name:"Pocket-Articles", 
request:"Favourite article", 
err:err && err.response?JSON.parse(err.response.text || {}):err});}).


done();}, 


unfavorite:function(id){var _this5=this;
this.dispatch(EC.SERVER.UNFAVORITE_ARTICLE, id);

this.flux.actions.articles.
_modify({
id:id, 
action:"unfavorite"}).

catch(function(err){
_this5.flux.actions.analytics.error({
name:"Pocket-Articles", 
request:"Unfavourite article", 
err:err && err.response?JSON.parse(err.response.text || {}):err});}).


done();}, 


_modify:function(_ref){var _this6=this;var id=_ref.id;var action=_ref.action;var event=_ref.event;
if(!this.flux.stores.settings.isConnected()){
if(event){
this.dispatch(event, id);}

this.dispatch(EC.UI.DELAY_ACTION, {
id:id, 
action:action});


return Q();}


return api.pocket.
modify([{
item_id:id, 
action:action}]).

then(function(data){
if(event){
_this6.dispatch(event, id);}});}};});
__d('FastPaper/src/api/index',["FastPaper/src/api/Pocket","FastPaper/src/api/Readability","FastPaper/src/api/User"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var Pocket=require('FastPaper/src/api/Pocket');
var Readability=require('FastPaper/src/api/Readability');
var User=require('FastPaper/src/api/User');

module.exports = {
pocket:new Pocket(), 
readability:new Readability(), 
user:new User()};});
__d('FastPaper/src/api/Pocket',["q/q","superagent/lib/client","NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if("value" in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}

var Q=require("q/q");
var sa=require("superagent/lib/client");var _require=


require("NativeModules");var Pocket=_require.Pocket;var 

PocketAPI=(function(){function PocketAPI(){_classCallCheck(this, PocketAPI);}_createClass(PocketAPI, [{key:"fetch", value:
function fetch(since){
var d=Q.defer();

Pocket.fetch(since, function(error, res){


if(error || res.error){
d.reject(error || res.error);}else 
{
d.resolve({
list:res.list, 
since:res.since});}});




return d.promise;}}, {key:"modify", value:








function modify(actions){
var d=Q.defer();

Pocket.modify(actions, function(error, res){



if(error || res.error || res.status !== 1){
d.reject(error || res.error);}else 
{
d.resolve(res);}});



return d.promise;}}]);return PocketAPI;})();



module.exports = PocketAPI;});
__d('q/q',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (



























function(definition){
"use strict";







if(typeof bootstrap === "function"){
bootstrap("promise", definition);}else 


if(typeof exports === "object" && typeof module === "object"){
module.exports = definition();}else 


if(typeof define === "function" && define.amd){
define(definition);}else 


if(typeof ses !== "undefined"){
if(!ses.ok()){
return;}else 
{
ses.makeQ = definition;}}else 



if(typeof self !== "undefined"){
self.Q = definition();}else 

{
throw new Error("This environment was not anticiapted by Q. Please file a bug.");}})(


function(){
"use strict";

var hasStacks=false;
try{
throw new Error();}
catch(e) {
hasStacks = !!e.stack;}




var qStartingLine=captureLine();
var qFileName;




var noop=function(){};



var nextTick=(function(){

var head={task:void 0, next:null};
var tail=head;
var flushing=false;
var requestTick=void 0;
var isNodeJS=false;

function flush(){


while(head.next) {
head = head.next;
var task=head.task;
head.task = void 0;
var domain=head.domain;

if(domain){
head.domain = void 0;
domain.enter();}


try{
task();}

catch(e) {
if(isNodeJS){






if(domain){
domain.exit();}

setTimeout(flush, 0);
if(domain){
domain.enter();}


throw e;}else 

{


setTimeout(function(){
throw e;}, 
0);}}



if(domain){
domain.exit();}}



flushing = false;}


nextTick = function(task){
tail = tail.next = {
task:task, 
domain:isNodeJS && process.domain, 
next:null};


if(!flushing){
flushing = true;
requestTick();}};



if(typeof process !== "undefined" && process.nextTick){


isNodeJS = true;

requestTick = function(){
process.nextTick(flush);};}else 


if(typeof setImmediate === "function"){

if(typeof window !== "undefined"){
requestTick = setImmediate.bind(window, flush);}else 
{
requestTick = function(){
setImmediate(flush);};}}else 



if(typeof MessageChannel !== "undefined"){


var channel=new MessageChannel();


channel.port1.onmessage = function(){
requestTick = requestPortTick;
channel.port1.onmessage = flush;
flush();};

var requestPortTick=function(){


channel.port2.postMessage(0);};

requestTick = function(){
setTimeout(flush, 0);
requestPortTick();};}else 


{

requestTick = function(){
setTimeout(flush, 0);};}



return nextTick;})();












var call=Function.call;
function uncurryThis(f){
return function(){
return call.apply(f, arguments);};}






var array_slice=uncurryThis(Array.prototype.slice);

var array_reduce=uncurryThis(
Array.prototype.reduce || function(callback, basis){
var index=0, 
length=this.length;

if(arguments.length === 1){


do {
if(index in this){
basis = this[index++];
break;}

if(++index >= length){
throw new TypeError();}}while(

1);}


for(; index < length; index++) {

if(index in this){
basis = callback(basis, this[index], index);}}


return basis;});



var array_indexOf=uncurryThis(
Array.prototype.indexOf || function(value){

for(var i=0; i < this.length; i++) {
if(this[i] === value){
return i;}}


return -1;});



var array_map=uncurryThis(
Array.prototype.map || function(callback, thisp){
var self=this;
var collect=[];
array_reduce(self, function(undefined, value, index){
collect.push(callback.call(thisp, value, index, self));}, 
void 0);
return collect;});



var object_create=Object.create || function(prototype){
function Type(){}
Type.prototype = prototype;
return new Type();};


var object_hasOwnProperty=uncurryThis(Object.prototype.hasOwnProperty);

var object_keys=Object.keys || function(object){
var keys=[];
for(var key in object) {
if(object_hasOwnProperty(object, key)){
keys.push(key);}}


return keys;};


var object_toString=uncurryThis(Object.prototype.toString);

function isObject(value){
return value === Object(value);}





function isStopIteration(exception){
return (
object_toString(exception) === "[object StopIteration]" || 
exception instanceof QReturnValue);}





var QReturnValue;
if(typeof ReturnValue !== "undefined"){
QReturnValue = ReturnValue;}else 
{
QReturnValue = function(value){
this.value = value;};}





var STACK_JUMP_SEPARATOR="From previous event:";

function makeStackTraceLong(error, promise){


if(hasStacks && 
promise.stack && 
typeof error === "object" && 
error !== null && 
error.stack && 
error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1)
{
var stacks=[];
for(var p=promise; !!p; p = p.source) {
if(p.stack){
stacks.unshift(p.stack);}}


stacks.unshift(error.stack);

var concatedStacks=stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
error.stack = filterStackString(concatedStacks);}}



function filterStackString(stackString){
var lines=stackString.split("\n");
var desiredLines=[];
for(var i=0; i < lines.length; ++i) {
var line=lines[i];

if(!isInternalFrame(line) && !isNodeFrame(line) && line){
desiredLines.push(line);}}


return desiredLines.join("\n");}


function isNodeFrame(stackLine){
return stackLine.indexOf("(module.js:") !== -1 || 
stackLine.indexOf("(node.js:") !== -1;}


function getFileNameAndLineNumber(stackLine){


var attempt1=/at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
if(attempt1){
return [attempt1[1], Number(attempt1[2])];}



var attempt2=/at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
if(attempt2){
return [attempt2[1], Number(attempt2[2])];}



var attempt3=/.*@(.+):(\d+)$/.exec(stackLine);
if(attempt3){
return [attempt3[1], Number(attempt3[2])];}}



function isInternalFrame(stackLine){
var fileNameAndLineNumber=getFileNameAndLineNumber(stackLine);

if(!fileNameAndLineNumber){
return false;}


var fileName=fileNameAndLineNumber[0];
var lineNumber=fileNameAndLineNumber[1];

return fileName === qFileName && 
lineNumber >= qStartingLine && 
lineNumber <= qEndingLine;}




function captureLine(){
if(!hasStacks){
return;}


try{
throw new Error();}
catch(e) {
var lines=e.stack.split("\n");
var firstLine=lines[0].indexOf("@") > 0?lines[1]:lines[2];
var fileNameAndLineNumber=getFileNameAndLineNumber(firstLine);
if(!fileNameAndLineNumber){
return;}


qFileName = fileNameAndLineNumber[0];
return fileNameAndLineNumber[1];}}



function deprecate(callback, name, alternative){
return function(){
if(typeof console !== "undefined" && 
typeof console.warn === "function"){
console.warn(name + " is deprecated, use " + alternative + 
" instead.", new Error("").stack);}

return callback.apply(callback, arguments);};}











function Q(value){



if(value instanceof Promise){
return value;}



if(isPromiseAlike(value)){
return coerce(value);}else 
{
return fulfill(value);}}


Q.resolve = Q;





Q.nextTick = nextTick;




Q.longStackSupport = false;


if(typeof process === "object" && process && process.env && process.env.Q_DEBUG){
Q.longStackSupport = true;}












Q.defer = defer;
function defer(){






var messages=[], progressListeners=[], resolvedPromise;

var deferred=object_create(defer.prototype);
var promise=object_create(Promise.prototype);

promise.promiseDispatch = function(resolve, op, operands){
var args=array_slice(arguments);
if(messages){
messages.push(args);
if(op === "when" && operands[1]){
progressListeners.push(operands[1]);}}else 

{
Q.nextTick(function(){
resolvedPromise.promiseDispatch.apply(resolvedPromise, args);});}};





promise.valueOf = function(){
if(messages){
return promise;}

var nearerValue=nearer(resolvedPromise);
if(isPromise(nearerValue)){
resolvedPromise = nearerValue;}

return nearerValue;};


promise.inspect = function(){
if(!resolvedPromise){
return {state:"pending"};}

return resolvedPromise.inspect();};


if(Q.longStackSupport && hasStacks){
try{
throw new Error();}
catch(e) {






promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);}}







function become(newPromise){
resolvedPromise = newPromise;
promise.source = newPromise;

array_reduce(messages, function(undefined, message){
Q.nextTick(function(){
newPromise.promiseDispatch.apply(newPromise, message);});}, 

void 0);

messages = void 0;
progressListeners = void 0;}


deferred.promise = promise;
deferred.resolve = function(value){
if(resolvedPromise){
return;}


become(Q(value));};


deferred.fulfill = function(value){
if(resolvedPromise){
return;}


become(fulfill(value));};

deferred.reject = function(reason){
if(resolvedPromise){
return;}


become(reject(reason));};

deferred.notify = function(progress){
if(resolvedPromise){
return;}


array_reduce(progressListeners, function(undefined, progressListener){
Q.nextTick(function(){
progressListener(progress);});}, 

void 0);};


return deferred;}







defer.prototype.makeNodeResolver = function(){
var self=this;
return function(error, value){
if(error){
self.reject(error);}else 
if(arguments.length > 2){
self.resolve(array_slice(arguments, 1));}else 
{
self.resolve(value);}};};










Q.Promise = promise;
Q.promise = promise;
function promise(resolver){
if(typeof resolver !== "function"){
throw new TypeError("resolver must be a function.");}

var deferred=defer();
try{
resolver(deferred.resolve, deferred.reject, deferred.notify);}
catch(reason) {
deferred.reject(reason);}

return deferred.promise;}


promise.race = race;
promise.all = all;
promise.reject = reject;
promise.resolve = Q;




Q.passByCopy = function(object){


return object;};


Promise.prototype.passByCopy = function(){


return this;};











Q.join = function(x, y){
return Q(x).join(y);};


Promise.prototype.join = function(that){
return Q([this, that]).spread(function(x, y){
if(x === y){

return x;}else 
{
throw new Error("Can't join: not the same: " + x + " " + y);}});};









Q.race = race;
function race(answerPs){
return promise(function(resolve, reject){





for(var i=0, len=answerPs.length; i < len; i++) {
Q(answerPs[i]).then(resolve, reject);}});}




Promise.prototype.race = function(){
return this.then(Q.race);};













Q.makePromise = Promise;
function Promise(descriptor, fallback, inspect){
if(fallback === void 0){
fallback = function(op){
return reject(new Error(
"Promise does not support operation: " + op));};}



if(inspect === void 0){
inspect = function(){
return {state:"unknown"};};}



var promise=object_create(Promise.prototype);

promise.promiseDispatch = function(resolve, op, args){
var result;
try{
if(descriptor[op]){
result = descriptor[op].apply(promise, args);}else 
{
result = fallback.call(promise, op, args);}}

catch(exception) {
result = reject(exception);}

if(resolve){
resolve(result);}};



promise.inspect = inspect;


if(inspect){
var inspected=inspect();
if(inspected.state === "rejected"){
promise.exception = inspected.reason;}


promise.valueOf = function(){
var inspected=inspect();
if(inspected.state === "pending" || 
inspected.state === "rejected"){
return promise;}

return inspected.value;};}



return promise;}


Promise.prototype.toString = function(){
return "[object Promise]";};


Promise.prototype.then = function(fulfilled, rejected, progressed){
var self=this;
var deferred=defer();
var done=false;


function _fulfilled(value){
try{
return typeof fulfilled === "function"?fulfilled(value):value;}
catch(exception) {
return reject(exception);}}



function _rejected(exception){
if(typeof rejected === "function"){
makeStackTraceLong(exception, self);
try{
return rejected(exception);}
catch(newException) {
return reject(newException);}}


return reject(exception);}


function _progressed(value){
return typeof progressed === "function"?progressed(value):value;}


Q.nextTick(function(){
self.promiseDispatch(function(value){
if(done){
return;}

done = true;

deferred.resolve(_fulfilled(value));}, 
"when", [function(exception){
if(done){
return;}

done = true;

deferred.resolve(_rejected(exception));}]);});




self.promiseDispatch(void 0, "when", [void 0, function(value){
var newValue;
var threw=false;
try{
newValue = _progressed(value);}
catch(e) {
threw = true;
if(Q.onerror){
Q.onerror(e);}else 
{
throw e;}}



if(!threw){
deferred.notify(newValue);}}]);



return deferred.promise;};


Q.tap = function(promise, callback){
return Q(promise).tap(callback);};














Promise.prototype.tap = function(callback){
callback = Q(callback);

return this.then(function(value){
return callback.fcall(value).thenResolve(value);});};



















Q.when = when;
function when(value, fulfilled, rejected, progressed){
return Q(value).then(fulfilled, rejected, progressed);}


Promise.prototype.thenResolve = function(value){
return this.then(function(){return value;});};


Q.thenResolve = function(promise, value){
return Q(promise).thenResolve(value);};


Promise.prototype.thenReject = function(reason){
return this.then(function(){throw reason;});};


Q.thenReject = function(promise, reason){
return Q(promise).thenReject(reason);};













Q.nearer = nearer;
function nearer(value){
if(isPromise(value)){
var inspected=value.inspect();
if(inspected.state === "fulfilled"){
return inspected.value;}}


return value;}






Q.isPromise = isPromise;
function isPromise(object){
return object instanceof Promise;}


Q.isPromiseAlike = isPromiseAlike;
function isPromiseAlike(object){
return isObject(object) && typeof object.then === "function";}






Q.isPending = isPending;
function isPending(object){
return isPromise(object) && object.inspect().state === "pending";}


Promise.prototype.isPending = function(){
return this.inspect().state === "pending";};






Q.isFulfilled = isFulfilled;
function isFulfilled(object){
return !isPromise(object) || object.inspect().state === "fulfilled";}


Promise.prototype.isFulfilled = function(){
return this.inspect().state === "fulfilled";};





Q.isRejected = isRejected;
function isRejected(object){
return isPromise(object) && object.inspect().state === "rejected";}


Promise.prototype.isRejected = function(){
return this.inspect().state === "rejected";};








var unhandledReasons=[];
var unhandledRejections=[];
var trackUnhandledRejections=true;

function resetUnhandledRejections(){
unhandledReasons.length = 0;
unhandledRejections.length = 0;

if(!trackUnhandledRejections){
trackUnhandledRejections = true;}}



function trackRejection(promise, reason){
if(!trackUnhandledRejections){
return;}


unhandledRejections.push(promise);
if(reason && typeof reason.stack !== "undefined"){
unhandledReasons.push(reason.stack);}else 
{
unhandledReasons.push("(no stack) " + reason);}}



function untrackRejection(promise){
if(!trackUnhandledRejections){
return;}


var at=array_indexOf(unhandledRejections, promise);
if(at !== -1){
unhandledRejections.splice(at, 1);
unhandledReasons.splice(at, 1);}}



Q.resetUnhandledRejections = resetUnhandledRejections;

Q.getUnhandledReasons = function(){

return unhandledReasons.slice();};


Q.stopUnhandledRejectionTracking = function(){
resetUnhandledRejections();
trackUnhandledRejections = false;};


resetUnhandledRejections();







Q.reject = reject;
function reject(reason){
var rejection=Promise({
"when":function(rejected){

if(rejected){
untrackRejection(this);}

return rejected?rejected(reason):this;}}, 

function fallback(){
return this;}, 
function inspect(){
return {state:"rejected", reason:reason};});



trackRejection(rejection, reason);

return rejection;}






Q.fulfill = fulfill;
function fulfill(value){
return Promise({
"when":function(){
return value;}, 

"get":function(name){
return value[name];}, 

"set":function(name, rhs){
value[name] = rhs;}, 

"delete":function(name){
delete value[name];}, 

"post":function(name, args){


if(name === null || name === void 0){
return value.apply(void 0, args);}else 
{
return value[name].apply(value, args);}}, 


"apply":function(thisp, args){
return value.apply(thisp, args);}, 

"keys":function(){
return object_keys(value);}}, 

void 0, function inspect(){
return {state:"fulfilled", value:value};});}








function coerce(promise){
var deferred=defer();
Q.nextTick(function(){
try{
promise.then(deferred.resolve, deferred.reject, deferred.notify);}
catch(exception) {
deferred.reject(exception);}});


return deferred.promise;}











Q.master = master;
function master(object){
return Promise({
"isDef":function(){}}, 
function fallback(op, args){
return dispatch(object, op, args);}, 
function(){
return Q(object).inspect();});}













Q.spread = spread;
function spread(value, fulfilled, rejected){
return Q(value).spread(fulfilled, rejected);}


Promise.prototype.spread = function(fulfilled, rejected){
return this.all().then(function(array){
return fulfilled.apply(void 0, array);}, 
rejected);};




























Q.async = async;
function async(makeGenerator){
return function(){


function continuer(verb, arg){
var result;









if(typeof StopIteration === "undefined"){

try{
result = generator[verb](arg);}
catch(exception) {
return reject(exception);}

if(result.done){
return Q(result.value);}else 
{
return when(result.value, callback, errback);}}else 

{


try{
result = generator[verb](arg);}
catch(exception) {
if(isStopIteration(exception)){
return Q(exception.value);}else 
{
return reject(exception);}}


return when(result, callback, errback);}}


var generator=makeGenerator.apply(this, arguments);
var callback=continuer.bind(continuer, "next");
var errback=continuer.bind(continuer, "throw");
return callback();};}










Q.spawn = spawn;
function spawn(makeGenerator){
Q.done(Q.async(makeGenerator)());}



























Q["return"] = _return;
function _return(value){
throw new QReturnValue(value);}

















Q.promised = promised;
function promised(callback){
return function(){
return spread([this, all(arguments)], function(self, args){
return callback.apply(self, args);});};}











Q.dispatch = dispatch;
function dispatch(object, op, args){
return Q(object).dispatch(op, args);}


Promise.prototype.dispatch = function(op, args){
var self=this;
var deferred=defer();
Q.nextTick(function(){
self.promiseDispatch(deferred.resolve, op, args);});

return deferred.promise;};








Q.get = function(object, key){
return Q(object).dispatch("get", [key]);};


Promise.prototype.get = function(key){
return this.dispatch("get", [key]);};









Q.set = function(object, key, value){
return Q(object).dispatch("set", [key, value]);};


Promise.prototype.set = function(key, value){
return this.dispatch("set", [key, value]);};








Q.del = 
Q["delete"] = function(object, key){
return Q(object).dispatch("delete", [key]);};


Promise.prototype.del = 
Promise.prototype["delete"] = function(key){
return this.dispatch("delete", [key]);};















Q.mapply = 
Q.post = function(object, name, args){
return Q(object).dispatch("post", [name, args]);};


Promise.prototype.mapply = 
Promise.prototype.post = function(name, args){
return this.dispatch("post", [name, args]);};









Q.send = 
Q.mcall = 
Q.invoke = function(object, name){
return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);};


Promise.prototype.send = 
Promise.prototype.mcall = 
Promise.prototype.invoke = function(name){
return this.dispatch("post", [name, array_slice(arguments, 1)]);};







Q.fapply = function(object, args){
return Q(object).dispatch("apply", [void 0, args]);};


Promise.prototype.fapply = function(args){
return this.dispatch("apply", [void 0, args]);};







Q["try"] = 
Q.fcall = function(object){
return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);};


Promise.prototype.fcall = function(){
return this.dispatch("apply", [void 0, array_slice(arguments)]);};








Q.fbind = function(object){
var promise=Q(object);
var args=array_slice(arguments, 1);
return function fbound(){
return promise.dispatch("apply", [
this, 
args.concat(array_slice(arguments))]);};};



Promise.prototype.fbind = function(){
var promise=this;
var args=array_slice(arguments);
return function fbound(){
return promise.dispatch("apply", [
this, 
args.concat(array_slice(arguments))]);};};










Q.keys = function(object){
return Q(object).dispatch("keys", []);};


Promise.prototype.keys = function(){
return this.dispatch("keys", []);};











Q.all = all;
function all(promises){
return when(promises, function(promises){
var countDown=0;
var deferred=defer();
array_reduce(promises, function(undefined, promise, index){
var snapshot;
if(
isPromise(promise) && 
(snapshot = promise.inspect()).state === "fulfilled")
{
promises[index] = snapshot.value;}else 
{
++countDown;
when(
promise, 
function(value){
promises[index] = value;
if(--countDown === 0){
deferred.resolve(promises);}}, 


deferred.reject, 
function(progress){
deferred.notify({index:index, value:progress});});}}, 



void 0);
if(countDown === 0){
deferred.resolve(promises);}

return deferred.promise;});}



Promise.prototype.all = function(){
return all(this);};











Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
function allResolved(promises){
return when(promises, function(promises){
promises = array_map(promises, Q);
return when(all(array_map(promises, function(promise){
return when(promise, noop, noop);})), 
function(){
return promises;});});}




Promise.prototype.allResolved = function(){
return allResolved(this);};





Q.allSettled = allSettled;
function allSettled(promises){
return Q(promises).allSettled();}









Promise.prototype.allSettled = function(){
return this.then(function(promises){
return all(array_map(promises, function(promise){
promise = Q(promise);
function regardless(){
return promise.inspect();}

return promise.then(regardless, regardless);}));});};













Q.fail = 
Q["catch"] = function(object, rejected){
return Q(object).then(void 0, rejected);};


Promise.prototype.fail = 
Promise.prototype["catch"] = function(rejected){
return this.then(void 0, rejected);};










Q.progress = progress;
function progress(object, progressed){
return Q(object).then(void 0, void 0, progressed);}


Promise.prototype.progress = function(progressed){
return this.then(void 0, void 0, progressed);};













Q.fin = 
Q["finally"] = function(object, callback){
return Q(object)["finally"](callback);};


Promise.prototype.fin = 
Promise.prototype["finally"] = function(callback){
callback = Q(callback);
return this.then(function(value){
return callback.fcall().then(function(){
return value;});}, 

function(reason){

return callback.fcall().then(function(){
throw reason;});});};










Q.done = function(object, fulfilled, rejected, progress){
return Q(object).done(fulfilled, rejected, progress);};


Promise.prototype.done = function(fulfilled, rejected, progress){
var onUnhandledError=function(error){


Q.nextTick(function(){
makeStackTraceLong(error, promise);
if(Q.onerror){
Q.onerror(error);}else 
{
throw error;}});};





var promise=fulfilled || rejected || progress?
this.then(fulfilled, rejected, progress):
this;

if(typeof process === "object" && process && process.domain){
onUnhandledError = process.domain.bind(onUnhandledError);}


promise.then(void 0, onUnhandledError);};











Q.timeout = function(object, ms, error){
return Q(object).timeout(ms, error);};


Promise.prototype.timeout = function(ms, error){
var deferred=defer();
var timeoutId=setTimeout(function(){
if(!error || "string" === typeof error){
error = new Error(error || "Timed out after " + ms + " ms");
error.code = "ETIMEDOUT";}

deferred.reject(error);}, 
ms);

this.then(function(value){
clearTimeout(timeoutId);
deferred.resolve(value);}, 
function(exception){
clearTimeout(timeoutId);
deferred.reject(exception);}, 
deferred.notify);

return deferred.promise;};











Q.delay = function(object, timeout){
if(timeout === void 0){
timeout = object;
object = void 0;}

return Q(object).delay(timeout);};


Promise.prototype.delay = function(timeout){
return this.then(function(value){
var deferred=defer();
setTimeout(function(){
deferred.resolve(value);}, 
timeout);
return deferred.promise;});};












Q.nfapply = function(callback, args){
return Q(callback).nfapply(args);};


Promise.prototype.nfapply = function(args){
var deferred=defer();
var nodeArgs=array_slice(args);
nodeArgs.push(deferred.makeNodeResolver());
this.fapply(nodeArgs).fail(deferred.reject);
return deferred.promise;};











Q.nfcall = function(callback){
var args=array_slice(arguments, 1);
return Q(callback).nfapply(args);};


Promise.prototype.nfcall = function(){
var nodeArgs=array_slice(arguments);
var deferred=defer();
nodeArgs.push(deferred.makeNodeResolver());
this.fapply(nodeArgs).fail(deferred.reject);
return deferred.promise;};










Q.nfbind = 
Q.denodeify = function(callback){
var baseArgs=array_slice(arguments, 1);
return function(){
var nodeArgs=baseArgs.concat(array_slice(arguments));
var deferred=defer();
nodeArgs.push(deferred.makeNodeResolver());
Q(callback).fapply(nodeArgs).fail(deferred.reject);
return deferred.promise;};};



Promise.prototype.nfbind = 
Promise.prototype.denodeify = function(){
var args=array_slice(arguments);
args.unshift(this);
return Q.denodeify.apply(void 0, args);};


Q.nbind = function(callback, thisp){
var baseArgs=array_slice(arguments, 2);
return function(){
var nodeArgs=baseArgs.concat(array_slice(arguments));
var deferred=defer();
nodeArgs.push(deferred.makeNodeResolver());
function bound(){
return callback.apply(thisp, arguments);}

Q(bound).fapply(nodeArgs).fail(deferred.reject);
return deferred.promise;};};



Promise.prototype.nbind = function(){
var args=array_slice(arguments, 0);
args.unshift(this);
return Q.nbind.apply(void 0, args);};











Q.nmapply = 
Q.npost = function(object, name, args){
return Q(object).npost(name, args);};


Promise.prototype.nmapply = 
Promise.prototype.npost = function(name, args){
var nodeArgs=array_slice(args || []);
var deferred=defer();
nodeArgs.push(deferred.makeNodeResolver());
this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
return deferred.promise;};












Q.nsend = 
Q.nmcall = 
Q.ninvoke = function(object, name){
var nodeArgs=array_slice(arguments, 2);
var deferred=defer();
nodeArgs.push(deferred.makeNodeResolver());
Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
return deferred.promise;};


Promise.prototype.nsend = 
Promise.prototype.nmcall = 
Promise.prototype.ninvoke = function(name){
var nodeArgs=array_slice(arguments, 1);
var deferred=defer();
nodeArgs.push(deferred.makeNodeResolver());
this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
return deferred.promise;};












Q.nodeify = nodeify;
function nodeify(object, nodeback){
return Q(object).nodeify(nodeback);}


Promise.prototype.nodeify = function(nodeback){
if(nodeback){
this.then(function(value){
Q.nextTick(function(){
nodeback(null, value);});}, 

function(error){
Q.nextTick(function(){
nodeback(error);});});}else 


{
return this;}};




var qEndingLine=captureLine();

return Q;});});
__d('superagent/lib/client',["component-emitter/index","reduce-component/index"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 



Emitter=require('component-emitter/index');
var reduce=require('reduce-component/index');





var root='undefined' == typeof window?
this || self:
window;





function noop(){};












function isHost(obj){
var str=({}).toString.call(obj);

switch(str){
case '[object File]':
case '[object Blob]':
case '[object FormData]':
return true;
default:
return false;}}







request.getXHR = function(){
if(root.XMLHttpRequest && (
!root.location || 'file:' != root.location.protocol || 
!root.ActiveXObject)){
return new XMLHttpRequest();}else 
{
try{return new ActiveXObject('Microsoft.XMLHTTP');}catch(e) {}
try{return new ActiveXObject('Msxml2.XMLHTTP.6.0');}catch(e) {}
try{return new ActiveXObject('Msxml2.XMLHTTP.3.0');}catch(e) {}
try{return new ActiveXObject('Msxml2.XMLHTTP');}catch(e) {}}

return false;};










var trim=''.trim?
function(s){return s.trim();}:
function(s){return s.replace(/(^\s*|\s*$)/g, '');};









function isObject(obj){
return obj === Object(obj);}










function serialize(obj){
if(!isObject(obj))return obj;
var pairs=[];
for(var key in obj) {
if(null != obj[key]){
pairs.push(encodeURIComponent(key) + 
'=' + encodeURIComponent(obj[key]));}}


return pairs.join('&');}






request.serializeObject = serialize;









function parseString(str){
var obj={};
var pairs=str.split('&');
var parts;
var pair;

for(var i=0, len=pairs.length; i < len; ++i) {
pair = pairs[i];
parts = pair.split('=');
obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);}


return obj;}






request.parseString = parseString;








request.types = {
html:'text/html', 
json:'application/json', 
xml:'application/xml', 
urlencoded:'application/x-www-form-urlencoded', 
'form':'application/x-www-form-urlencoded', 
'form-data':'application/x-www-form-urlencoded'};











request.serialize = {
'application/x-www-form-urlencoded':serialize, 
'application/json':JSON.stringify};











request.parse = {
'application/x-www-form-urlencoded':parseString, 
'application/json':JSON.parse};











function parseHeader(str){
var lines=str.split(/\r?\n/);
var fields={};
var index;
var line;
var field;
var val;

lines.pop();

for(var i=0, len=lines.length; i < len; ++i) {
line = lines[i];
index = line.indexOf(':');
field = line.slice(0, index).toLowerCase();
val = trim(line.slice(index + 1));
fields[field] = val;}


return fields;}










function type(str){
return str.split(/ *; */).shift();}
;









function params(str){
return reduce(str.split(/ *; */), function(obj, str){
var parts=str.split(/ *= */), 
key=parts.shift(), 
val=parts.shift();

if(key && val)obj[key] = val;
return obj;}, 
{});}
;















































function Response(req, options){
options = options || {};
this.req = req;
this.xhr = this.req.xhr;

this.text = this.req.method != 'HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text') || typeof this.xhr.responseType === 'undefined'?
this.xhr.responseText:
null;
this.statusText = this.req.xhr.statusText;
this.setStatusProperties(this.xhr.status);
this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());



this.header['content-type'] = this.xhr.getResponseHeader('content-type');
this.setHeaderProperties(this.header);
this.body = this.req.method != 'HEAD'?
this.parseBody(this.text?this.text:this.xhr.response):
null;}










Response.prototype.get = function(field){
return this.header[field.toLowerCase()];};














Response.prototype.setHeaderProperties = function(header){

var ct=this.header['content-type'] || '';
this.type = type(ct);


var obj=params(ct);
for(var key in obj) this[key] = obj[key];};













Response.prototype.parseBody = function(str){
var parse=request.parse[this.type];
return parse && str && (str.length || str instanceof Object)?
parse(str):
null;};























Response.prototype.setStatusProperties = function(status){

if(status === 1223){
status = 204;}


var type=status / 100 | 0;


this.status = status;
this.statusType = type;


this.info = 1 == type;
this.ok = 2 == type;
this.clientError = 4 == type;
this.serverError = 5 == type;
this.error = 4 == type || 5 == type?
this.toError():
false;


this.accepted = 202 == status;
this.noContent = 204 == status;
this.badRequest = 400 == status;
this.unauthorized = 401 == status;
this.notAcceptable = 406 == status;
this.notFound = 404 == status;
this.forbidden = 403 == status;};









Response.prototype.toError = function(){
var req=this.req;
var method=req.method;
var url=req.url;

var msg='cannot ' + method + ' ' + url + ' (' + this.status + ')';
var err=new Error(msg);
err.status = this.status;
err.method = method;
err.url = url;

return err;};






request.Response = Response;









function Request(method, url){
var self=this;
Emitter.call(this);
this._query = this._query || [];
this.method = method;
this.url = url;
this.header = {};
this._header = {};
this.on('end', function(){
var err=null;
var res=null;

try{
res = new Response(self);}
catch(e) {
err = new Error('Parser is unable to parse the response');
err.parse = true;
err.original = e;
return self.callback(err);}


self.emit('response', res);

if(err){
return self.callback(err, res);}


if(res.status >= 200 && res.status < 300){
return self.callback(err, res);}


var new_err=new Error(res.statusText || 'Unsuccessful HTTP response');
new_err.original = err;
new_err.response = res;
new_err.status = res.status;

self.callback(err || new_err, res);});}







Emitter(Request.prototype);





Request.prototype.use = function(fn){
fn(this);
return this;};










Request.prototype.timeout = function(ms){
this._timeout = ms;
return this;};









Request.prototype.clearTimeout = function(){
this._timeout = 0;
clearTimeout(this._timer);
return this;};









Request.prototype.abort = function(){
if(this.aborted)return;
this.aborted = true;
this.xhr.abort();
this.clearTimeout();
this.emit('abort');
return this;};






















Request.prototype.set = function(field, val){
if(isObject(field)){
for(var key in field) {
this.set(key, field[key]);}

return this;}

this._header[field.toLowerCase()] = val;
this.header[field] = val;
return this;};
















Request.prototype.unset = function(field){
delete this._header[field.toLowerCase()];
delete this.header[field];
return this;};










Request.prototype.getHeader = function(field){
return this._header[field.toLowerCase()];};
























Request.prototype.type = function(type){
this.set('Content-Type', request.types[type] || type);
return this;};






















Request.prototype.accept = function(type){
this.set('Accept', request.types[type] || type);
return this;};











Request.prototype.auth = function(user, pass){
var str=btoa(user + ':' + pass);
this.set('Authorization', 'Basic ' + str);
return this;};
















Request.prototype.query = function(val){
if('string' != typeof val)val = serialize(val);
if(val)this._query.push(val);
return this;};


















Request.prototype.field = function(name, val){
if(!this._formData)this._formData = new root.FormData();
this._formData.append(name, val);
return this;};



















Request.prototype.attach = function(field, file, filename){
if(!this._formData)this._formData = new root.FormData();
this._formData.append(field, file, filename);
return this;};





















































Request.prototype.send = function(data){
var obj=isObject(data);
var type=this.getHeader('Content-Type');


if(obj && isObject(this._data)){
for(var key in data) {
this._data[key] = data[key];}}else 

if('string' == typeof data){
if(!type)this.type('form');
type = this.getHeader('Content-Type');
if('application/x-www-form-urlencoded' == type){
this._data = this._data?
this._data + '&' + data:
data;}else 
{
this._data = (this._data || '') + data;}}else 

{
this._data = data;}


if(!obj || isHost(data))return this;
if(!type)this.type('json');
return this;};











Request.prototype.callback = function(err, res){
var fn=this._callback;
this.clearTimeout();
fn(err, res);};








Request.prototype.crossDomainError = function(){
var err=new Error('Origin is not allowed by Access-Control-Allow-Origin');
err.crossDomain = true;
this.callback(err);};








Request.prototype.timeoutError = function(){
var timeout=this._timeout;
var err=new Error('timeout of ' + timeout + 'ms exceeded');
err.timeout = timeout;
this.callback(err);};













Request.prototype.withCredentials = function(){
this._withCredentials = true;
return this;};











Request.prototype.end = function(fn){
var self=this;
var xhr=this.xhr = request.getXHR();
var query=this._query.join('&');
var timeout=this._timeout;
var data=this._formData || this._data;


this._callback = fn || noop;


xhr.onreadystatechange = function(){
if(4 != xhr.readyState)return;



var status;
try{status = xhr.status;}catch(e) {status = 0;}

if(0 == status){
if(self.timedout)return self.timeoutError();
if(self.aborted)return;
return self.crossDomainError();}

self.emit('end');};



var handleProgress=function(e){
if(e.total > 0){
e.percent = e.loaded / e.total * 100;}

self.emit('progress', e);};

if(this.hasListeners('progress')){
xhr.onprogress = handleProgress;}

try{
if(xhr.upload && this.hasListeners('progress')){
xhr.upload.onprogress = handleProgress;}}

catch(e) {}






if(timeout && !this._timer){
this._timer = setTimeout(function(){
self.timedout = true;
self.abort();}, 
timeout);}



if(query){
query = request.serializeObject(query);
this.url += ~this.url.indexOf('?')?
'&' + query:
'?' + query;}



xhr.open(this.method, this.url, true);


if(this._withCredentials)xhr.withCredentials = true;


if('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)){

var serialize=request.serialize[this.getHeader('Content-Type')];
if(serialize)data = serialize(data);}



for(var field in this.header) {
if(null == this.header[field])continue;
xhr.setRequestHeader(field, this.header[field]);}



this.emit('request', this);
xhr.send(data);
return this;};






request.Request = Request;
















function request(method, url){

if('function' == typeof url){
return new Request('GET', method).end(url);}



if(1 == arguments.length){
return new Request('GET', method);}


return new Request(method, url);}












request.get = function(url, data, fn){
var req=request('GET', url);
if('function' == typeof data)fn = data, data = null;
if(data)req.query(data);
if(fn)req.end(fn);
return req;};












request.head = function(url, data, fn){
var req=request('HEAD', url);
if('function' == typeof data)fn = data, data = null;
if(data)req.send(data);
if(fn)req.end(fn);
return req;};











request.del = function(url, fn){
var req=request('DELETE', url);
if(fn)req.end(fn);
return req;};












request.patch = function(url, data, fn){
var req=request('PATCH', url);
if('function' == typeof data)fn = data, data = null;
if(data)req.send(data);
if(fn)req.end(fn);
return req;};












request.post = function(url, data, fn){
var req=request('POST', url);
if('function' == typeof data)fn = data, data = null;
if(data)req.send(data);
if(fn)req.end(fn);
return req;};












request.put = function(url, data, fn){
var req=request('PUT', url);
if('function' == typeof data)fn = data, data = null;
if(data)req.send(data);
if(fn)req.end(fn);
return req;};






module.exports = request;});
__d('component-emitter/index',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.




exports = Emitter;







function Emitter(obj){
if(obj)return mixin(obj);}
;









function mixin(obj){
for(var key in Emitter.prototype) {
obj[key] = Emitter.prototype[key];}

return obj;}











Emitter.prototype.on = 
Emitter.prototype.addEventListener = function(event, fn){
this._callbacks = this._callbacks || {};
(this._callbacks['$' + event] = this._callbacks['$' + event] || []).
push(fn);
return this;};












Emitter.prototype.once = function(event, fn){
function on(){
this.off(event, on);
fn.apply(this, arguments);}


on.fn = fn;
this.on(event, on);
return this;};












Emitter.prototype.off = 
Emitter.prototype.removeListener = 
Emitter.prototype.removeAllListeners = 
Emitter.prototype.removeEventListener = function(event, fn){
this._callbacks = this._callbacks || {};


if(0 == arguments.length){
this._callbacks = {};
return this;}



var callbacks=this._callbacks['$' + event];
if(!callbacks)return this;


if(1 == arguments.length){
delete this._callbacks['$' + event];
return this;}



var cb;
for(var i=0; i < callbacks.length; i++) {
cb = callbacks[i];
if(cb === fn || cb.fn === fn){
callbacks.splice(i, 1);
break;}}


return this;};










Emitter.prototype.emit = function(event){
this._callbacks = this._callbacks || {};
var args=[].slice.call(arguments, 1), 
callbacks=this._callbacks['$' + event];

if(callbacks){
callbacks = callbacks.slice(0);
for(var i=0, len=callbacks.length; i < len; ++i) {
callbacks[i].apply(this, args);}}



return this;};










Emitter.prototype.listeners = function(event){
this._callbacks = this._callbacks || {};
return this._callbacks['$' + event] || [];};










Emitter.prototype.hasListeners = function(event){
return !!this.listeners(event).length;};});
__d('reduce-component/index',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.










exports = function(arr, fn, initial){
var idx=0;
var len=arr.length;
var curr=arguments.length == 3?
initial:
arr[idx++];

while(idx < len) {
curr = fn.call(null, curr, arr[idx], ++idx, arr);}


return curr;};});
__d('FastPaper/src/api/Readability',["q/q","superagent/lib/client","NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if("value" in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}

var Q=require("q/q");
var sa=require("superagent/lib/client");var _require=


require("NativeModules");var Config=_require.Config;var 

ReadabilityAPI=(function(){function ReadabilityAPI(){_classCallCheck(this, ReadabilityAPI);}_createClass(ReadabilityAPI, [{key:"fetchText", value:
function fetchText(url){
var d=Q.defer();
var host="https://www.readability.com/api/content/v1/parser";

sa.get("" + host + "?token=" + Config.READABILITY_TOKEN + "&url=" + url).
end(function(error, res){
if(error){
d.reject(error);}else 
{
d.resolve(JSON.parse(res.text));}});



return d.promise;}}]);return ReadabilityAPI;})();



module.exports = ReadabilityAPI;});
__d('FastPaper/src/api/User',["q/q","NativeModules","react-native/Libraries/react-native/react-native"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if("value" in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}

var Q=require("q/q");var _require=


require("NativeModules");var Pocket=_require.Pocket;var _require2=


require("react-native/Libraries/react-native/react-native");var DeviceEventEmitter=_require2.DeviceEventEmitter;var 

ArticleAPI=(function(){function ArticleAPI(){_classCallCheck(this, ArticleAPI);}_createClass(ArticleAPI, [{key:"restoreSession", value:
function restoreSession(){
var d=Q.defer();

Pocket.getLoggedInUser(function(error, res){

if(error){
d.reject(error || res.error);}else 
{
res.isLoggedIn = res.isLoggedIn === "1";
d.resolve(res);}});



return d.promise;}}, {key:"login", value:


function login(){
var d=Q.defer();

Pocket.login(function(error, res){
if(error){
d.reject(error || res.error);}else 
{
res.isLoggedIn = res.isLoggedIn === "1";
d.resolve(res);}});



return d.promise;}}, {key:"logout", value:


function logout(){
Pocket.logout();
return Q();}}]);return ArticleAPI;})();



module.exports = ArticleAPI;});
__d('FastPaper/src/actions/Page',["FastPaper/src/EventConstants","FastPaper/src/api/index","q/q"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var EC=require("FastPaper/src/EventConstants");
var api=require("FastPaper/src/api/index");
var Q=require("q/q");

module.exports = {
setPage:function(page){
this.dispatch(EC.UI.SET_PAGE, page);}};});
__d('FastPaper/src/actions/PocketQueue',["FastPaper/src/EventConstants","FastPaper/src/api/index","q/q"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var EC=require("FastPaper/src/EventConstants");
var api=require("FastPaper/src/api/index");
var Q=require("q/q");

module.exports = {
sync:function(){var _this=this;
var queue=this.flux.stores.pocketQueue.getQueue();
var username=this.flux.stores.user.getUsername();
if(queue.length <= 0 || !username){
return;}


api.article.
modify(queue).
then(function(res){
_this.dispatch(EC.SERVER.REMOVE_DELAYED_ACTION, res.action_results);}).

catch(function(err){
_this.flux.actions.analytics.error({
name:"Pocket-Articles", 
request:"Sync queue", 
err:err && err.response?JSON.parse(err.response.text || {}):err});


return Q.reject(err);}).

done();}};});
__d('FastPaper/src/actions/Settings',["FastPaper/src/EventConstants","FastPaper/src/api/index","q/q"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var EC=require("FastPaper/src/EventConstants");
var api=require("FastPaper/src/api/index");
var Q=require("q/q");

module.exports = {
setColorTheme:function(colorTheme){
this.dispatch(EC.UI.SET_COLOR_THEME, colorTheme);}};});
__d('FastPaper/src/actions/Text',["FastPaper/src/EventConstants","FastPaper/src/api/index","q/q","react-native/Libraries/react-native/react-native"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var EC=require("FastPaper/src/EventConstants");
var api=require("FastPaper/src/api/index");
var Q=require("q/q");var _require=



require("react-native/Libraries/react-native/react-native");var AlertIOS=_require.AlertIOS;

module.exports = {
fetchText:function(id){var _this=this;
var text=this.flux.stores.text.getTextById(id);
if(text){
this.dispatch(EC.UI.SELECT_TEXT, text);
return Q();}


if(!this.flux.stores.settings.isConnected()){
AlertIOS.alert(
"Error", 
"You must be connected to the internet to fetch text.", 
[
{text:"OK", onPress:function(){}}]);



return Q.reject();}


var article=this.flux.stores.articles.getArticle(id);
return api.readability.fetchText(article.resolved_url).
then(function(data){

var text=data.content;
_this.dispatch(EC.SERVER.TEXT_RECEIVE, {
id:id, 
text:text});

_this.dispatch(EC.UI.SELECT_TEXT, text);

_this.flux.actions.analytics.fetchText(data);
return text;}).

catch(function(err){
AlertIOS.alert(
"Error", 
"Can't fetch article text. Please try again.", 
[
{text:"OK", onPress:function(){}}]);



_this.flux.actions.analytics.error({
name:"Readability", 
request:"Fetch text", 
err:err && err.response?JSON.parse(err.response.text || {}):err});


return Q.reject(err);});}, 



setWPM:function(wpm){
this.dispatch(EC.UI.SPRITZ_SET_WPM, wpm);}, 


play:function(){
this.dispatch(EC.UI.SPRITZ_PLAY);}, 


pause:function(){
this.dispatch(EC.UI.SPRITZ_PAUSE);}, 


toNextSentence:function(){
this.dispatch(EC.UI.SPRITZ_NEXT_SENTENCE);}, 


toPrevSentence:function(){
this.dispatch(EC.UI.SPRITZ_PREV_SENTENCE);}, 


destroyReader:function(){
this.dispatch(EC.UI.SPRITZ_DESTROY_READER);}};});
__d('FastPaper/src/actions/User',["FastPaper/src/EventConstants","FastPaper/src/api/index","q/q","react-native/Libraries/react-native/react-native"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

var EC=require("FastPaper/src/EventConstants");
var api=require("FastPaper/src/api/index");
var Q=require("q/q");var _require=



require("react-native/Libraries/react-native/react-native");var AlertIOS=_require.AlertIOS;

module.exports = {

restoreSession:function(){var _this=this;
return api.user.
restoreSession().
then(function(data){
_this.dispatch(EC.SERVER.LOGIN, data);

return data;}).

catch(function(err){
_this.flux.actions.analytics.error({
name:"Pocket-User", 
request:"Restore Session", 
err:err && err.response?JSON.parse(err.response.text || {}):err});


return Q.reject(err);});}, 



login:function(){var _this2=this;
return api.user.
login().
then(function(data){
_this2.dispatch(EC.SERVER.LOGIN, data);

_this2.flux.actions.analytics.login();
return data;}).

catch(function(err){
AlertIOS.alert(
"Error", 
"Can't login", 
[
{text:"OK", onPress:function(){}}]);



_this2.flux.actions.analytics.error({
name:"Pocket-User", 
request:"Login", 
err:err && err.response?JSON.parse(err.response.text || {}):err});


return Q.reject(err);});}, 



logout:function(){var _this3=this;
this.flux.actions.analytics.logout();

return api.user.
logout().
then(function(data){
_this3.dispatch(EC.SERVER.LOGOUT);

return data;}).

catch(function(err){
_this3.flux.actions.analytics.error({
name:"Pocket-User", 
request:"Logout", 
err:err && err.response?JSON.parse(err.response.text || {}):err});


return Q.reject(err);});}};});
;require("FastPaper/index.ios");
//@ sourceMappingURL=/index.ios.map